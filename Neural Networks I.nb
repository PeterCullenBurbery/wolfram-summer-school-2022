(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2367017,      46898]
NotebookOptionsPosition[   2269266,      45069]
NotebookOutlinePosition[   2309992,      45911]
CellTagsIndexPosition[   2309768,      45902]
WindowTitle->Neural Networks in WL
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T9M3EyfwPFXd1dceVX6a9NScGWygPJnwwaWhH+bB4lX99zLNZxETjqh
SGlokBAFSBSkiBDFFigpghRpCyIkkCKQHhqaNDQUNBQUaSgofre7BLBnxvZ4
157xw/O19HmiJ9m1vTPjmZ/H45l///v/VP/rn/72t7+9/dfmf6rT//d4bm56
fuTfmv/zevbtf/9j9vf/fDb7v7//4/e5//j7Pzf/crrppPn5f2n+KWxsbGxs
bGxsbGxs+W1//AYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAIAC+7lXC7H7XvOzu3ffuTy0PN5hTS4Cx7pKcZ4X
jVHZX3spG+/Lsjp/bX2hIo0Pr+R0x/a8g97c/YbdFL/Bdp+d+P6mq31eHpq+
n96V1XmlTItWGmd1PtblNG35qoTK18ZiRb7VR+V8L8XvPwyfZ5oyfuPSOu19
pbHPvM3jGku336yuM2dlMi79v0/Ij3pVthcHb4+xOv9C6ivDcvx1wnI/3del
9mU+Kb2ybCN8HC+PdgmAb1dfKvLg4aOAJ3JicX2ff3gW+l7P2xGL49XkU+1R
6HvbX5Pq1ZocrbyQqd5HynnqespPpP5x1Dq+OV7oD32/f/5V1+mp7jO13rL8
7HafvSWZmn4mGysjcv69g99xOCoz2j6fy3kGaTGzMtZBuo7JnPY7++RoL5tr
4HSzYlW+qtNl2f8ymfy73/eFvrdaT/5OyPdXUrUsl77S2Gfe5nGNebnOHJZJ
k4svVVma7kv+naWBdr0aW+a7rUuVMv+g9MKYR2b5tRE+jpdHuwSgAJr13FSo
jijJt53k732bLSl1clkuEo83LkuhOqpfjmLaqaudEZmzqNM0I2U5sWj/jt+H
67VqFvH2+y5jgbLeznS3z8eytPI61W+4qJeN+0m+N7I4b8PvS/Jz64XhfPrk
oOt4e1I+zZRSp+nU26HY36D+7k7i7eA1GVcufaWxz7zN4xrzcZ25LJPqMbZn
LeJsRU9tUM4i+mK6rkvVdsiyLOXdRvg4Xh7tEoAimJT1UrhuSI4PxmVBq3P6
ZH834Vh7I1ofRlSMfvl1SPq7aVMfDshBwvkUMt7u1e9but5n+7fZPH9oeSON
mcfmNn0hXTxhPu/H0miki9u1e7tf5a27/u3o32mlXJYzy9/tPN52kMY+8zaP
a8z9dea2TN46HJPVcjdp91R+GPIm83jbon/bRRvh43jE28D9dfA23OZNvU+I
qxpD0mOoT5Y248f6XSp9Wf1RY1B2quG4PNAOry5X2+Pirlr9LK2x4I1R+bb4
PKIefCLHMX0KTuLtkRdytPVKDjZtjDQ/O649e1T32TNdaabBuJx+Hbt11hiT
k+ZxthfLMlMypcUjWbeJ+74bxpLctrXpxpRExS+p4nbT2JZfZaGbePti09SH
3y8ba6/k/Nf44aub8rVcNpTHAflh2dfnPt7OP4195m0e15jz68xxmbw2ERlr
z72tyNGX8dtx05d7k3JSH5KFETX+75P9Hf2eynm87aiN8HE84m3g/jpTxmI/
qFVi3306W3tqrLMj4+dfThYHQp9f+DBu+FxNNgxtQqvti431vo/J+oihfpt+
GTl2zkW8XU26d8lpn+dbL/X2weIZ7cXm88B3SrIwG86zTynGlNyet/ospPdZ
cj+c8XyyircNZSyxb7Am+++f/Pp8a2xN9LtQXuJtx2nsM2/zuMZcX2euy2TL
wbxhDEnpmRzvxl/TJ2t3+VT/bD6G23jbXRvh43jE28D9dfX1Zbi/OrbNDDzz
1NrauP7P1veC/ejm8cA/6/p4zp5m/WQ398GksX6rf8mpjSj4PvW0TBrz3Myj
6UB/VqnZ3jeGQ2UjTWwT93x+I6LdVs9nezrq+XoX8fb310q/6mNpWLyz0HL2
sSKfEp7jFKF/O+809pm3ecUj7q4z92VSdgzPJG3Gn/xy0byvqH+Mfh/WZbzt
so3wcTzibeAe057r9sWMMxuTd4HPTk0H64a4dy0nZDX0/HVAfmjP1WpSV+um
Zux/mua3aO1Wqz9hyOr58X2Lt1vpua70y8TGfs20C7Z5188rJsPvuKYYUxI6
71K/VHuD+64m70Md759ZvK3MhZC2jKXML2fxtsM09pm3RYu3U19nHsrkvjZO
fsBuHEXuaWcu89Hxtts2wv3xiLeB+02vU9a3zPffV41gX3ifNOpDoXZi4WNE
P4vanpQH9frU0AcTub8YJ8tPwnVbxP1DsWLjPPY5KavKM4i4OODiY/j5/urm
9WcP3oafQ3+K6ZuJPu9+WZgJ7id53snQuKXeAVmd7Q/laTfxdnhOnv5cYw93
/dvu0thn3hYv3k53nTkvk3vqvh/JXEdzN+aYJ7bxtuM2wvnxcizfAIpBnTN4
ZtE83+rpSrCdfCbnh+OyEPhe/6y5b+vy82BiHXKq1Ul2c4FrDH1nprHixYqN
89hnLcXcM+rz/bu5GtU522yPHz7vAdmvV0Jt1008H3XuGyPBcjUsR6Hx/1nG
2834I6K8Z5Ff7uJtd2nsM2+LF2+nuc7cl0l1rYSs+7YzyRPLeNt1G+H6eHmW
bwDFoL4b3zNjet6ljO+dftn+++1a4O96nxvHBJ6uhOutJa2PQJ8Lq/O5tfR9
md7lLFZsnMc+J2QpFAfEzKGttne1yl3+q+ONLN+JU/tAj/eUMUVx7w3tDIfe
71/fmlD62bt7X1J9/t+ObxaqHa+RGJdfLvu3XaWxz7wtXryd4jrzUCb3lfmn
ovpE/KSducyb423XbYT7NinP8g2gIJQ20DxONzx2+6YP/Eeob8o8hjs8ftA0
T68+D3jUmBYb2hwqhrm+ixUbZ79PfR6Z6DjmXBlL8m4t2PeitxVx7/uYz7t5
7MPf5GQhHKdFnc/JcrBMPZFTbY6ALucDNK7p86g9tuHTx9GuYhx/8ba7NPaZ
t87mJ8nhOnNfJvU4fr2e/brmep6k7Js/fG0Rb7tuI9y3Sd2UQwB/FmPKGjZ6
m9GaxyRYD9zMQ6COFdGfk6n1luGZnOF5ajd1mzrXt2m8eJFi46z3ebY5qM9H
EDnP4xvZrgU/W9LWLlLjcZtz0GKy1jNsZTxkOK6/Ky/BvtLr/rhs4+3ktUX6
ZGmxKmcdPHf3Gm87SmOfeavNjdL7ROorFakvJliuploXNPvrzEOZNMynn7o8
dlDmW/cI64uDsrFgaV6PRbW8ct1GeGiTOi2HAP5M9Pm5NpS6JTwmJDAGUJnX
omdmOLxv5d8fjBjaI61u6y6e+qn1FenzobhaX7K/3CfVWCXpKT0zzNdi3mcr
Rrlq5tfl99ovb9rrYPzcHZfjjy/lnbZGxbXI9xz3LN5lVT/zMHlMiRaTtfNT
ia0MZcF8X6f203Ubb1+fS8NiXeuZ2UE5bti3s17jbUdp7DNvO18HspRqnfjM
rzMfZVK7bjuYq7CDMt81q3g75zbCQ5tkSkvibeD++aGsRzO3HHwmqMTjobZU
md9EGd97+aUSrj9Mz38zrtu08TGGdqZY67lHt4NZtGXvlqOf76rvU5nfldXn
sEmaZ9kck6nPVfXxR6Hv3ZalrPu375zVX8pcxFqBofIx04xxdtKOo/ERb+ef
xj7zNo9rzMV15qVMZl2v5ph2IQ7i7cQ2wkObZEpL4m3g/rncCo8Lac0bcPvv
h6MyF/i3qYVwu/IjNHYzPD5bXb/SGH9kXLddfg7H+MWPt6P73rpryx7Lesw6
Fa1Y51Mt/PltbWz9tdDcNA+T1xONisnUd/XD8f14aFzT3frg+cXb197IaT26
zzJoISGmKkK8nXca+8zbzq+H+Hk58r3OPJVJ4u1IiW2EhzbJlJbE28A9pM5Z
FHifQ12DUu3bjBvDfRRaR1gfG3x9bPW5Z/Nzluurmahz2JnmTXETb/fL0nxZ
lt4+j7UwX5GziHmmOmvL+mR1cVjOk8Z6GvI8coyrNqfV09h1HyJjMvVZSal8
V85Cz0KC9215x9t3Lr6+ko3Z+DSfi4m5CxFv55zGPvNWG/eRcN93c17pr90M
rzNfZdJQr0avSda5zvIkeJ4W9ZDrNsJDm2RKS+Jt4D5S14C8W3PhbO2Z8e9v
qWsT3s45pbSlUWtzKf3nHcUpAVrdZqi/nbzbmPY9fYt9Phh5IcefR+V463Xb
j62qvFPW22itX2azb/XZQ8vU9IDM1AwM/WxxY0qiYzJ1/sm7PvWj4Dzw5WCe
uYu3b1ztjcn2vDr/bjBetMuv1PNBNIZCz507i7fzTWOfeetqPsAsrzNvZTLj
ejW3PLGZD9B1G+GhTcqzfAMolm/KvH0388iG5vMzvletjO+96ddS66xa1Ly8
apubtGZGPHUsuundraLMJZJ6n4bx7/q7ODZxnmGt4pTi+rHiYjLz+KSJ0HiD
8Bp47uPtW3ujsl4zPNOPmGNaza+plPPVqXnZabydZxr7zFtn829ndp35LJN6
vbrURb2aW55Yzb/tuo1w3yblWb4BFIs6Rve6bg7P4RUVP/xYCK8R1x6btlsN
9dWp476DDuaV9/KDa66kEl6/Lqrt/NPG28Z9GmLniOeVtwxrnqUXPaYkNiZr
5XdwHY5m+3oaGrOkjm30GG9HlKmo+XOPlLVa05aBNOt5+kpjn3nrd72bDq4z
z2UyvJbQoy7mK8wxTyzXl3TdRrg+Xp7lG0CxXGlziYy21yIIxmVRc5CqY7jX
t97I1ecXyt9F9wWpczx3PHdV46U2J66pD+p+xdvm3z0TM85YXX+hp/zUYq7c
skwpz9Sj8jQpJrtUxvP2lwL9ddpzEN/xtv4OQ9SaLtp7pSnXpNPmOn/febyd
Vxr7zFvv60umvM58l0l9PfeId2hcpF0Uy3jbdRvh+nh5lm8ABaPOlT39Us5D
bWf0unGt7wbXVmjNTXASmrM7oa5Sj/0wvj88yoGyfrFxfZ0/7mG8bfztUfml
99PZruVwrPTfRq0PnRSTtdfBVsfD/qI/8/Yfb+vl01ye1fvOqPJnps4XE/8M
21ca+8xb7/F2quusAGVyT1+3Jas1OTPLE8t423Ub4fx4OZZvAEWjrD1RLktj
MRAzR6yJdfPdYAzXMz0o2/PB+XZNa8SHhdd9v24/0vTF6P090fWV79g4l30a
1kTrmR3WP6eM82mvvWAZE9rGk8kxmTqP5N3+9HPJNt4+/VCRRsL84Ylp1vtU
Ti3baOsxs7vqHL3x80n4SmOfeVuEeNv6OitImdTr1fTzlFzuTESOQ3EWbxt/
S35thI/jEW8Dfx3h+fvCz4Ljnm23hMZw95akP9DH1TMzlDz2rTGkr49ceh47
79ytZpyjvk8e9+zUe2yc0z5PlvX5C9Q179QxD628sT+nMXmn7D95vE5EDLWj
57e5vzy7ePuifjPG6bGsb5rWHLe5LuJiAn2tVnUNKDPDet5l8xhx32nsM28L
EW9bXmeFKZOmevXh08g1bfXzu77H7n9r8ywr33jbZRvh43jE28Bfhz5m7c5q
wrv4et/no9u6ynaM47727K1Vvz2T493oOXQvG9XQWBab+wMXc/f5ieHD64rc
xG2h+deUsSRLmxOpzknt8zH17VnFZIY5AMxzDGYTb19+MfQ1zVbkdC9+fuaT
Nf2auFuvxXCcLf06eFAbjJxjvfX79uf1/uDgPPbJZcNdGvvM2zyu23yus2KV
Se3dv7YB2f8aV6fX5GgxfG8+s5jDu+dp4u0/3LURPo6XV/kGUEDGvhDLGEcZ
w53c1pqMy1LEWsYzs4NysDUm5zsTbSf1YVmfiVgHYmQwRd9gU+8TqS9XpL6Y
rPXuYGNLj1GLEW+b5y27jd20sST9cpRyvY4Lbf/6mBK7mEx9b/NZxJijbOLt
sw/R95JT02VpfHwtp40J+blXk4vdcTn+WJF3ZdPn49f6McWaN+e9ujwsP76O
N/c/KeeNUTlYq5jX7raY98JXGvvM226u2+trtyLHO3qclPl1VrgyOSGrxu81
f+v0c2lsvpazncnmcZrl8uuofFt+ob0b3WYYU+g63nbVRvg4Xh7tEoCCMszz
f1MHJtdNUXM6p4yPmuewEFG/WSm/SBmrpNdjmHu6KPG2OR+uY+LTFeU5eCdz
XBnGKKtrQdjGZHJYk7PGeNv5btQ9WXbjSc7rgxH3k/bqNveOzfuazudbbM19
n3wMX2nsM2+zWDvcNJ4+6+uskGWyGTdGxdxWSs/lxHBv7j7e/s1JG+HjeHm0
SwCKqtmG1PTr2LYO1eb1b9efZct+hKAJ+TRjegYab+rtkNUzXXWejbRM6aHu
M5t4u7N9Gt/TeV8Nvw/b9G4tXX/cNX2Msjo+P3zeHc6jFSiT60pM1tX+dl/L
qmm9kET90kgzRndnROYi5umI1md9DF9p7DNvu71uW0zrBGZ7nXVw3bsqk830
bhjGLiXWdzOVyDq863rv+yttPXe79iLfNsLH8fJolwAU17FhbgHbtWwvP1e0
70a9Z2Pj/HNVVqeT66CpmRdyYNEneMP0vlOqOtQwVlLdZ9x4yk7PM80+tbUu
Hg7IROj/m7FNh3PxauP8m/dU55Hn3e18aeo94IAcpxwDY/wNX0ZkfXYguW+x
t0+WFqsd3DO2TMr+4nOpJsbdJXk3/1LOUvwuX2nsM2+7vW5bNgxzX2Z7nZnm
YSlSmfxNfn59JRsWx+mvPZdvn+PHKHRd76nPy0bi5sEypFlObYSP4+XRLgFA
Kt8n5fTzK9lfG5LGh6rsf7j+8/jLuPzssG0D2g5r7TGrBx+HZXtlSPY3q9Jo
//laTneyWv/6jfzcGZPj231f//lt85WcNCY7XLcO95aTMnl9nLMvreMMyfba
8O2fR1ujcp7wzmbhuG4jaJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAMBfARsbGxsbGxsbGxsbGxsbGxsbGxsbG9ufcPt/3USN
BA==
    "], {{0, 97}, {732, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
tS6evSR+6VgLa8u+Vqg1uXW2LaRt7LLX5UftNu3dHbodLVcUrpzuFO4sv8p+
9eA1+mvZ11avp1yfvxF9Y6YruGui27f7+U3Pm497nHr6b9ne6r1tcfvmHeM7
13v1ezvv6txtv6d1r+2+xv3WPvW+lgfqD1r6NfpbH2o+vDygPdDxSO/RtUHD
wa4hs6Hbj60f33/i8OTRsNvwyNNtT8dGAkemR8NHvzxLeLb0POMF5sW+l8wv
i17xvap6Lf26eUxj7Oobszd94y7jzycCJj6+jX37azL7HfFd0ZTgVP20ynTn
e4v3Ax+2fpj8GP1xaSbnE8unY5+lPl/6y+ivvlnP2ckvtC+rc/u/cn89/U3t
W/e84/yr7xHflxb2/eD+UbeotXjnp8fPqaXEX7hfJcvSyx0rtisvViNWV6PJ
NPL6UQCFXHBQEABzpwEgegHAOgAAPeNG7rVZUNBayrGmS0TOMHrISasQ9EMk
yBOqg2E4Ap5AUVBz6DyMEmYMW4ELxZvRSdAzEmAGFJGFUZbJmpnGcpL0kk2A
3Z/jAhea24/nBp8gf67AFyEf4fuiOmKnJNgkM6SmZBxkm+UZFQIULyotqeiq
xqodV+/ReKO5qM2gw6Mro6elb2bgYOhtFGKcYJJjWmRWZ95hcc/ymdW09YIt
2o7Zns9Bcouyo46TibO1i4Ors5ubu4eHp6eXl7e391bvbd4+3ts9fd39nMn2
/hYBBoHqFJkgwWDWEFzIEvVz6Juwx+F3kFV5Jqoi+kBMMo0caxzHHfc5viuh
ODEqySZZNHk55emO5p17U/3SNNMZkbV1JbMgK2SXfjZr9vTuazmFe0L26uVy
5C7nofcbHGg6qHXowuHlQsEjskcVipSKlUtUS9XK1MvVj2lU6FRaHKecKDk5
Us1eY3zKpzbydEpdTv3hhvIzpxqbm9rP3mwePPfpgvDF6EsDrdJt4ZdL2ls7
Hl6Z6ly5xnFd+YZ7V0H3dI/VrfLbD+686Z29h70v3mf5ILA/9mH4gNsjzUGB
IfqhxccTTx4MX3/aMdI5ev1Z1/NrL5pfHn4V/tpkjHts7s3AePtE3dvyyUPv
dk8lT0e89/tg/1F1hjTz8dPtzzV/5cyGfnGYU/sq8k163uf7tR9Ki0d+vv7F
vey5UrO6uuYngAB4kVOiM5LnNIJ3kCQUBd2AeeEseA4VjfqB3osRxtzCxuEU
cF/x3XQV9KmEQAZPogujJ5M/czxLHqmOdYDtB4ckpw9XIfdDXiKfHf9+gX4h
orCTyGHRAXGChLlkglSt9COZb3LM8lIKaoraStrKqirSqgJqzOqQ+jeNSWS3
6tVu16nXLdPL099hEGq41cjB2MRE01TBTMycx4LZEmu5ZDVrPWkzYttnd83+
nEPVlkLHbKdYZ7KLo6uBm6w7lwfG44vnC69e74tbj2/L9Ynd7uNr7idHZiX/
8H8Z0BVYQ9kbFBZsH6JIZaF+DX0S1hpeEpEc6RmlEU2Kfh9znVYYGxinHo+J
H044lRifZJ7MljyRcmFHxk6HVL7UD2kd6QcyQjOds8wQz9DZrZGjtEd2r3iu
4D7uPNJ+wgH0geX87we/HJo7vFiIO8J1VKpIs9isxLF0a1lwOe1YasWeyoLj
x06cPnm5arB68ZR07bbTeXUt9c8aVhqFm8zPhjQfONd2/vNF9Uu7Wx61ES/r
t1M7Sq/c71y9pn49/EZN14ubLD1Gt6i38+409PbefX+f2Kf6wLs/62HjwNNB
7JDaY98n2cM1T3tG3j2jf674wvVl8qvK13fGFsaVJ2hvL07OTclNB7+v/vB6
hveT5+djf81+SfgqP09aoF+Ef378dWWFujn/9IATyAErJNspBvcgLGQJHYYm
YH34JIqI2o3GoQswEpgb2EAcCXcXv5fOgV6QfpHwmOEy8RRjKVMB80GWAlIZ
6ym2VvZejleci9wkHnleCz4y/06BYsGzQt3Cj0UmRT+JzYnPIqemEalu6VMy
u2S95RTlIflBhRrFRCUbZSHlBZV+1Vq1NHU3DTlNWHNEq0k7S8ddV0Z3WW9A
v9og0dDGSNBo3rjP5JRpmpm7uYIFxuKF5SWrfdZ+Nhq2BNsxuxb7XAcfJFJg
HEedGp0zXFxcxV2/u/W6l3mEeep6Ebyee5/ZmrLNyofD5+32877pfrZkTvKE
/9mAlEALCgvleVBtcEyILhVN7Q8tDvMLlw7/EnE5MiPKIpouui9mP80mFh97
Ky4r3iB+KaEtMTZJIel9ck2K7w6eHY935qdapcFp19LTMqwy+TOXssZ29Waf
312ek70nYq97rsE+iTxi3vz+Fwdu5jccPHIo83BiAa0w+ghyLCiKKY4piS6N
LKOW+x1zqbCptDvucyL5ZEXVrerPp9hrNU/b1TnXOzVsPbOj8VLTUrPlucLz
ry/KXkpo6WojXHZpL+l43il8Nfza1RusXaHdN3t4b8Xd7u+VuJt673GfzIOs
/okB90fDQwGP54f3jvCMNj03ejH8KmPMftzl7aF3C++PzNz64rowujb/G7/B
rRWsBgCnLABwPwKAizaC8wEQr0P2Dz0AHIkAuGoDmLsUQFejAbRN6s/+IQCM
kb1jF6gBt5DogUXihzUUBh2AmpFc7xvMCevCvvAuuA7uh7+ieFDGqBDUIST7
HkcT0BpoMvoAuh09hWHHmGPikaxrBMuANcYmYs9ip3EiOF9cJe4VXgQfgj+H
X6azoztB953ekb6JQCREEgYZtBhOEgnEBOIEoxNjF5MKUw0zN/MhFjqW3SSY
lMWKYc1lY2YrZRdnv8hhxjHCGcWF56rhNuV+y7OHV573CV86vxz/C4F8QTPB
ZaEO4RQRA1GM6EOxY+JhEvqSJMkPUj3SVTJZshQ5O3ltBQVFRSUDZTeVcNVd
SMhv0RjS/K7Nr2Opm6BXr//akNvIw7jU5LWZlHm8xW0rHutgm6O2xXYJ9kb2
qw5dW/Y7hjpRnbNdzrm+defxcPHM9+rbStzm5FO0fcSPiazqbxngFhhISQ86
EzxNVQ7NDBuKkEI871mMJq0o9ke8R0Jj4qdkzhSlHSY7vVLT09oz6DJDsh5k
a+yu2sO0Ny13Ks94f/aBlvyxQ4yHHQrOHVE7eqvYoeRBmVX57Qqnyh8nequu
1VyoLa5LaaA2bj1rfI79/JuLTS3pbdvbva/svNp2fbFbuyfi9r7e0ns1fc39
1wYeDU49wT/VHz3w/Nsr77GWCcIkearjA35G8jP4q+KLwFzJN7751oWIRfWf
v361rviuxw8xYAtiQBHoBOMQHlKAXKEUqArJ9L/A3LAJHAYfhW/AH5Gc3RTZ
TSpQfagltCx6Gzof3YWex8hgyJgSzCMsAWuJ3Y3twWFxNriDuBG8GD4Wf4uO
jy6Rbphem/4EgZ6QSJhi8GR4QDQldjJqMbYyaTC1Mxsy30Zy1FEShTTHmsXG
xlbHbsg+yhHPycbZyuXNDXM38njx0vF28sUicz0tcFqQKqQg9F24S+SgqK+Y
qji9+FuJbskaqVzpWBk/WSc5c3k9BU1FdSUNZR0VE1V7ta3qkRo5mrVaD7VX
dNX0ovTPGswZaRtnmwyZSZqnWzy30rWusFm2c7QvdLi35ZeTgnOgS6XrM2SO
t3me9PqwVX3bLp8hX3G/WHKn/0qgPiU1qCuEjuoeeipsIcIusjrqV4wX7XIc
d/zOhGdJSsk7Uq7u+Jmqk5aZ3p8pkpW8a2i3Uk7+ns+5Dvsa8pYOGOXvPNhy
aL7ArLDqKF0RrXik1KCs+hi+Iqpy+IT+ydpqtprcWuzp/HqBhkuN9k0TzUnn
CReOX1Jrudfmd3m+Y28n39WW6x5dcHdLD/U2353+uxn31fo+9FcPbB1kGbr+
JOApGCl/pv385cs9r1XGXo/vf6s7OTNV+d7hw/zM3k+Lf1nP7v5yfq7/6/S3
1e9cC6o/XBd3/mxY+rCstXJ0ff6lgStIB/VgCKxA0sjsZ0CN0AiMhdVgf/gw
3IWcIkRR7qhc1FXUV7Q02g9dih7CMGHsMHmY+1gi1hlbih3HyeNScQ/xEvhM
/Bs6S7oL9GL05QQOwlEGDoYyoiCxllGJsZPJjuk1ct5gYmkk2ZO+sJaymbHN
sVdzuHMSOLu4Urg1uL/ztPOm81nzcyJzfVXwqBANOYGoifKIoZG9Z0JiVHJQ
6iGSmT+RfSX3Uf6XIklJTtkGWdGFatfUP2kKaXloF+gM6rHr+xg0GC4ZO5o0
mNGZR1g8tbKxvm1rZzfiQHUETuUueq7j7vmehl7zW8/70Hw1/Ob8ywNlKU3B
MiG1oRJh9RGKke3RljEjsRHx2ISqJOPk1zuSUrFp+RlsmaW7RLKbcnT3PMgN
yIP2n8nfdgh7uLxQ4MjRIlxxYslUmXf5UIVn5bcT9VWUGtypfbXf6zzrW86w
NcY1DTdrn6u8gLkYeWm01bKtvV2po6FT7Gr5dcYbqV0fbnr09NxWuXPyLule
9v2FB+H9bwd8Ho0OeTx+Ouz69O6oyrOC5x9fGrzKf/3yjfx42sTApOi7pKkH
70U/JHy8MbPyWfkvm1mvL15zDl/1vonO4+bHv3csZPzQ/zG7mPmT9PPEEt1S
zNLoL5Nfpb+mlzWXdy8/XhFdoa40rcyuqq0mrV5Zm//YIFWV9e0DYjABAPNq
dfWrBAC4AgCWD6+uLlWtri5XI0nGCwBuhG/8r7O+1zADcOzmGrqdMpHx7/9X
/guSk9IK
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{669.59765625, Automatic},
  ImageSizeRaw->{732, 97},
  PlotRange->{{0, 732}, {0, 97}}]], "WSSBanner",
 CellMargins:>
  Dynamic[{{0, 0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01059602649006623 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11986754966887417` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.730589179683115*^9},ExpressionUUID->"3bb2d191-b234-4a2e-a519-\
8cc81e1dbc97"],

Cell[CellGroupData[{

Cell["Neural Networks in WL", "Title",ExpressionUUID->"90a5bf89-1d1c-4e3e-a294-98910a6f1695"],

Cell["A gentle introduction", "Subtitle",ExpressionUUID->"68a43722-ad61-4450-984a-df422291b743"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"acbee411-c6df-4ed8-8927-02c53c67df2b"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",
 CellChangeTimes->{{3.747422978429623*^9, 3.7474229792267604`*^9}, {
  3.77368590412461*^9, 
  3.773685907468301*^9}},ExpressionUUID->"03ada23f-8298-4c02-8abc-\
775ed1e8b4bd"],

Cell["Neural Networks as differentiable programs", "Item",ExpressionUUID->"ed82ca1f-d182-4611-b0c0-b26d0c2fac0e"],

Cell["Concept of training", "Item",ExpressionUUID->"ccd6e00e-b75a-4dcd-9a64-146ad9cdca51"],

Cell["Solve simple regression and classification problems", "Item",ExpressionUUID->"0407bf62-a71e-4c62-8927-20a320cd7235"],

Cell["Image classifiers training", "Item",ExpressionUUID->"e6449eb6-c433-480a-a28b-da7599ce42e3"],

Cell["Recurrent networks", "Item",ExpressionUUID->"9fd7f33d-9bde-4877-a82a-08c4e3dd032b"],

Cell["Model repositories and fine tuning", "Item",ExpressionUUID->"919eb348-20c6-4e70-8c91-5be8ad63d590"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d0b799b1-f1c4-42cd-a653-7c0d6a315472"],

Cell["Introduction", "Chapter",ExpressionUUID->"b2a5d562-5443-4195-b307-46dfdb113255"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8f3e4b9a-8cc0-4eb3-8377-44256f0a8670"],

Cell[CellGroupData[{

Cell["Why Focusing on Neural Networks?", "Section",ExpressionUUID->"c4a9049a-d33d-4344-86eb-9b2354ba8141"],

Cell[CellGroupData[{

Cell["Data Availability", "Subsection",ExpressionUUID->"1a2e5310-eb28-4abe-b777-858d8578f786"],

Cell["Big Data it\[CloseCurlyQuote]s not (just) a buzzword!", "Item",ExpressionUUID->"7228a061-d10f-479e-95c8-42a317f83002"],

Cell["Much more data, thanks to cheap sensors and bandwidth", "Item",ExpressionUUID->"e21cf8e7-4179-4410-9014-2839654fd4e1"],

Cell[CellGroupData[{

Cell["More user-generated data on the internet", "Item",ExpressionUUID->"a53d4e49-c7af-4afa-8c29-463d4bef2882"],

Cell[TextData[{
 "500 hours of video uploaded on YouTube ",
 StyleBox["every minute",
  FontSlant->"Italic"]
}], "Subitem",ExpressionUUID->"494b64da-d2eb-4108-ac1b-cc26f1522362"]
}, Open  ]],

Cell["Broader range of applications", "Item",ExpressionUUID->"f7ae4139-55a0-4e3b-9b21-13aead792094"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Much better Hardware and Software", "Subsection",ExpressionUUID->"18c009ed-4529-4aea-8998-78221fff806a"],

Cell[CellGroupData[{

Cell["Key players are very committed", "Item",ExpressionUUID->"f041fcc3-94e5-4076-949a-7d1246240f24"],

Cell["Dedicated hardware", "Subitem",ExpressionUUID->"b33c8af3-9757-45e6-903f-c11cf2083a6b"],

Cell["Optimized network code both on GPU and CPU", "Subitem",ExpressionUUID->"70950ec3-017d-4ad5-86e0-a3ae1090d211"],

Cell["Faster training on GPUs", "Subitem",ExpressionUUID->"00d73a68-0273-4f73-94ef-c04031f31273"],

Cell["Faster execution time", "Subitem",ExpressionUUID->"ed09a595-bdeb-4ddd-a61e-96247aaca5d6"]
}, Open  ]],

Cell["Huge community effort to improve deep learning frameworks", "Item",ExpressionUUID->"d389ae9c-d1ea-4ec4-96cd-4a4ec4b6360b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e1198a58-413d-4588-be21-22fde4db4cf3"],

Cell[CellGroupData[{

Cell["Why Focusing on Neural Networks?", "Section",ExpressionUUID->"e9718128-6d58-470e-acbd-3fa92beb2504"],

Cell[CellGroupData[{

Cell["Powerful Programming Paradigm", "Subsection",ExpressionUUID->"feeb7617-4c07-4845-aea2-9bc57db72d26"],

Cell[CellGroupData[{

Cell["Flexibility", "Item",ExpressionUUID->"88979ec5-c588-4748-b44d-2d92ac51abb3"],

Cell["\<\
Neural networks can be built and trained to solve a variety of problems\
\>", "Subitem",ExpressionUUID->"8f791383-24e6-415a-b303-17a2c8738c97"],

Cell["End-to-end training or...", "Subitem",ExpressionUUID->"14e5fba2-39e2-4dc6-bf6d-1770e61a109e"],

Cell["\<\
Integration with classical processing pipelines (e.g. feature extraction)\
\>", "Subitem",ExpressionUUID->"fe1dc0ff-dc7a-401e-bdf2-ecaa3158df83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["High tolerance", "Item",ExpressionUUID->"aa63ba71-b09b-41bd-8b28-ba5166ad592e"],

Cell["\<\
Fault-tolerance: corruption of individual weights has a limited effect on the \
network response\
\>", "Subitem",ExpressionUUID->"7b653659-0cd9-4d02-a8fe-4850841a72e8"],

Cell["Noise-tolerance: neural networks handle noisy data well", "Subitem",ExpressionUUID->"2402db4d-5148-40b3-8498-5fe7f8f8c0bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scalability", "Item",ExpressionUUID->"54a3ea34-91ff-4b59-a585-89539a465803"],

Cell["Parallelizable computation scale with extra CPU or GPU cores", "Subitem",ExpressionUUID->"7d739cea-7cc5-438f-95e7-da7f7c09c5ac"],

Cell["Learning algorithms are trained on few examples at a time ", "Subitem",ExpressionUUID->"f8e276fa-3db7-4e2a-b43e-0053c34bb148"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Better performance", "Item",ExpressionUUID->"8f0e007d-542c-42b8-94f6-a70b353385f4"],

Cell["\<\
In many tasks, neural networks already perform better than humans (e.g. lip \
reading)\
\>", "Subitem",ExpressionUUID->"bd908720-b8e2-4ec4-847b-7ae485851065"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0f7bb2fb-f2c0-4ea5-aebb-145ef1a92ecf"],

Cell[CellGroupData[{

Cell["Why Focusing on Neural Networks?", "Section",ExpressionUUID->"a44408b2-9a1c-4c02-9175-76f6bef6583a"],

Cell[CellGroupData[{

Cell["Good Results", "Subsection",ExpressionUUID->"0fea256d-c3f9-42da-b6ae-203299691acf"],

Cell["Neural nets provide state-of-the art results for:", "Text",ExpressionUUID->"c7ce2a52-4470-445d-bf7e-edece4bad4ba"],

Cell[CellGroupData[{

Cell["Image classification:", "Item",ExpressionUUID->"99fec734-092a-4a4a-be2e-005929507761"],

Cell[TextData[ButtonBox["ImageNet Challenge",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.image-net.org/challenges/LSVRC"], None},
 ButtonNote->"http://www.image-net.org/challenges/LSVRC"]], "Subitem",Expressi\
onUUID->"ab15388d-97dc-4908-b93e-166e19ba02d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Object and Image segmentation (at pixel level)", "Item",ExpressionUUID->"8711736f-3b69-4b3d-b860-cd2413f07450"],

Cell["Self-driving cars", "Subitem",ExpressionUUID->"d0a97116-184a-42fc-a3b2-2efe2ce68ff6"],

Cell["Industrial robots", "Subitem",ExpressionUUID->"3d97bf39-8545-4978-a830-1dc8a655c321"]
}, Open  ]],

Cell["Scene parsing", "Item",ExpressionUUID->"957bfb5c-ce46-4f64-92de-06e546243f2a"],

Cell[TextData[ButtonBox["Image captioning",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.tensorflow.org/tutorials/text/image_captioning"], None},
 ButtonNote->
  "https://www.tensorflow.org/tutorials/text/image_captioning"]], "Item",Expre\
ssionUUID->"9eeb9d26-263c-4f44-a76a-2db025616e28"],

Cell["Speech-to-text", "Item",ExpressionUUID->"7eec2272-d322-4437-b2e3-4ceeb4362cef"],

Cell["Text translation", "Item",ExpressionUUID->"68dc9270-345f-48e0-b703-de5e526a0780"],

Cell["...", "Item",ExpressionUUID->"5c81ea2d-23d2-4028-a989-ba9a22537ba0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1c459f35-782c-4116-b3f0-f3c25e012695"],

Cell[CellGroupData[{

Cell["What Are Neural Nets?", "Section",ExpressionUUID->"15df5c85-2bcd-44bf-a0ab-4d56d6338ddf"],

Cell["\<\
\[OpenCurlyDoubleQuote]...a computing system made up of a number of simple, \
highly interconnected processing elements, which process information by their \
dynamic state response to external inputs.\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"2495e29a-93c7-4c81-bfa7-7bd553735dd1"],

Cell["\<\
In \"Neural Network Primer: Part I\" by Maureen Caudill, AI Expert, Feb. 1989\
\>", "Text",ExpressionUUID->"951ca2e3-78ed-4b27-9726-5055ecde0cab"],

Cell["Originally inspired by biological neural networks", "Item",ExpressionUUID->"a3144b9f-0651-4aba-b967-4fd3fc0f1ba6"],

Cell["Computing systems that learn by examples", "Item",ExpressionUUID->"801c641e-cac3-40ed-9dea-2ddd2ac547f7"],

Cell[TextData[{
 "Modern term: ",
 StyleBox["differentiable programming",
  FontWeight->"Bold"]
}], "Item",ExpressionUUID->"202aa652-72c3-45eb-82fa-1117214d5bfd"],

Cell["\<\
\[OpenCurlyDoubleQuote]It\[CloseCurlyQuote]s really very much like a regular \
program, except it\[CloseCurlyQuote]s parameterized, automatically \
differentiated, and trainable/optimizable.\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"2e6d4e69-435e-41bc-9abf-3569b398e7af"],

Cell["Yann LeCun, Director of FAIR", "Text",ExpressionUUID->"43cc1a58-e6f1-4c5d-a54c-07f3e2446999"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"43e9098a-812b-4e75-8875-d40ec2c4a4c1"],

Cell["Differentiable Programming", "Chapter",ExpressionUUID->"c8568110-5720-4c8f-95c4-7742c5d7cc23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"dff7e46d-8b84-4d33-87de-18c576ac5dbb"],

Cell[CellGroupData[{

Cell["Function and Derivatives", "Section",ExpressionUUID->"67bdb204-637c-4267-8f77-ca0d0cc837cd"],

Cell["\<\
Most of us are familiar with the concept of function definition and \
application.\
\>", "Text",ExpressionUUID->"7c91a302-8895-4b17-928b-2a507144bbec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"e368cbf3-31d1-442a-bff2-e4093c816afc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"da42c95f-fe8e-44bf-b7fa-15e5c5332400"],

Cell[BoxData["4"], "Output",
 CellLabel->
  "Out[161]=",ExpressionUUID->"fa77d51f-dfee-4a23-af45-2fe75d34dbe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[162]:=",ExpressionUUID->"f87f8c3b-8e82-4200-a767-ccf1ff810ba9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
       "]]},
     Annotation[#, "Charting`Private`Tag$204060#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 0.9999999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[162]=",ExpressionUUID->"1888b621-7477-493c-aca7-9e5a74583dbb"]
}, Open  ]],

Cell["\<\
From calculus we also now that the concept  of derivative is very useful to \
measure the rate of \[OpenCurlyDoubleQuote]change\[CloseCurlyDoubleQuote] a \
function have at a given point.\
\>", "Text",ExpressionUUID->"016413ce-d212-4c3f-a1f9-1368bdf97aa2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellLabel->
  "In[163]:=",ExpressionUUID->"3862251f-d219-4d71-98c4-bdb8d980a345"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellLabel->
  "Out[163]=",ExpressionUUID->"a73600ed-8c6f-494f-bd65-320d9c003f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "1", "]"}]], "Input",
 CellLabel->
  "In[164]:=",ExpressionUUID->"2873caaf-524a-4aab-87b0-003bbe2e3610"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[164]=",ExpressionUUID->"91becc52-5de4-42eb-be81-30b36d1d3978"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], ":=", 
       RowBox[{"x", "^", "2"}]}], ";", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"f", "'"}], "[", "x0", "]"}], 
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}]}], "+", 
           RowBox[{"f", "[", "x0", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ",", 
           RowBox[{"3", "/", "2"}]}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Value: \>\"", ",", " ", "x0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Function: \>\"", ",", " ", 
                   RowBox[{"f", "[", "x0", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Derivative: \>\"", ",", " ", 
                   RowBox[{
                    RowBox[{"f", "'"}], "[", "x0", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{".1", ",", ".8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PointSize", "[", ".02", "]"}], ",", "Red", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"x0", ",", 
              RowBox[{"f", "[", "x0", "]"}]}], "}"}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Red"}], "}"}]}]}], "]"}]}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "0"}], "}"}], ",", 
     RowBox[{"-", ".9"}], ",", ".9"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"2c0daeaf-0e9c-43c5-9ec8-bdfc32356e99"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x0$$ = 0.608, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x0$$], 0}, -0.9, 0.9}}, Typeset`size$$ = {
    360., {113., 118.66457433634076`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x0$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`f}, $CellContext`f[
           Pattern[$CellContext`x, 
            Blank[]]] := $CellContext`x^2; Plot[{
           $CellContext`f[$CellContext`x], 
           Derivative[
             1][$CellContext`f][$CellContext`x0$$] ($CellContext`x - \
$CellContext`x0$$) + $CellContext`f[$CellContext`x0$$]}, {$CellContext`x, -1, 
           1}, PlotRange -> {(-1)/2, 3/2}, Epilog -> {
            Inset[
             TextGrid[{{"Value: ", $CellContext`x0$$}, {"Function: ", 
                $CellContext`f[$CellContext`x0$$]}, {"Derivative: ", 
                Derivative[1][$CellContext`f][$CellContext`x0$$]}}, BaseStyle -> 
              12], {0.1, 0.8}, 
             Scaled[{0, 0}]], 
            PointSize[0.02], Red, 
            Point[{$CellContext`x0$$, 
              $CellContext`f[$CellContext`x0$$]}]}, 
          PlotStyle -> {Automatic, Red}]], 
      "Specifications" :> {{{$CellContext`x0$$, 0}, -0.9, 0.9}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{634., {144.13403328722342`, 149.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->
  "Out[172]=",ExpressionUUID->"763b1580-c87e-4e0c-bcd3-e8adaee0df91"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2833d099-724b-468b-8133-2b65bfe93a4e"],

Cell[CellGroupData[{

Cell["Function and Derivatives", "Section",ExpressionUUID->"dfa776d2-808b-4166-82fb-003ef2434cc5"],

Cell[TextData[{
 "Even complex function like ",
 StyleBox["If", "Input"],
 " statements can be differentiated if we pay attention to the boundary \
conditions."
}], "Text",ExpressionUUID->"68267115-acdd-4921-86dd-57cf5363103b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "3"}], 
        RowBox[{"x", "^", "2"}]}], ",", 
       RowBox[{"x", ">=", "0"}]}], "}"}], "}"}], ",", 
    RowBox[{
     RowBox[{"-", "x"}], "/", "2"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[165]:=",ExpressionUUID->"5b22d2ab-0e66-48dd-bae0-776250ae234c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"1b008205-f8c2-463d-aaed-347051d673d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"x", "<", "0"}]},
       {
        FractionBox[
         RowBox[{"2", " ", "x"}], "3"], 
        RowBox[{"x", ">", "0"}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellLabel->
  "Out[166]=",ExpressionUUID->"b34701f0-a72c-4177-a6db-54a24508c8c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f\>\"", ",", "\"\<f'\>\""}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[167]:=",ExpressionUUID->"cda066d9-ed1f-4729-a4f4-ca050232fae5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwlxXks1gEYB3A0W4uRVmRRikxvRmgMaw/NamUdZCsz5ZhpaK85YmOU912p
xeJFzFENy5EjdDD1TXlLuc/wxs/Rawi/mjTeP1Lt+eOzz/4QqW+YjpaWlts/
/7cj48XNTRG8QNINy/QNjQheoPpGB+vVNRG8QI42Z0LmvovgBXIxko93fRHB
C+Qx+/NzQZ0IXiDf293VTldE8AIl9Mqvhb9ZAT9JQ0N6i23By+AnyPytdKeL
2RL4r/Q8sl3XcGIR/DgF3XP4MZa2AH6M1rOT0kHz4Eep1GDSNH96DvwIFZ12
iBm8owY/TGlRwYmHTn0DP0RJW6oSYpZnwA9Q8I1eq5GKafD9lPtanV8UMQW+
j1oEG/2nBybB95Dldo/jfiUq8J3UIEmPmJkdBd9BgvKZhbPzCPgPpLbNdcSL
QfDvySil0tlOux98G9k6i7blq13gW0nmtdzXnPgR/Eva5Vd739/kHfgGavit
NOywagFfReUqdcaCvBZ8CY0nGz8sdqoFX0IGe0/W+8zUgC+m60EVA81UA76Y
TqgjTO5qqsEX0vyK+EgSXQm+gCQ6msbIgDLwOXS5VKLct60MfA5lewWMDL4q
Ba8gza3WdXfjUvAK6tRLPabf/xh8Fo1Ktmb6Z5SAz6RAH7MmVWgOeDktra65
xrcrwMsoOa8XBgcV4GVUpErr9JzLAn+TmjoHlOf6M8GnUN2vKMv5cTn4OOpx
tbDfUyQDH0srKYNuZwPTwMfQpR1xZVeRCl5KF9wNdLQ/xYMPo2xlnGm4dyz4
UOo7pzrS3R0NPogKO87DsTwc/EXaPWG+8qcyBLwvHZ4dds0LDADvTdb60Q/s
wn3Ae5Krrv2TKbUX+KP0F1ps7oU=
          "]], 
         LineBox[CompressedData["
1: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
ChuikjzBvSQW1CA6vbHBRmaxxDFzcxb+BbGX/ow=
          "]]}, Annotation[#, "Charting`Private`Tag$205607#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQrWcv9ur///f7GcDgwf6g9rOrjeMR/PLzLbnp+97B
+VeucL86mPgWzpc9kC9iLvMGzt+afYSV/+4rOD+hx/DDzaaXcP6PSdUd++1f
wPmL+e5Jznj4DM6f42VYdLnzKZzflJNYoen5BM6vZl5VXvT2EZyf2HBe5dqK
h3D+1L1PZ8zJegDn77qvwbNG6R6cryzg4BQy7zacv0mrI+vR4xtw/v2jGxXM
zK7B+U91phrt33YZzhesW2mmx3gRztcxe6+z9PMZOL/Z5e2FnRXH4XzRkHUT
IsUPIez7dpT/hMouOH/p7ae9L1vWwflaTL82Z0cvgfNjA2W23E6eAuev/5Kj
/OJWC5xvyaq//MFTFzgfAOuDtaM=
          "]], 
         LineBox[CompressedData["
1:eJwVxX040wkAB3BHu2m9POqOe+hGdI3IFY94svTtSjs6NOuwK4x6zGuqtdJw
XpI6tcqd8YiUzvT+mHVP5FpoK2/pxetGzTG/X2pX+8klJdXd/fF5Po7bd/Hi
zM3MzNb/5/9X01ZcGCb98eZzWYGbno3xzc4Tu0ThKE7yKjW+DEZGEacj2SsG
8juWO3zLw/AxS1J+dkUcPmyZkmQjEjlJV1N6XJNw+ZUowLAnFprFBUcqrESY
lRsrcLZJwKESp90+J8SobdMZAxOSwZmr4nfNSUOUFXd/yp+paJsyLaPRMzG4
+WwLXyFCfLyrsO7jQXj9dVxfsUWCAKe0rXl+h8DIC1yimEmHi14Tws3MxzCL
lthcnQkjL8rH+O4IjqdmvjZMZSNlbaGl/aQUE1nXaV+G5KGBkdGn3leEoPny
r3+aKEClu3WPwkmGnLGWVKPuKA5zFY9OP5ThWvPz5oymY/ixZPTe/mUlsNu7
Iu6M9DjGHYPUrvpSTCbr+/cUFYK1mqn4zf8M7jxKcKh3l6H9D4G/skCO2LLs
2u+2l2OV4TP7XL4CD0rCE6+QciwZv/nOV92AlEnnUOflSgRWDdwP4atRN9AZ
37jvBjYGL7SYvN4K5QJNDaeiCScF2pyV9Z1gFJ80u/eNBq0hzHnchV2IbuwS
Wmta8NLROqu7rAdPtS08zZIO7BO7xZ606QennOhP3Hsf2idWPGGbDoTfHOmp
/EeIkawZowc9xrrzP1MKz25o3HyOamhDWM5MV2otesGarXomDxiG51yut0dd
H5iq5I20X0bA4vrS6TFamE2bXxIZDLj8e423yX0AU6G3ou8uJRC4c8aFrh/E
Yy/BoqWHSEg4vRKP2ifYHWG1wOnJUxSLm2106UOwlRH8WcxnEM7bwOZ/MYya
bZUX/jnwHO1jSXbB74cR4Zcd0HbLCN+sT4ODPSNQRu908p35G4tx5jbrogFv
GRssGsJegks/GJFxYhS8LrY3s9QE6bHuBwlxBBjsObdVFSZEOl/LcUkkcFs+
+ENklQluml89n6UQWHlAElteY0LHNLckXkxgvkO91PauCbOTHkYJ8wi0p3iO
Wk+YcDig88WOcwTWWS4rnB9EIYfWwhDoCbzd89auJpQC91y1yn6EgOJxa3Vw
BAUHv/zUIYKAvUJ4U7qdQqPYvzvqBYGZMPlThoTCh1H1qcj3BOqrHPzo5ymk
q5tcttqSSJ1HtZ6/QiEw+uygLZMEK62Rx1FSsJ3Okg4sJiHbFJWQr6Jww2Pt
ON+FhOhVWZFFD4U3lar6CB8SrtuS7Kt0FFrWnE78ik1i5M7qS+uHKJToMhZp
15Lgluoac59TWGXFzg7nkLA0vxjoSFGgXbXzsNlEoik5rbf5NYXe76cNfcEk
9vdxBDHTFOSjA7LiUBLfwsb46RMFcXYDJyyMxL/YPwdW
          "]]}, 
        Annotation[#, "Charting`Private`Tag$205607#2"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 1}, {-0.5, 0.6666666394557823}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"f\"", "\"f'\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[167]=",ExpressionUUID->"e7b2a06e-9f98-416a-bfa9-dc1c5193e4c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"62ff2068-dad5-448b-a851-fc71593ce729"],

Cell[CellGroupData[{

Cell["Function and Predictions", "Section",ExpressionUUID->"faedd495-fafd-436d-9571-11330e6fcec5"],

Cell["\<\
Function can be used to predict values.\[LineSeparator]The simplest one we \
can write is a linear model that takes a scalar and returns a scalar\
\[LineSeparator]This model depends on two parameters.\
\>", "Text",ExpressionUUID->"3fdbb2cd-7560-47db-985f-0c053935243e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}]}]], "Input",ExpressionUUID\
->"14881753-eaae-4cbc-9548-a11d343bd542"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"3", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GrayLevel", "[", 
              RowBox[{".5", ",", ".5"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Beta]"}], "}"}], ",", "1", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Tanh", "@", "\[Alpha]"}]}], "}"}]}], "]"}]}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Thick", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Beta]"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Beta]"}], "}"}], ",", "1", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"Tanh", "@", "\[Alpha]"}]}], "}"}]}], "]"}]}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Alpha] \>\"", ",", " ", "\[Alpha]"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Beta] \>\"", ",", " ", "\[Beta]"}], "}"}]}], 
                "}"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "2.8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[682]:=",ExpressionUUID->"5f7dc513-5e3f-4195-8376-1e1916999db8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.5350000000000001, $CellContext`\[Beta]$$ = 0.9199999999999999, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0}, -1, 1}, {{
       Hold[$CellContext`\[Beta]$$], 0}, -3, 3}}, Typeset`size$$ = {
    360., {107., 110.95588344016357`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 0, $CellContext`\[Beta]$$ = 
        0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`f}, $CellContext`f[
           Pattern[$CellContext`\[Alpha], 
            Blank[]], 
           Pattern[$CellContext`\[Beta], 
            Blank[]]][
           Pattern[$CellContext`x, 
            
            Blank[]]] := $CellContext`\[Alpha] $CellContext`x + $CellContext`\
\[Beta]; Plot[
          $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x], {$CellContext`x, -5, 5}, PlotRange -> 
          3 {-1, 1}, Epilog -> {{
             GrayLevel[0.5, 0.5], 
             Disk[{0, $CellContext`\[Beta]$$}, 1, {0, 
               Tanh[$CellContext`\[Alpha]$$]}]}, {Black, Thick, 
             Line[{{0, 0}, {0, $CellContext`\[Beta]$$}}], 
             Circle[{0, $CellContext`\[Beta]$$}, 1, {0, 
               Tanh[$CellContext`\[Alpha]$$]}]}, 
            Inset[
             
             TextGrid[{{"\[Alpha] ", $CellContext`\[Alpha]$$}, {
               "\[Beta] ", $CellContext`\[Beta]$$}}, BaseStyle -> 12], {-3, 
              2.8}, 
             Scaled[{0, 1}]]}, AspectRatio -> Automatic]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0}, -1, 
         1}, {{$CellContext`\[Beta]$$, 0}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{630., {137.13403328722342`, 142.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->
  "Out[682]=",ExpressionUUID->"86176a6f-37fd-4c4d-b6a2-47f1d6287577"]
}, {2}]],

Cell["\<\
Given a particular choice of the parameter and an input value, the model will \
predict an output value.\
\>", "Text",ExpressionUUID->"e047c723-f20a-456b-b4a1-ccfcaeb27186"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"3", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "->", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Value: \>\"", ",", " ", "x0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Prediction: \>\"", ",", " ", 
                   RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                    "]"}]}]}], "}"}]}], "}"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2.8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Alpha] \>\"", ",", " ", "\[Alpha]"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Beta] \>\"", ",", " ", "\[Beta]"}], "}"}]}], 
                "}"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "2.8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"PointSize", "[", ".02", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                 "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"PointSize", "[", ".01", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                 "]"}]}], "}"}], "]"}], ",", "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                   "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", ".5"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[687]:=",ExpressionUUID->"8ed37e9c-84db-406c-bfda-ace585692a53"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x0$$ = -2.26, $CellContext`\[Alpha]$$ = \
-0.45499999999999996`, $CellContext`\[Beta]$$ = 0.010000000000000231`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.5}, -1, 1}, {{
       Hold[$CellContext`\[Beta]$$], -1}, -3, 3}, {{
       Hold[$CellContext`x0$$], 1}, -3, 3}}, Typeset`size$$ = {
    360., {107., 110.95588344016357`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x0$$ = 1, $CellContext`\[Alpha]$$ = 
        0.5, $CellContext`\[Beta]$$ = -1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`f}, $CellContext`f[
           Pattern[$CellContext`\[Alpha], 
            Blank[]], 
           Pattern[$CellContext`\[Beta], 
            Blank[]]][
           Pattern[$CellContext`x, 
            
            Blank[]]] := $CellContext`\[Alpha] $CellContext`x + $CellContext`\
\[Beta]; Plot[
          $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x], {$CellContext`x, -5, 5}, PlotRange -> 
          3 {-1, 1}, Epilog -> {
            Inset[
             TextGrid[{{"Value: ", $CellContext`x0$$}, {"Prediction: ", 
                N[
                 $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]]}}, BaseStyle -> 12], {1, 2.8}, 
             Scaled[{0, 1}]], 
            Inset[
             
             TextGrid[{{"\[Alpha] ", $CellContext`\[Alpha]$$}, {
               "\[Beta] ", $CellContext`\[Beta]$$}}, BaseStyle -> 12], {-3, 
              2.8}, 
             Scaled[{0, 1}]], {Black, 
             PointSize[0.02], 
             Point[{$CellContext`x0$$, 0}], 
             Point[{0, 
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}], 
             PointSize[0.01], 
             Point[{$CellContext`x0$$, 
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}], Dashed, 
             Line[{{$CellContext`x0$$, 0}, {$CellContext`x0$$, 
                $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}, {0, 
                $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}}]}}, AspectRatio -> Automatic]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.5}, -1, 
         1}, {{$CellContext`\[Beta]$$, -1}, -3, 
         3}, {{$CellContext`x0$$, 1}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{634., {137.13403328722342`, 142.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->
  "Out[687]=",ExpressionUUID->"212c8569-1fea-4f39-80d9-892fee4e0198"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"182269cb-18d5-4b54-9a3d-3c802811ca99"],

Cell[CellGroupData[{

Cell["Function and Classifications", "Section",ExpressionUUID->"b01579d1-f074-4c66-a9a9-634a162516a3"],

Cell["\<\
Function can be used to classify values as well.\[LineSeparator]A non-linear \
function like the logistic function can turn a prediction into a single class \
probability.\[LineSeparator]You can assign the input to one of two classes \
(binary classification) by thresholding the probability function. \
\>", "Text",ExpressionUUID->"4fe70d9a-f96f-4947-a051-cd224132eded"],

Cell[CellGroupData[{

Cell[TextData[{
 "The logistic function in the WL is called ",
 StyleBox["LogisticSigmoid", "Input"]
}], "Item",ExpressionUUID->"b640d757-ee0b-425a-a921-ba1d96af23db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{"LogisticSigmoid", "[", 
   RowBox[{
    RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}], "]"}]}]], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"cc8d6b06-0694-4720-8129-f182eac0ce48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"classifier", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x", "]"}], ">=", 
     ".5"}], ",", "\"\<A\>\"", ",", "\"\<B\>\""}], "]"}]}]], "Input",
 CellLabel->
  "In[171]:=",ExpressionUUID->"81b4478a-7c25-4446-8754-9717d83df2e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
       RowBox[{"LogisticSigmoid", "[", 
        RowBox[{
         RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x", "]"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ",", "2"}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Value: \>\"", ",", " ", "x0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Prediction: \>\"", ",", " ", 
                   RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                    "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Classification: \>\"", ",", 
                   RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                    "]"}]}], ">", ".5"}], ",", "\"\<A\>\"", ",", 
                    "\"\<B\>\""}], "]"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{".3", ",", "1.8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"TextGrid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Alpha] \>\"", ",", " ", "\[Alpha]"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Beta] \>\"", ",", " ", "\[Beta]"}], "}"}]}], 
                "}"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "1.8"}], "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"PointSize", "[", ".02", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                 "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"PointSize", "[", ".01", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                 "]"}]}], "}"}], "]"}], ",", "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                   "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".2", "]"}], ",", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                "]"}]}], ">", ".5"}], ",", "Black", ",", "Gray"}], "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", ".5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "1"}], "}"}]}], "]"}], ",", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", "x0", 
                "]"}]}], ">", ".5"}], ",", "Gray", ",", "Black"}], "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", ".5"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Automatic", "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameTicks", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", ".5", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"2f43b847-1007-4201-aca9-b0e8fb2f7815"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x0$$ = 0.75, $CellContext`\[Alpha]$$ = 
    1.4500000000000002`, $CellContext`\[Beta]$$ = -0.1200000000000001, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 1}, -3, 3}, {{
       Hold[$CellContext`\[Beta]$$], 0}, -3, 3}, {{
       Hold[$CellContext`x0$$], 0}, -3, 3}}, Typeset`size$$ = {
    360., {106., 110.27287325445337`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x0$$ = 0, $CellContext`\[Alpha]$$ = 
        1, $CellContext`\[Beta]$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`f}, $CellContext`f[
           Pattern[$CellContext`\[Alpha], 
            Blank[]], 
           Pattern[$CellContext`\[Beta], 
            Blank[]]][
           Pattern[$CellContext`x, 
            Blank[]]] := 
         LogisticSigmoid[$CellContext`\[Alpha] $CellContext`x + $CellContext`\
\[Beta]]; Plot[{
           $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x]}, {$CellContext`x, -5, 5}, 
          PlotRange -> {(-1)/2, 2}, Epilog -> {
            Inset[
             TextGrid[{{"Value: ", $CellContext`x0$$}, {"Prediction: ", 
                N[
                 $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]]}, {"Classification: ", 
                If[N[
                   $CellContext`f[$CellContext`\[Alpha]$$, $CellContext`\
\[Beta]$$][$CellContext`x0$$]] > 0.5, "A", "B"]}}, BaseStyle -> 12], {0.3, 
             1.8}, 
             Scaled[{0, 1}]], 
            Inset[
             
             TextGrid[{{"\[Alpha] ", $CellContext`\[Alpha]$$}, {
               "\[Beta] ", $CellContext`\[Beta]$$}}, BaseStyle -> 12], {-3, 
              1.8}, 
             Scaled[{0, 1}]], {Black, 
             PointSize[0.02], 
             Point[{$CellContext`x0$$, 0}], 
             Point[{0, 
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}], 
             PointSize[0.01], 
             Point[{$CellContext`x0$$, 
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}], Dashed, 
             Line[{{$CellContext`x0$$, 0}, {$CellContext`x0$$, 
                $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}, {0, 
                $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]}}]}}, Prolog -> {
            Opacity[0.2], 
            If[N[
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]] > 0.5, Black, Gray], 
            Rectangle[{-5, 0.5}, {5, 1}], 
            If[N[
               $CellContext`f[$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$][$CellContext`x0$$]] > 0.5, Gray, Black], 
            Rectangle[{-5, 0}, {5, 0.5}]}, PlotStyle -> {Automatic}, Frame -> 
          True, FrameTicks -> {Automatic, {0, 0.5, 1}}]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 1}, -3, 
         3}, {{$CellContext`\[Beta]$$, 0}, -3, 
         3}, {{$CellContext`x0$$, 0}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{634., {137.13403328722342`, 142.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"14969cf7-cb3c-4b25-94c6-72190f002398"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0da7fb31-0982-463d-bf3f-63a3b6b7db22"],

Cell[CellGroupData[{

Cell["Predictions and Errors", "Section",ExpressionUUID->"a1de6819-2b4e-4ccf-9373-7c50eeaa4c14"],

Cell["\<\
The data that you have to model will often come in input/output pairs.\
\[LineSeparator]Let\[CloseCurlyQuote]s start from some synthetic data that \
follow a roughly linear behaviour.\
\>", "Text",ExpressionUUID->"e779a7e9-f2fd-4f67-b249-c6e64d7f01ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"List", 
      StyleBox["\"pairs\"", "IconizedCustomName", StripOnInput -> False], 
      GridBox[{{
         RowBox[{
           TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["List", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox[
            RowBox[{"{", 
              RowBox[{"20", ",", "2"}], "}"}], "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["432", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA8PT6HjdBD8AoZdR4iTfzvyhPRbxQ
ewrAzEXKyG5d8L9wQ0jH7hsCwEHifbE/Gu2/LFClwDJMAMCBG2m9pAXqv3Bt
SJMgNv6/ptQaN7W9578QmYa8GEHvv3QHkpdccOG/wJbD6oh/47/Y0Jp+f9nj
vwCstQOz+9S/V2cfwHq+4L/AGYkdFCrFv9xjrWr9YeC/gGEx4ct9xj88aL5V
2KLTvwArEXZJZ9Y/qYWH5JD30L/QBfV3eXflP+Yeh/VhMNK/AGZH8GiD5j8m
iC2kUNnSvyRdxNYiogBA4OWggNCylr8QIcCBWhoIQCgfOFyaf74/LOxZF2ef
CEDyIClw/abSP5C8A94S2gpAMr5F65Tr1T+YfI8tVFgLQN4+toXk2dM/lHnP
ESAKD0AKoUs7nKvbP5zsELTDLw9AIiavq9g92j8OmqPg
   "],
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"67d845ef-2fa4-454d-8321-a3ab54b41aa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.9068434162460264`"}], ",", 
     RowBox[{"-", "1.2010588378819396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.3102125843669405`"}], ",", 
     RowBox[{"-", "1.0228107303013187`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.2636390274932907`"}], ",", 
     RowBox[{"-", "0.9094541994700834`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.0372061777543617`"}], ",", 
     RowBox[{"-", "0.8131889056611358`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8882146599997576`"}], ",", 
     RowBox[{"-", "0.7419076992288367`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9766963655609135`"}], ",", 
     RowBox[{"-", "0.5449660263404739`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6093182168230769`"}], ",", 
     RowBox[{"-", "0.6203000519513138`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.32786250459929533`"}], ",", 
     RowBox[{"-", "0.5232518913646612`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16534663622060286`"}], ",", 
     RowBox[{"-", "0.51196165881549`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1757140016150167`", ",", 
     RowBox[{"-", "0.306814273580702`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3500541356085449`", ",", 
     RowBox[{"-", "0.2651102287037142`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6708342879211902`", ",", 
     RowBox[{"-", "0.28420304276776986`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.703541249556281`", ",", 
     RowBox[{"-", "0.2945138552951242`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.079168012492703`", ",", 
     RowBox[{"-", "0.022166498041974125`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0128679405935443`", ",", "0.11913456679769452`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.077833349639624`", ",", "0.29144226029576636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3564812989130317`", ",", "0.34250376678298544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4181293067372955`", ",", "0.3101741128711931`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.879943980354435`", ",", "0.43234926024025866`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8983224933304665`", ",", "0.4100248028376844`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[172]=",ExpressionUUID->"4b6136c6-63a3-4f8e-a5d9-abfeeb52aad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"a68edc65-4c7f-48ef-a96a-30b7b8910f56"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA8PT6HjdBD8AoZdR4iTfzvyhPRbxQ
ewrAzEXKyG5d8L9wQ0jH7hsCwEHifbE/Gu2/LFClwDJMAMCBG2m9pAXqv3Bt
SJMgNv6/ptQaN7W9578QmYa8GEHvv3QHkpdccOG/wJbD6oh/47/Y0Jp+f9nj
vwCstQOz+9S/V2cfwHq+4L/AGYkdFCrFv9xjrWr9YeC/gGEx4ct9xj88aL5V
2KLTvwArEXZJZ9Y/qYWH5JD30L/QBfV3eXflP+Yeh/VhMNK/AGZH8GiD5j8m
iC2kUNnSvyRdxNYiogBA4OWggNCylr8QIcCBWhoIQCgfOFyaf74/LOxZF2ef
CEDyIClw/abSP5C8A94S2gpAMr5F65Tr1T+YfI8tVFgLQN4+toXk2dM/lHnP
ESAKD0AKoUs7nKvbP5zsELTDLw9AIiavq9g92j8OmqPg
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.9068434162460264`, 
   3.8983224933304665`}, {-1.2010588378819396`, 0.43234926024025866`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[173]=",ExpressionUUID->"00ad22c5-eca1-4e33-b22c-75382e430377"]
}, Open  ]],

Cell["\<\
When applying the model the input data, the prediction will in principle be \
incorrect for an arbitrary choice of the model parameters\
\>", "Text",ExpressionUUID->"f3a902bd-c6cc-4f1a-875a-dafe00a6f5c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Alpha]", "*", "x"}], "+", "\[Beta]"}]}]], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"bc567ac2-6266-4f2d-94b3-5164e7f3b2f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", ".3"}], ",", ".1"}], "]"}], "[", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"3dddf05e-9cc0-47c7-9089-0eaa22e68e9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.272053024873808`", ",", "1.0930637753100823`", ",", 
   "0.7790917082479871`", ",", "0.7111618533263084`", ",", 
   "0.6664643979999272`", ",", "0.39300890966827406`", ",", 
   "0.28279546504692304`", ",", "0.1983587513797886`", ",", 
   "0.14960399086618087`", ",", "0.04728579951549499`", ",", 
   RowBox[{"-", "0.005016240682563469`"}], ",", 
   RowBox[{"-", "0.10125028637635702`"}], ",", 
   RowBox[{"-", "0.11106237486688428`"}], ",", 
   RowBox[{"-", "0.5237504037478109`"}], ",", 
   RowBox[{"-", "0.8038603821780633`"}], ",", 
   RowBox[{"-", "0.8233500048918871`"}], ",", 
   RowBox[{"-", "0.9069443896739094`"}], ",", 
   RowBox[{"-", "0.9254387920211887`"}], ",", 
   RowBox[{"-", "1.0639831941063302`"}], ",", 
   RowBox[{"-", "1.0694967479991397`"}]}], "}"}]], "Output",
 CellLabel->
  "Out[175]=",ExpressionUUID->"b5dfe86e-67ab-4648-bb2f-d238015bd165"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2010588378819396`"}], ",", 
   RowBox[{"-", "1.0228107303013187`"}], ",", 
   RowBox[{"-", "0.9094541994700834`"}], ",", 
   RowBox[{"-", "0.8131889056611358`"}], ",", 
   RowBox[{"-", "0.7419076992288367`"}], ",", 
   RowBox[{"-", "0.5449660263404739`"}], ",", 
   RowBox[{"-", "0.6203000519513138`"}], ",", 
   RowBox[{"-", "0.5232518913646612`"}], ",", 
   RowBox[{"-", "0.51196165881549`"}], ",", 
   RowBox[{"-", "0.306814273580702`"}], ",", 
   RowBox[{"-", "0.2651102287037142`"}], ",", 
   RowBox[{"-", "0.28420304276776986`"}], ",", 
   RowBox[{"-", "0.2945138552951242`"}], ",", 
   RowBox[{"-", "0.022166498041974125`"}], ",", "0.11913456679769452`", ",", 
   "0.29144226029576636`", ",", "0.34250376678298544`", ",", 
   "0.3101741128711931`", ",", "0.43234926024025866`", ",", 
   "0.4100248028376844`"}], "}"}]], "Output",
 CellLabel->
  "Out[176]=",ExpressionUUID->"6606678f-8eb6-4800-842e-b707e93a4b46"]
}, Open  ]],

Cell[TextData[{
 "To asses how good the model is we need to condense these differences in a \
single number: the error or ",
 StyleBox["loss",
  FontSlant->"Italic"],
 ".\[LineSeparator]It is useful to write it as a function of the  model \
parameters. A common choice is the average squared difference between the \
target values and the predicted values."
}], "Text",ExpressionUUID->"40343737-f3f2-4b44-adef-7359e9340c51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"loss", "[", 
    RowBox[{"\[Alpha]_", ",", "\[VeryThinSpace]", "\[Beta]_"}], "]"}], ":=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ")"}], "^", "2"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"c9576668-68d4-4864-9772-6cb71921bf45"],

Cell["Here is a table of the loss while varying the \[Beta] parameter.", \
"Text",ExpressionUUID->"a567309e-ea43-44a1-a703-ff4604add5aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", 
      RowBox[{"loss", "[", 
       RowBox[{".1", ",", "\[Beta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", 
      RowBox[{"-", "2"}], ",", "2", ",", ".1"}], "}"}]}], "]"}], "//", 
  "Short"}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"b9b087e7-6746-48d9-b169-025249ede5c8"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.`"}], ",", "2.7770258319883405`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.9`"}], ",", "2.457724173751827`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.8`"}], ",", "2.1584225155153147`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "36", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.9000000000000004`", ",", "5.144261160764351`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.`", ",", "5.604959502527836`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellLabel->
  "Out[178]//Short=",ExpressionUUID->"80c48abb-4194-494b-8c36-fc0f748dba67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "%", "]"}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"6735a235-616f-409b-8e04-88359dbd14bd"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQUHmHyOBEaaszmkgcG//XGXlnllr2R2OHsGBP7s
f7ZFgq3YhdHBGAx+79d9bszxUOCf/ayZIPBz/wOZ0M7jr37aQ4z7sf8p19T+
mWLf7CHmfdtvtfGzVPiUT/Zg48582X9I/lEYw4l39hDzPu/f7ivVpMn9Emre
x/2Bb/q3a356DDXvw36x763vGH/dg+p/s//yt7SmuPDr9jPA6l/uv3n9kFbm
nwtQ+57tDzIxPu986bi9Edj8x/urq68VClofgJr3YH8R1/2qsrRtUP0397Mt
/pPcVLrR3gCs/vL+XQdY57st3giVP7m/N/mX9uH32+wngPk79x9wzWWtWQsz
j4HBTeby3KKiE/YLIPL266Kmr09Kvgjln7Rv5TigYnX1ur0FxHz7pdOT1+3v
uw+Vv2nPxuK47Kf7E5j77K+s6a3PynlpbwJxv73fMfHkTSbv7TMg/rM3X5G/
IuPCJ/s5EP/bz1QtWpIc8c3+AiR87H2jJ6t6Gf2ChZ+9t+dlbZk4WHx9tL/4
fcbtN7mMDhDzP9urL7+efPAqs8M5SPzYL920dF13GpsDxL5v9j5SzHu8FTgd
oPFrL3HvfTcjM48DNP7tBf5ly63l44ea99tecu9uy+WKglDz/tjbanYeLbog
BDXvn32F8zyjnZNFoOYxOBzm/t1QlS3mAADMHzCo
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {0, 5.604959502527836}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[179]=",ExpressionUUID->"d7618618-bc3e-4cd6-946c-96e8199b9798"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5d54f699-7eff-40aa-baf6-660d716e1bc9"],

Cell[CellGroupData[{

Cell["Errors and Training", "Section",ExpressionUUID->"5fa9bfe5-cd34-412c-a124-839f2914945e"],

Cell["\<\
Minimizing the loss as a function of both \[Alpha] and \[Beta] leads to their \
optimal values given the data.\[LineSeparator]This can be done by taking the \
derivative respect to the parameters\
\>", "Text",ExpressionUUID->"b9ff3d5b-16bb-4fb9-915b-389d075b8a41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"loss", "[", 
     RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"dc9290cf-2c27-454d-abe0-9c3b366bdfb9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2.0511704311777055`"}], "+", 
    RowBox[{"11.769282734426486`", " ", "\[Alpha]"}], "+", 
    RowBox[{"0.9137550467697867`", " ", "\[Beta]"}]}], ",", 
   RowBox[{"0.6156079129578956`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.9137550467697866`", " ", "\[Alpha]"}], "+", 
    RowBox[{"1.9999999999999998`", " ", "\[Beta]"}]}]}], "}"}]], "Output",
 CellLabel->
  "Out[180]=",ExpressionUUID->"318ed1e3-e415-4dc4-a2b6-158f19055b1f"]
}, Open  ]],

Cell["and finding  the values of \[Alpha] and \[Beta] that makes it zero.", \
"Text",ExpressionUUID->"15d6b120-5661-423f-8408-af8c01753815"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"loss", "[", 
       RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "}"}]}], "]"}], "==", 
    "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"430738af-17cc-4e8d-aa58-03f11ce5a116"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.20546751039618308`"}], ",", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"-", "0.40167744376481573`"}]}]}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[181]=",ExpressionUUID->"d6cb917f-9cc5-4533-aefb-210f117cdd28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", "min"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"min", "=", 
     RowBox[{"ArgMin", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"loss", "[", 
          RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"-", "3"}], "<", "\[Alpha]", "<", "3"}], ",", 
         RowBox[{
          RowBox[{"-", "3"}], "<", "\[Beta]", "<", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"g", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot3D", "[", 
        RowBox[{
         RowBox[{"loss", "[", 
          RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", 
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "1"}], ",", 
         RowBox[{"MeshFunctions", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"#3", "&"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"PointSize", "[", ".02", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Append", "[", 
            RowBox[{"min", ",", 
             RowBox[{
              RowBox[{"loss", "@@", "min"}], "+", "5"}]}], "]"}], "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"SphericalRegion", "->", "True"}], ",", 
       RowBox[{"Ticks", "->", "False"}]}], "]"}]}]}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellLabel->
  "In[327]:=",ExpressionUUID->"52620174-dd7b-4220-8562-4953496cbffc"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
FsF44kLGmchp8lDccRaaN2TL/OanuOMcOuus5BUsTHHrYOJ8cs1hQzGKWwcY
l6Zlteg0fhfGfJUGmZsLt5K6WKD/8qdSYnqm0hS3/vwK6yKyaAbFnXfob9Xz
VW4eKheh4Dvi8Op01cinpL4W9IfZp5WFNR8zKe7+wFOc/LP6Pqm7BX6Cdlb7
RpuS+lq4vr0qaqlqw0QO/rfWWco+cSB1usD/KfkTHwcSJZHD83ocmOWhOyqN
HJ73S0TEym33hJGDzjpqj1OcOGLIub9n9VKPFps/kcQ8htbeLg0QF0B77n2P
5t2V1aVbpLCfaO3c9DNj9hjedwU/kXuvi043asN7qmCf9HZDjb7BEJvbHsYx
qWLGndlLJDH+MufH7VeySF0viGdJsbm0ppogxf28MI7t+V008Oi1BOq2s8y8
+YuVCMWtw4fUvNTRQTGKW2foh+LCYlbSFxmYr3nTZWrld0pS3PpvDI4fl1Ui
TXHnfcHTrTkTBEg9MfAD/bCZp2TbnucMCvbBXCfNbp46RuyhPwhUdRSH9zGR
Q3+7u/Nk5pXvpC4Z+IHv8c0GOUYG+SQeH0lFztcaUpcM4ul7Hjx792cmcmh3
f+L1Cs0uUt+Mex9vdE6el7kg4TBfrxvKGLZ0k0U955+VO1g5LIV+QLfwFTMk
Lj5gIOfe3zNvSn7/xIaF+XVR4y8+HCCK9pBHMTWh9pObSV01/B4Mjz8xKMWH
HPdRvV9oeamQemvgv/baYLK7yi+85wz9E8ZVDZXNsgKFpD9jPboXu1Y1VDDR
frjj4nKri11sbj8wrg5nbv8a9Zr052kyGXcMrw6zueOE92Lv2zkSfvNZ+Lyu
G0ZtZm7ko7jjXx1beUqgTpDi1gfei0Nv9fyevGei/v5LrBRfcEQobt20z1Ci
CyPFKe58PUvNj82qlaS48+UyvdDrlyiD4u5X0M/PPEx/bHJQloJzB/F36X0L
tEn9N+hvjbITJUzGMynu/nbbPUVdVoLUhYN+nnhMwaJvlHDwv1hSb0bwElIX
DuLJW6nhcn8dqQ+A+wnuRluLciSRw/MqBl1d3KuI5/X4vL6mX29uShVGDjoP
sCsv7SjF83fq/5x3h75+HF0ph/nt5t1yqjqPH+25z9F8IuwZm1PksP9kyR/+
4hSB593op1A7sl2n4CtysIf+KXspqbPWlNjX7r9k3DG7l83tB/qnZu+RnTNU
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
O3WasGS2APh/NT/d+w==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxNnAf8V9P/x++OjEJDKlJCKWVlhRAhKqWhrKyWEdEyQjsiQshWoWSWlb03
ycxMtuzxy/6/nr3e/X+/x6PTed3zOffcc+895/1+vd/3/f5uevTJ3U/KkiS5
uUySXPWjOlhP9dZFkpwm/EWaJO1VBui4mdr/Utu2wpzzjP7bSVj/kteEdyg8
xgvCuwhryOQN4X4Cawm/L3yU8HfCR6i+ReUb4b6qO6p/beEn1edDlbWFP1K9
m9rXEf5UuH3h9mXCHTWnX4Wbq3QqPOfn1H6Q8AbCS4S7C28k/LFwD+GGwp8I
n67ync7fU2WC8A+q91LpoPKD+tRT6az+66t+Rb/3FG4k/LnwMcKbCq8U7ipc
R/gt4eOEmwr/LtxbuLHw19yvcBPhX4QPE95E+Hvhz3TP++h6t6meqOOrhfdV
maw+e6hPKz3IAfqthXAD4Wv1WyeVlToeWLj9X503WHgr4Ux9Bgm3FOYl3KS+
B6r8o8P5GucP1YNUD1WfrYVrqs/++v1P4e0ZS2UnnqXKCI37h347QGW4+rdV
23rqf4OOO6v8reMzC/ffSO0/CF8qfKNw70rX1vm9VB+scr1wF9Xnq08H9Wmt
Pt9pHgdpnLtUT1D77mrfUu1jhXfjnQqfLbyzcGPhqcJ7CrcVHqXxUsbU+bNV
uqpkKjupbUeVXLhd5vvopXJRYbydzp0mvJ/wDsJXqd/eKj/ruJ/mN0fnHKr6
J82pm9rvVn25+h+o39ur/xT9PlllqI47qN5DZU31G6/SXeUTtV+j/l1V76P+
M4W7CO/FuxPuJryv8HWF57W/8C3C/YS7C++euf04lblqP0x1T7VfL9xb+ADh
AzW/HrrWPZrbjWrvo/YD1b4r+431ruOx+r2GSqUyX30OV1tv9VkofDz7Tvh+
4QHC/YVvV7+eKst1vK7qY1UPU5kovLbKGiqL1H+g2o5V/6eFTxIeKvyU8InC
JwvfIXyE8KHCdwofyb4Wvkv4KJ6x8DkqZyBj1PakygnCJ6ntSuGDeK7Co4W3
Fa4rPFnXrq2yjsplOj5f7fNYG3oO83W/J6m+R7/1VvkUeVR47qeqz/PCp7OW
hZ9FlgmfJvyi8HDhUcJvCp8pPB6sMfqpbKDyRuF5jmOdqFws/Lba3lI5S3gC
c1G/+irrqdRTqasyRr+9rD4j2B/q847wecKThJcKjxWezHPQvO/U/E9T/aXa
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

             "]], Polygon3DBox[CompressedData["
1:eJxFmgn4l1MWx+/v9y6Woqxp0R5RpKJUtJnQRrK1b6KFNpWRUtJqCymVYYqo
EckyqGiRtFD2NYUMhShLYmzN99P3Ps88T9/+5773/u57l3PPPed73ip9hnQc
XAwhzNJ/qf4eqf+OEBpmIZwpfJ6EsEzPNwgnqdwiD2Ga2v6g8mMqny2cJZTR
b46LeFd1rwTXXa72D6t9R5Wnqe4yleer3FLluur7I+FDoaTaHiZ8IXk57yqE
MCVz3QdCicxtVgkDVXencJfkOsKpwldq87WQqv9y6r+C0EpyKb3zcOEMtWkQ
58TcflTbn4RMbaqobR31tynzM+qqSq4mvCz5XxrP88IRKp+v9nPU/lyVz5P8
kupXC4errpTwpeSVqjtF/d3OnPTukkI9yfUzj+N0Ybfa7Uk87lVq/6RwXBwj
baj7XjhUvz0k9TxPE/br2V9CU8nNhOaqayb0ktxbOFryUUIjyY3ZG41xqsbb
Rf1PZ/31bKfkY4T39Ly+6vtrrLWF21RXQuV6en62yhtU3iq5nNp+J3RVeW9c
N9amunCU2jdWm97U6/kC3qnfjhEul3yO6qer/g/VL1E50xg2xfWppXKu+mqq
HyLcqvIE1d8sNFFfZ0W0Q5eC6w5S+5pqe23R4z1U5VMln6j6t1X+m8ozitah
JLcuvyV5TfC+s0Z7JFcMXrtz1eZeta+r8axmPfW+9qprKkxW/dTMus8ZQB+b
qv0taj+OstquE14RjmLtM+8Z7+Kd7CV1j0peGtyGveGMoYfs0Wnqrx9rUfD8
0ZO6wi797lvhBMk1hH2Sf0HP1P4M9E/tv4r6OFvlBkIpyWsS6yS6WFpYm1iH
0d0jhTXC4IL3YJbkc4VWmXUMXeuWea/Z821F69p6ye8H69yVescoyQOFPpLH
qP7vkvsLL+j3VwsDhaKeJ0JDtRmrfk7WO2/R70fo2Qi1vVJ4Ru0mq/4GyVcL
EyX/qbY1JP8s9FX7z4RvCt6zVyWX1+8bST5fuBE9128m6jcNOT+qK6Py+SpX
1W8mcJb0rLXqOgl3pd6/sZKHoFOSTxdGFK2zFSQfr/aNg38zln3Ss5tUv0vl
f2WeU23JTYLnup+5BY+pf+oxjRHKJR4retxYmKFnMzGw6CR7xdqqv1/19xeh
j+quEHoI3YXD2GuhZ3yGXEo4Wqirbqqyhql/11sozR4LD/Eu1U0SPtHzZ1V+
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
bKLTP0oenjs2eVLlkZLHkS+I5Zty6xC6NKxoe8GesXfY8A/19++5uYZnsAFw
j7nvDjjylXpfeZW/Cuas4a6x0djqktxD0V50KDjnQ+6nMTF80XvO3m9PHMs8
i01Bf/F3iy6Pyu1fkjvh2WiVSwr1i94z9m5QnM9iPRsS+/81mINvIvnGyOdT
PzY3P8/eTIr11zAf4S3N5W18L/V5XdE2GlvdOTPXTg6KXBTxL2eLHA+5HuZ/
QdFn4vPMMS2x7VPCF6nzT18H20RsIzYR28hv4PfhH0rG+62Byj1z2w84j6GZ
+Stsf/ui9Wu/yg8Ec/aFWC5NTMY7E6/fY6p/XuUxqn8N3yE4p0huERuOLd8f
7UtFPdsXPOczcvMlcLENibNyA5kcI/kcYkZiR3Je5L7IaZDbaF10PD4gd2xM
TH9d5nidum3xvByLjhXN+cLvwo/iq/KMOu6/ssE5DnIdrAlrgw9wg+puTszd
weGtTu0fdC+YEz8x3kG9I2cFdzUu8XiI2dFXbA62B46+du77ndwOPhK+0hWZ
c00ncWbVvkFi/wYO+1K1H6L6wfhnki8WXpA8tOg76cDdlJmrhrOmDfwV3F03
xpk738xdRQ6aXDT6Rmx6WVx/7mNynehMp3j/w12SI3sp9gXXDudOn+VT+0L4
QDOi/4XviQ/K+cVGkFu4O9qOk9GxgjluuO7OucdLf3D5kzPHbvgLxGusx97g
PSH/Rs6M3NnMovPZI3LzZ8uiPRmbmTvFn4P/JEYmVoYz43xhf2jLnczdPDi3
riyN55M2nEVyIPyW80sde8hesuerhPGJdQEOjv5fEG7G/0jtu5FDJZeKP4Rt
I6dLbpd4pYTe90+V2+X2b7hr4cDhwjkP7AV34K7M+XvmSg6XXC4+H75fTeGv
om0H3B0cHuOGo4Sr5B0j1LZt7nfN5cwnBjI+FPlv2gzPzPHyW+4GYkdiSO4I
YgJigzJF55Ouy21bWHPW/sbM9hlOGP6cfCG5P3ygAak5N7g3OCi4KPJ25PKG
ESumzqeXiP4SsRL3P2cBm8D84UPIze+M/jz3P749Nh97B8cI1whHBVcFrw0X
CScJTzkxPkOGu4Rz5/yuFKbmHgNjIYdFLoucDbkbcrbkMyfk3tsl8f46N/Fd
yp1KfoD8VjP0HxuWmj+cwv4H82E1cusa63XAfqTOm5ADJS93Z+ZvQ/hGpAlz
T+wj4huSO2Wt6Jt3ME5iaGJpOCq4qltyz+XxeP8QFzZIzXvBhR3Q0cR6wl3z
vd6xJ9qQIRHc7dh86v7MbMvZU/Z2JDqSOu9F7o6YltiWGJpYmjnThjrWolTc
Y9Z1uPBt0bwH32TwfQH5Z3LV6Aj55I+FLak5Z7hn9AvfAJ+B+wv+nm9l+KYC
/wU+jdgFHxNfE84S7pIYmlgazpZnyHCLcJZwl+QkyE3AacNtk4MgF3FS7vsS
Tnhc5juLuwtOifuePq4P3lP6hlODW4NT2xN9BnwFfAS+1YHfx1fDZyN/QT6W
s4PPhr0fFdvjc8Atk88gdpoczM8CuNpRsY4xkxucFDyXAzxNsI6Tx8Enwjfi
zoWfZk7k9iYGzxX9wPfAB5ka7SO5ITh4uPghajM4dZ6P3N/Q3LEKNnFw1Bl0
a0XUJWJWfFN8VGJZ+B5i8wnB+YYJcf/wibCH9D0odd6Qd8AfEeuTryT/gH8H
tw6nTO6DeJ7YBJ+TfC38ElwA35jwfcLQOB/6J54akjg2Ir9AfoLvQYhl8MHw
5+Gw4LLIe70c409iY74R4XslbAZryzcC2BL0n1wgPg7+DP4L31Z9JnyUmd+o
FswpX5j6ew6+reKbFeJB+BRy7+TgiMf5BoFvEUbGs8JY2EP2bk2MH+pH/mBm
5ngGrnmd8EFmG4+t3xv9Ad55QWqOhbHgHxLb4JPim8Kv8+0SnCfxOd8c8e0R
MRexV4fMsS8x8PzM32vga+BzwE9x/9aMfBDc41qVX86coyFXwzcWfVN/d8C3
CJszx8rEzPOwJbm/dSgd/UO+5+FbJnwUfBU4brjun1TeW/R9eXXB/gPcCjEU
sdRH6qpS6ne+HRxTMZalwvOZcwrkFoifyR3j4xNvsIasJX2ujm0WBPsc/Pa3
zLl1fDbig58zf8sAh7Yv3pd8GwanyP3MWFsJPxY9ZuKkqsHfnPBNCN/nVA/m
6ztE21w/dU5hc5wjv+O7lV6pv/FrGcxJwU1hS4kl4SCxqdh0uFk1O2Drb8AW
pM6pk1uHk4Obg+cnNwCnC49LDoFcQh18zNQ5CfIA5O84G+TgyM/xDQnfknAu
Ofv02SL4GxLehQ3GdvBNDLaZfOHYeL+TvyN/hm2G89+X+psvvv2CQ+H7A76B
OSTalaHRVpIbIeexO64Fa8k3PKwJ61M5OKeCbvwPoMcjOA==
             "]], Polygon3DBox[CompressedData["
1:eJwtlnt0j2UcwN/t9/6GjTCtk4hdaBu2ZZPLStTQsAvTyrCLWbuVS8aW9oec
6FRo5naiaMOclmrVNptaZ1ihXJYKMUwKuWxGzCxdPt+e7x+f870+l/e5fJ/X
J3Vu3BxXy7JWgBM2OyxrNfJ95CnbshqgGn0LvgpkE3Yz5LhZVhkNL6CX4v8I
zsIZaId95PvT4Q705eiXyPsUvQzq0PfCUvR8Yq8hXcl1gXL0YnyHkdHYUdCV
3KP4BiCj8UfBNMbfzviF+MZABFzH7kteC7Kddp2R95BtcBfeg+EulrUR6Ul+
Dyihr3W0KUb+in0e7tLOD58nvjTsF2RciNKYL7HbyCX0401/rfh3k7sHekM4
8Sx8FroLLGOuL+l31koubEIvxLcR+Qv2SRgq306/k8mPgViYDy/Dh8Q2WGa9
I9GfRy9AD0MfAq+g50EQ+mhigcgU7GToih6CrwNyIvYEaGMcH3w3kEHYg5Cd
ZFy+KRaegXHgTqyevH62mcPb6BfRP0b/BNajr4M49OnEpiBzsOdDAPqT+HyR
X8JW9CpkC7Eb0FHnJfHZ2HOgG/pgnf8C7IUwA6aDO75gYh7IedhzoT/6SHyP
IL0gDD0YuYjYq5AB6baJheqehsvZQo9FriG2VvL49nTIgh2sRSZyFv5U6E7e
o+R3Rt5mTToRv4P8E27JmcI/DCbRpojYYtok6Pmc6mZikrMB/7sQjz5Dx8+i
fTt6JtKJ7SZjkHMLtsv6EqtB9oU+er4G4su2zZmWsx3IGGmMFYDsRfwh6AmB
0i95teQEc04fR3phPwDr5dw7zP3cqHsaCoPhAH11x1eLPAQ99LxHEhuvZ1XO
7Ju0fV1rRRx9X0APwb+H3L0Qhi8UrsndkH2T84k9CC7KXcDnhq+L3FWoxVeC
77isN3YIXEbfja8jeZOxXXVewbYZaz+6p57jsdjjIFv3MJf8CqiEfuAHJ+mv
QvKRNgShT6XNVfKvwQBdy8XkVkE1NGF76/1JIHcaeOPvC8fwlRNrQp6DRvgb
9uMLIH6ctl7o7cgY2sXCNtiqtSyBWApyDLkR0AH/EbkTyJnYKZAES9i/75FX
dT0uyT5j95K10zsqazRY1/w54kn4XpQ9lvsK98EPug9DyHlMzrKOJ/sQrGsu
cziMz7bNXsmeHZBvkhoJu4h5SU1Fr5S7h34HvU3OLuzU2v8X+j24CXt1jXzw
+zrNGlXLPZdHh3FcbPNuVOm6/YP+L9TDZ/oeOPDbMmfoCF/h20bsR4epWVK7
TsPvrFUDciFk6vrmoC+A1VAIq6CAvEPIbLmHWqdr2KelyBO6r9K3OzkekCx1
mHgS8jp2C9zUOiq1IZFvSILf8J2HRuhM7An9PvnOXnACdTRtv0avkfdFxseX
j5yAfzx00b3y15r+FHqE1F/s5VAFO6W+48sglos8Iu8r+kGHeUvlTd0H+Xzn
JOSzEA/+xEeRNxK5lD6WyRmQdSHvMLIOvoHvXP+fsnVQ7rKcGXlj9f0vou1a
recy/zSHWW8P+ighXibvvdRoqe16DvMkBz1Hzo3Of6J8s8O8aZHEVuFbCSvk
LktN1e+uwC6HRPR07eOa3Fvb/LOs0f+TSr3zeVqnW5GL8OfqGlWTv8s276vU
6mg3U1elvt7Smt4fXyqxfsi3pM7B08RjdM1KyWlGT0T+Qd5lqHc1/09HkUPJ
HyZvE5zRuzxW39NE+pwBKXqW5uEbSLxR93qi/vM0MM4pvU/fEuuPL0O+HWbR
tpS2M5FTIA7iYQu+2U5Ty65Ass5zlLzFcFbf8Ug9Y+dkXHiHPt/Qf6DhOvef
tO7L3vck90GnuYufa+3ZJO31n2yD0/xT9dZ6dJT4F8SuIH+mPVOzjiFHkBtu
m1rRCgX6Lq10Gr/EpV7er+v4Af7NTjOW/LcVIbdAsdO8BfLebJW2MELeYvqs
w9eNfvzgNLq3beqq1NdmfYdkXg9j94H/AK0yWbc=
             "]]},
           Annotation[#, "Charting`Private`Tag$1829920#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LlFEYh/E7XzPN2pQZoQySKDq2EBGlcCuYELqqFEFxoQvdKhG0a76A
2ipR0E+gO3e+QG4KNc13BRMVQV268/cgzDXX/9zn3Oc555lJ9Q53DD2IiB/4
LyR5zNcpP8V1VkQ5F2ZH1HElv+P36JQ/8yBG8VFfhvv0dMsTcr/cI8/K87jV
s8Rv1FLm1uXt3Igj40E8z4l4hg31F1yCv/JLLsWm/Iq3uIz/cb2+cnk7OZc9
G4xreMe4NC+iXW5U2zVOWbfHFbzPr7kSB3IVV+NQruFaHMk/nW8STfZ4aL9a
+6XNHZvbVT9RH8Za8s7UF/nGPed4k2d4gcf5O0bwxXggeYf6PnHGnh/kNrlL
bpffyq2c5hzry/gKF2pPeMuzV+QWnOs5Q3HyO/IJHsvHXMQHXJiclx/xJb7p
K+BxvuCvyf34lHesy0+ewa4cG+xx8Zv/wDXjF6/C0WKJl7ECn5iyeBrN9trP
vf9v3QGbjUtW
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{710, 1074, 703, 1070, 704, 1089, 749, 1114, 777, 1135, 805,
          1155, 828, 1174, 851}], 
        Line3DBox[{714, 1077, 718, 1099, 753, 1093, 754, 1118, 782, 1138, 808,
          1158, 832, 1177, 847, 1171, 848, 1190, 870, 1635, 1214, 895, 1661, 
         1662, 1646, 1648, 1232, 914, 1663, 1664, 1652, 1654, 1252, 935, 1408,
          1270, 960, 1294, 986, 1013, 1020, 1341, 1048}], 
        Line3DBox[{720, 1080, 715, 1075, 716, 1097, 759, 1122, 785, 1142, 812,
          1161, 829, 1156, 830, 1175, 852, 1193, 873, 1669, 1216, 898, 1644, 
         1234, 916, 1650, 1253, 937, 1271, 963, 1297, 989, 1018, 1023, 1343, 
         1050}], Line3DBox[{724, 1082, 721, 1078, 722, 1100, 761, 1125, 788, 
         1144, 809, 1140, 810, 1159, 833, 1178, 854, 1196, 877, 1218, 900, 
         1236, 918, 1254, 940, 1273, 965, 1299, 991, 1021, 1025, 1344, 1052}],
         Line3DBox[{727, 1366, 725, 1081, 726, 1103, 764, 1127, 786, 1124, 
         787, 1143, 813, 1163, 837, 1181, 857, 1199, 875, 1195, 876, 1217, 
         899, 1235, 917, 939, 943, 1276, 968, 1301, 994, 1321, 1024, 1051, 
         1428, 1054}], 
        Line3DBox[{730, 1599, 728, 1444, 1083, 729, 1378, 762, 1102, 763, 
         1126, 789, 1146, 816, 1165, 835, 1162, 836, 1180, 856, 1198, 879, 
         1220, 901, 1237, 919, 1255, 942, 1275, 967, 993, 1658, 996, 1415, 
         1416, 1026, 1427, 1053, 1606, 1472, 1429, 1430, 1498, 1055}], 
        Line3DBox[{731, 1371, 732, 736, 1106, 767, 1128, 795, 1149, 820, 840, 
         842, 1184, 862, 1205, 883, 1204, 885, 1224, 906, 1243, 926, 1259, 
         949, 1283, 973, 1282, 974, 1303, 998, 1324, 1028, 1323, 1029, 1431, 
         1474, 1473, 1345, 1432, 1494, 1562, 1561}], 
        Line3DBox[{734, 735, 738, 1107, 768, 1129, 797, 1150, 821, 1168, 843, 
         1185, 863, 1206, 887, 1225, 907, 1244, 927, 1261, 948, 1260, 950, 
         1284, 975, 1304, 1000, 1326, 1030, 1325, 1031, 1347, 1056, 1346, 
         1057}], Line3DBox[{737, 1084, 739, 1108, 769, 796, 798, 1613, 1616, 
         823, 1624, 1626, 844, 1186, 865, 1208, 886, 1207, 888, 1226, 908, 
         1245, 928, 1262, 952, 1285, 976, 1306, 999, 1305, 1001, 1327, 1033, 
         1349, 1058, 1348, 1059}], 
        Line3DBox[{740, 1085, 742, 1109, 770, 1130, 799, 1614, 1617, 1151, 
         824, 1625, 1627, 1169, 845, 1187, 866, 1209, 889, 1227, 909, 1246, 
         930, 1264, 951, 1263, 953, 1286, 977, 1307, 1003, 1329, 1032, 1328, 
         1034, 1350, 1061}], 
        Line3DBox[{744, 1373, 1375, 746, 1111, 773, 1384, 1386, 1516, 1620, 
         1389, 1619, 1391, 1520, 1631, 1392, 1629, 1394, 1570, 1396, 1397, 
         868, 1211, 892, 1229, 911, 1249, 929, 1248, 932, 1266, 955, 1288, 
         980, 1310, 1006, 1332, 1035, 1331, 1037, 1353, 1064}], 
        Line3DBox[{752, 1092, 707, 1363, 1365, 1478, 1488, 1477, 1502, 1501}],
         Line3DBox[{772, 748, 1088, 1377, 1482, 1504, 1481, 1495}], 
        Line3DBox[{779, 1116, 751, 1091, 706, 1362, 1364, 1360, 1443, 1442}], 
        Line3DBox[{806, 1136, 778, 1115, 750, 1090, 705, 1071, 1361, 1441}], 
        Line3DBox[{891, 1213, 894, 1231, 913, 1251, 934, 1268, 958, 1291, 983,
          1313, 1005, 1312, 1008, 1334, 1039, 1356, 1067}], 
        Line3DBox[{956, 1269, 959, 1292, 984, 1314, 1010, 1335, 1041, 1433, 
         1066, 1357, 1068}], 
        Line3DBox[{982, 1293, 985, 1315, 1011, 1336, 1042, 1434, 1437, 1438}],
         Line3DBox[{1009, 1316, 1012, 1337, 1043, 1435, 1475, 1485, 1440, 
         1439}], Line3DBox[{1017, 1016, 1422, 1426, 1484, 1541, 1483, 1497}], 
        Line3DBox[{1040, 1338, 1044, 1436, 1476, 1486, 1500, 1358, 1545, 
         1544}], Line3DBox[{1045, 1339, 1423, 1014, 1317, 987, 1295, 961, 
         1409, 1463, 1407, 1577, 1528, 1532, 1403, 1590, 1402, 1573, 1523, 
         1527, 1399, 1460, 1398, 1641, 1638, 1636, 1633, 871, 1191, 849, 1172,
          826, 1153, 803, 1133, 802, 1139, 783, 1119, 755, 1094, 711, 1072, 
         708}], Line3DBox[{1047, 1340, 1019, 1319, 990, 1298, 964, 1272, 938, 
         1651, 1653, 1667, 1666, 1665, 1645, 1647, 1673, 1672, 1671, 1670, 
         1668, 874, 1194, 853, 1176, 831, 1157, 807, 1137, 781, 1117, 780, 
         1123, 760, 1098, 717, 1076, 713}], 
        Line3DBox[{1049, 1342, 1022, 1320, 992, 1300, 966, 1274, 941, 936, 
         1649, 915, 1233, 1643, 897, 1215, 896, 1219, 878, 1197, 855, 1179, 
         834, 1160, 811, 1141, 784, 1121, 758, 1096, 757, 1101, 723, 1079, 
         719}], Line3DBox[{1062, 1351, 1060, 1352, 1036, 1330, 1004, 1308, 
         1002, 1309, 979, 1287, 954, 1265, 931, 1247, 910, 1228, 890, 1210, 
         867, 1188, 864, 1395, 1569, 1393, 1628, 1632, 1630, 1519, 1390, 1618,
          1621, 822, 1615, 800, 1131, 771, 1110, 743, 1086, 741}], 
        Line3DBox[{1065, 1354, 1063, 1355, 1038, 1333, 1007, 1311, 981, 1289, 
         978, 1290, 957, 1267, 933, 1250, 912, 1230, 893, 1212, 869, 1189, 
         1459, 1612, 1611, 846, 1170, 1596, 1571, 1458, 1522, 1521, 825, 1152,
          1568, 1567, 1457, 1518, 1517, 801, 1132, 1453, 1385, 774, 1112, 747,
          1087, 1376, 1374, 1449, 745}], Line3DBox[{1069, 1359, 1499}], 
        Line3DBox[{709, 1073, 712, 1095, 756, 1120, 775, 1113, 776, 1134, 804,
          1154, 827, 1173, 850, 1192, 872, 1634, 1637, 1639, 1640, 1642, 1461,
          1526, 1525, 1524, 1572, 1575, 1574, 1462, 1531, 1530, 1529, 1576, 
         1579, 1578, 1464, 1410, 962, 1296, 988, 1318, 1015, 1421, 1425, 1424,
          1471, 1046}], Line3DBox[CompressedData["
1:eJwl0b0rxHEcwPHvuXMG5itPg9XgcIqRQtmw4GLxkEEeBoVYXR1XVoOHyUMs
Vzd62HTEYlGUhJT8Dyevy/Du9fk99Pn9+v2aJheHFyIhhHl9VIbwru54CD06
N59pMBZCqSKEafOMEtEQ5tjCNdeSzLGfB0wzzyXeMMMn7vKbea7Yv6qS47vy
HvMnN7iuTfuj7FVMfco618lLJnnBVm4xzja168pxitusYjOvy/s8K8cvz0kw
owdz4D0jLPDHfft85h5fmGWRyyxwgocc4A5T5XdnHWs1a9evbzbk3JT51TzO
E3V5p1OmVWMeYzVv+aaiRvWoER2r0fUjNrBD9fH///UH76w4BQ==
         "]], Line3DBox[CompressedData["
1:eJwl0Dsvg2EYBuCnDh2aOCsmiR0JiQGpgaEYDTWQSAwmIUzEYSFhsqu/IGg3
foDBInGI7o7lN2hdjeHKfT/P935v2q9veX1uLRERS/w0RnwzmYyY4lK/YKch
Yqg+Imc3z4k5a27XO1jQC3YbMmOe4Ejf8u42p/qu3OOXgrkqE84FFf2abv1A
9shnWaLi3kFzPwPUUbW78ezOPYeyKMt2+/qZ/qLnZUkey1u5KYtyUabd0UUn
s8zQShstTJNl1X1XDHvnqfa75Kj9OGOs2DXJZr70cu0/OPMgU3aP8p43Xvnk
g3fOGXGmN/n/3f8AcD4x0A==
         "]]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
      "]], {}}, 
   {GrayLevel[0], PointSize[0.02], 
    Point3DBox[{0.2054675103868579, -0.4016774437055123, 5.002900949338392}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 360.},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-5, 5}, {-6, 6}, {0., 217.42809246976304`}},
  PlotRangePadding->1,
  SphericalRegion->True,
  Ticks->False,
  ViewPoint->{1.1764188957987083`, -2.413101534027166, 2.0598494042243654`},
  ViewVertical->{-0.2667576248032509, 0.5471802909023588, 
   0.7933688290179657}]], "Output",
 CellLabel->
  "Out[327]=",ExpressionUUID->"f6196161-506c-4e3b-a64f-7c1cc814f0d1"]
}, {2}]],

Cell[TextData[{
 "A simple, iterative method to find a local minimum is to update the \
parameters following the (opposite) direction of the gradient. This method is \
called ",
 StyleBox["gradient descent",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"7d9d359d-cbcb-47d6-9eae-f2f653b2940e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "d", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"Normalize", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"loss", "[", 
        RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"90448577-1cc7-47d8-a656-daf90391600e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"3", ",", "1"}], "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"06f2b32f-bb88-4493-895c-f05fc29fc90b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9879336635754917`"}], ",", 
   RowBox[{"-", "0.15487761740905936`"}]}], "}"}]], "Output",
 CellLabel->
  "Out[184]=",ExpressionUUID->"5f476ff1-da7c-4674-af39-a0da1801e9d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", "min", ",", 
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"min", "=", 
     RowBox[{"ArgMin", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"loss", "[", 
          RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"-", "3"}], "<", "\[Alpha]", "<", "3"}], ",", 
         RowBox[{
          RowBox[{"-", "3"}], "<", "\[Beta]", "<", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"g", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot3D", "[", 
        RowBox[{
         RowBox[{"loss", "[", 
          RowBox[{"\[Alpha]", ",", "\[VeryThinSpace]", "\[Beta]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", 
           RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "1"}], ",", 
         RowBox[{"MeshFunctions", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"#3", "&"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"PointSize", "[", ".02", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Append", "[", 
            RowBox[{"p", ",", 
             RowBox[{
              RowBox[{"loss", "@@", "p"}], "+", "5"}]}], "]"}], "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Append", "[", 
            RowBox[{"min", ",", 
             RowBox[{
              RowBox[{"loss", "@@", "min"}], "+", "5"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", "Red", ",", 
          RowBox[{"Arrowheads", "[", ".004", "]"}], ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Append", "[", 
              RowBox[{"p", ",", 
               RowBox[{
                RowBox[{"loss", "@@", "p"}], "+", "5"}]}], "]"}], ",", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"p", "+", 
                RowBox[{"d", "@@", "p"}]}], ",", 
               RowBox[{
                RowBox[{"loss", "@@", 
                 RowBox[{"(", 
                  RowBox[{"p", "+", 
                   RowBox[{"d", "@@", "p"}]}], ")"}]}], "+", "5"}]}], "]"}]}],
             "}"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"SphericalRegion", "->", "True"}], ",", 
       RowBox[{"Ticks", "->", "False"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"g", ",", 
      RowBox[{"ViewPoint", "->", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "4", ",", "2"}], "}"}]}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[339]:=",ExpressionUUID->"7f0c1461-93d5-4679-b5fa-2ed801499c29"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
FsF44kLGmchp8lDccRaaN2TL/OanuOMcOuus5BUsTHHrYOJ8cs1hQzGKWwcY
l6Zlteg0fhfGfJUGmZsLt5K6WKD/8qdSYnqm0hS3/vwK6yKyaAbFnXfob9Xz
VW4eKheh4Dvi8Op01cinpL4W9IfZp5WFNR8zKe7+wFOc/LP6Pqm7BX6Cdlb7
RpuS+lq4vr0qaqlqw0QO/rfWWco+cSB1usD/KfkTHwcSJZHD83ocmOWhOyqN
HJ73S0TEym33hJGDzjpqj1OcOGLIub9n9VKPFps/kcQ8htbeLg0QF0B77n2P
5t2V1aVbpLCfaO3c9DNj9hjedwU/kXuvi043asN7qmCf9HZDjb7BEJvbHsYx
qWLGndlLJDH+MufH7VeySF0viGdJsbm0ppogxf28MI7t+V008Oi1BOq2s8y8
+YuVCMWtw4fUvNTRQTGKW2foh+LCYlbSFxmYr3nTZWrld0pS3PpvDI4fl1Ui
TXHnfcHTrTkTBEg9MfAD/bCZp2TbnucMCvbBXCfNbp46RuyhPwhUdRSH9zGR
Q3+7u/Nk5pXvpC4Z+IHv8c0GOUYG+SQeH0lFztcaUpcM4ul7Hjx792cmcmh3
f+L1Cs0uUt+Mex9vdE6el7kg4TBfrxvKGLZ0k0U955+VO1g5LIV+QLfwFTMk
Lj5gIOfe3zNvSn7/xIaF+XVR4y8+HCCK9pBHMTWh9pObSV01/B4Mjz8xKMWH
HPdRvV9oeamQemvgv/baYLK7yi+85wz9E8ZVDZXNsgKFpD9jPboXu1Y1VDDR
frjj4nKri11sbj8wrg5nbv8a9Zr052kyGXcMrw6zueOE92Lv2zkSfvNZ+Lyu
G0ZtZm7ko7jjXx1beUqgTpDi1gfei0Nv9fyevGei/v5LrBRfcEQobt20z1Ci
CyPFKe58PUvNj82qlaS48+UyvdDrlyiD4u5X0M/PPEx/bHJQloJzB/F36X0L
tEn9N+hvjbITJUzGMynu/nbbPUVdVoLUhYN+nnhMwaJvlHDwv1hSb0bwElIX
DuLJW6nhcn8dqQ+A+wnuRluLciSRw/MqBl1d3KuI5/X4vL6mX29uShVGDjoP
sCsv7SjF83fq/5x3h75+HF0ph/nt5t1yqjqPH+25z9F8IuwZm1PksP9kyR/+
4hSB593op1A7sl2n4CtysIf+KXspqbPWlNjX7r9k3DG7l83tB/qnZu+RnTNU
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
O3WasGS2APh/NT/d+w==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxNnAf8V9P/x++OjEJDKlJCKWVlhRAhKqWhrKyWEdEyQjsiQshWoWSWlb03
ycxMtuzxy/6/nr3e/X+/x6PTed3zOffcc+895/1+vd/3/f5uevTJ3U/KkiS5
uUySXPWjOlhP9dZFkpwm/EWaJO1VBui4mdr/Utu2wpzzjP7bSVj/kteEdyg8
xgvCuwhryOQN4X4Cawm/L3yU8HfCR6i+ReUb4b6qO6p/beEn1edDlbWFP1K9
m9rXEf5UuH3h9mXCHTWnX4Wbq3QqPOfn1H6Q8AbCS4S7C28k/LFwD+GGwp8I
n67ync7fU2WC8A+q91LpoPKD+tRT6az+66t+Rb/3FG4k/LnwMcKbCq8U7ipc
R/gt4eOEmwr/LtxbuLHw19yvcBPhX4QPE95E+Hvhz3TP++h6t6meqOOrhfdV
maw+e6hPKz3IAfqthXAD4Wv1WyeVlToeWLj9X503WHgr4Ux9Bgm3FOYl3KS+
B6r8o8P5GucP1YNUD1WfrYVrqs/++v1P4e0ZS2UnnqXKCI37h347QGW4+rdV
23rqf4OOO6v8reMzC/ffSO0/CF8qfKNw70rX1vm9VB+scr1wF9Xnq08H9Wmt
Pt9pHgdpnLtUT1D77mrfUu1jhXfjnQqfLbyzcGPhqcJ7CrcVHqXxUsbU+bNV
uqpkKjupbUeVXLhd5vvopXJRYbydzp0mvJ/wDsJXqd/eKj/ruJ/mN0fnHKr6
J82pm9rvVn25+h+o39ur/xT9PlllqI47qN5DZU31G6/SXeUTtV+j/l1V76P+
M4W7CO/FuxPuJryv8HWF57W/8C3C/YS7C++euf04lblqP0x1T7VfL9xb+ADh
AzW/HrrWPZrbjWrvo/YD1b4r+431ruOx+r2GSqUyX30OV1tv9VkofDz7Tvh+
4QHC/YVvV7+eKst1vK7qY1UPU5kovLbKGiqL1H+g2o5V/6eFTxIeKvyU8InC
JwvfIXyE8KHCdwofyb4Wvkv4KJ6x8DkqZyBj1PakygnCJ6ntSuGDeK7Co4W3
Fa4rPFnXrq2yjsplOj5f7fNYG3oO83W/J6m+R7/1VvkUeVR47qeqz/PCp7OW
hZ9FlgmfJvyi8HDhUcJvCp8pPB6sMfqpbKDyRuF5jmOdqFws/Lba3lI5S3gC
c1G/+irrqdRTqasyRr+9rD4j2B/q847wecKThJcKjxWezHPQvO/U/E9T/aXa
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

             "]], Polygon3DBox[CompressedData["
1:eJxFmgn4l1MWx+/v9y6Woqxp0R5RpKJUtJnQRrK1b6KFNpWRUtJqCymVYYqo
EckyqGiRtFD2NYUMhShLYmzN99P3Ps88T9/+5773/u57l3PPPed73ip9hnQc
XAwhzNJ/qf4eqf+OEBpmIZwpfJ6EsEzPNwgnqdwiD2Ga2v6g8mMqny2cJZTR
b46LeFd1rwTXXa72D6t9R5Wnqe4yleer3FLluur7I+FDoaTaHiZ8IXk57yqE
MCVz3QdCicxtVgkDVXencJfkOsKpwldq87WQqv9y6r+C0EpyKb3zcOEMtWkQ
58TcflTbn4RMbaqobR31tynzM+qqSq4mvCz5XxrP88IRKp+v9nPU/lyVz5P8
kupXC4errpTwpeSVqjtF/d3OnPTukkI9yfUzj+N0Ybfa7Uk87lVq/6RwXBwj
baj7XjhUvz0k9TxPE/br2V9CU8nNhOaqayb0ktxbOFryUUIjyY3ZG41xqsbb
Rf1PZ/31bKfkY4T39Ly+6vtrrLWF21RXQuV6en62yhtU3iq5nNp+J3RVeW9c
N9amunCU2jdWm97U6/kC3qnfjhEul3yO6qer/g/VL1E50xg2xfWppXKu+mqq
HyLcqvIE1d8sNFFfZ0W0Q5eC6w5S+5pqe23R4z1U5VMln6j6t1X+m8ozitah
JLcuvyV5TfC+s0Z7JFcMXrtz1eZeta+r8axmPfW+9qprKkxW/dTMus8ZQB+b
qv0taj+OstquE14RjmLtM+8Z7+Kd7CV1j0peGtyGveGMoYfs0Wnqrx9rUfD8
0ZO6wi797lvhBMk1hH2Sf0HP1P4M9E/tv4r6OFvlBkIpyWsS6yS6WFpYm1iH
0d0jhTXC4IL3YJbkc4VWmXUMXeuWea/Z821F69p6ye8H69yVescoyQOFPpLH
qP7vkvsLL+j3VwsDhaKeJ0JDtRmrfk7WO2/R70fo2Qi1vVJ4Ru0mq/4GyVcL
EyX/qbY1JP8s9FX7z4RvCt6zVyWX1+8bST5fuBE9128m6jcNOT+qK6Py+SpX
1W8mcJb0rLXqOgl3pd6/sZKHoFOSTxdGFK2zFSQfr/aNg38zln3Ss5tUv0vl
f2WeU23JTYLnup+5BY+pf+oxjRHKJR4retxYmKFnMzGw6CR7xdqqv1/19xeh
j+quEHoI3YXD2GuhZ3yGXEo4Wqirbqqyhql/11sozR4LD/Eu1U0SPtHzZ1V+
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
bKLTP0oenjs2eVLlkZLHkS+I5Zty6xC6NKxoe8GesXfY8A/19++5uYZnsAFw
j7nvDjjylXpfeZW/Cuas4a6x0djqktxD0V50KDjnQ+6nMTF80XvO3m9PHMs8
i01Bf/F3iy6Pyu1fkjvh2WiVSwr1i94z9m5QnM9iPRsS+/81mINvIvnGyOdT
PzY3P8/eTIr11zAf4S3N5W18L/V5XdE2GlvdOTPXTg6KXBTxL2eLHA+5HuZ/
QdFn4vPMMS2x7VPCF6nzT18H20RsIzYR28hv4PfhH0rG+62Byj1z2w84j6GZ
+Stsf/ui9Wu/yg8Ec/aFWC5NTMY7E6/fY6p/XuUxqn8N3yE4p0huERuOLd8f
7UtFPdsXPOczcvMlcLENibNyA5kcI/kcYkZiR3Je5L7IaZDbaF10PD4gd2xM
TH9d5nidum3xvByLjhXN+cLvwo/iq/KMOu6/ssE5DnIdrAlrgw9wg+puTszd
weGtTu0fdC+YEz8x3kG9I2cFdzUu8XiI2dFXbA62B46+du77ndwOPhK+0hWZ
c00ncWbVvkFi/wYO+1K1H6L6wfhnki8WXpA8tOg76cDdlJmrhrOmDfwV3F03
xpk738xdRQ6aXDT6Rmx6WVx/7mNynehMp3j/w12SI3sp9gXXDudOn+VT+0L4
QDOi/4XviQ/K+cVGkFu4O9qOk9GxgjluuO7OucdLf3D5kzPHbvgLxGusx97g
PSH/Rs6M3NnMovPZI3LzZ8uiPRmbmTvFn4P/JEYmVoYz43xhf2jLnczdPDi3
riyN55M2nEVyIPyW80sde8hesuerhPGJdQEOjv5fEG7G/0jtu5FDJZeKP4Rt
I6dLbpd4pYTe90+V2+X2b7hr4cDhwjkP7AV34K7M+XvmSg6XXC4+H75fTeGv
om0H3B0cHuOGo4Sr5B0j1LZt7nfN5cwnBjI+FPlv2gzPzPHyW+4GYkdiSO4I
YgJigzJF55Ouy21bWHPW/sbM9hlOGP6cfCG5P3ygAak5N7g3OCi4KPJ25PKG
ESumzqeXiP4SsRL3P2cBm8D84UPIze+M/jz3P749Nh97B8cI1whHBVcFrw0X
CScJTzkxPkOGu4Rz5/yuFKbmHgNjIYdFLoucDbkbcrbkMyfk3tsl8f46N/Fd
yp1KfoD8VjP0HxuWmj+cwv4H82E1cusa63XAfqTOm5ADJS93Z+ZvQ/hGpAlz
T+wj4huSO2Wt6Jt3ME5iaGJpOCq4qltyz+XxeP8QFzZIzXvBhR3Q0cR6wl3z
vd6xJ9qQIRHc7dh86v7MbMvZU/Z2JDqSOu9F7o6YltiWGJpYmjnThjrWolTc
Y9Z1uPBt0bwH32TwfQH5Z3LV6Aj55I+FLak5Z7hn9AvfAJ+B+wv+nm9l+KYC
/wU+jdgFHxNfE84S7pIYmlgazpZnyHCLcJZwl+QkyE3AacNtk4MgF3FS7vsS
Tnhc5juLuwtOifuePq4P3lP6hlODW4NT2xN9BnwFfAS+1YHfx1fDZyN/QT6W
s4PPhr0fFdvjc8Atk88gdpoczM8CuNpRsY4xkxucFDyXAzxNsI6Tx8Enwjfi
zoWfZk7k9iYGzxX9wPfAB5ka7SO5ITh4uPghajM4dZ6P3N/Q3LEKNnFw1Bl0
a0XUJWJWfFN8VGJZ+B5i8wnB+YYJcf/wibCH9D0odd6Qd8AfEeuTryT/gH8H
tw6nTO6DeJ7YBJ+TfC38ElwA35jwfcLQOB/6J54akjg2Ir9AfoLvQYhl8MHw
5+Gw4LLIe70c409iY74R4XslbAZryzcC2BL0n1wgPg7+DP4L31Z9JnyUmd+o
FswpX5j6ew6+reKbFeJB+BRy7+TgiMf5BoFvEUbGs8JY2EP2bk2MH+pH/mBm
5ngGrnmd8EFmG4+t3xv9Ad55QWqOhbHgHxLb4JPim8Kv8+0SnCfxOd8c8e0R
MRexV4fMsS8x8PzM32vga+BzwE9x/9aMfBDc41qVX86coyFXwzcWfVN/d8C3
CJszx8rEzPOwJbm/dSgd/UO+5+FbJnwUfBU4brjun1TeW/R9eXXB/gPcCjEU
sdRH6qpS6ne+HRxTMZalwvOZcwrkFoifyR3j4xNvsIasJX2ujm0WBPsc/Pa3
zLl1fDbig58zf8sAh7Yv3pd8GwanyP3MWFsJPxY9ZuKkqsHfnPBNCN/nVA/m
6ztE21w/dU5hc5wjv+O7lV6pv/FrGcxJwU1hS4kl4SCxqdh0uFk1O2Drb8AW
pM6pk1uHk4Obg+cnNwCnC49LDoFcQh18zNQ5CfIA5O84G+TgyM/xDQnfknAu
Ofv02SL4GxLehQ3GdvBNDLaZfOHYeL+TvyN/hm2G89+X+psvvv2CQ+H7A76B
OSTalaHRVpIbIeexO64Fa8k3PKwJ61M5OKeCbvwPoMcjOA==
             "]], Polygon3DBox[CompressedData["
1:eJwtlnt0j2UcwN/t9/6GjTCtk4hdaBu2ZZPLStTQsAvTyrCLWbuVS8aW9oec
6FRo5naiaMOclmrVNptaZ1ihXJYKMUwKuWxGzCxdPt+e7x+f870+l/e5fJ/X
J3Vu3BxXy7JWgBM2OyxrNfJ95CnbshqgGn0LvgpkE3Yz5LhZVhkNL6CX4v8I
zsIZaId95PvT4Q705eiXyPsUvQzq0PfCUvR8Yq8hXcl1gXL0YnyHkdHYUdCV
3KP4BiCj8UfBNMbfzviF+MZABFzH7kteC7Kddp2R95BtcBfeg+EulrUR6Ul+
Dyihr3W0KUb+in0e7tLOD58nvjTsF2RciNKYL7HbyCX0401/rfh3k7sHekM4
8Sx8FroLLGOuL+l31koubEIvxLcR+Qv2SRgq306/k8mPgViYDy/Dh8Q2WGa9
I9GfRy9AD0MfAq+g50EQ+mhigcgU7GToih6CrwNyIvYEaGMcH3w3kEHYg5Cd
ZFy+KRaegXHgTqyevH62mcPb6BfRP0b/BNajr4M49OnEpiBzsOdDAPqT+HyR
X8JW9CpkC7Eb0FHnJfHZ2HOgG/pgnf8C7IUwA6aDO75gYh7IedhzoT/6SHyP
IL0gDD0YuYjYq5AB6baJheqehsvZQo9FriG2VvL49nTIgh2sRSZyFv5U6E7e
o+R3Rt5mTToRv4P8E27JmcI/DCbRpojYYtok6Pmc6mZikrMB/7sQjz5Dx8+i
fTt6JtKJ7SZjkHMLtsv6EqtB9oU+er4G4su2zZmWsx3IGGmMFYDsRfwh6AmB
0i95teQEc04fR3phPwDr5dw7zP3cqHsaCoPhAH11x1eLPAQ99LxHEhuvZ1XO
7Ju0fV1rRRx9X0APwb+H3L0Qhi8UrsndkH2T84k9CC7KXcDnhq+L3FWoxVeC
77isN3YIXEbfja8jeZOxXXVewbYZaz+6p57jsdjjIFv3MJf8CqiEfuAHJ+mv
QvKRNgShT6XNVfKvwQBdy8XkVkE1NGF76/1JIHcaeOPvC8fwlRNrQp6DRvgb
9uMLIH6ctl7o7cgY2sXCNtiqtSyBWApyDLkR0AH/EbkTyJnYKZAES9i/75FX
dT0uyT5j95K10zsqazRY1/w54kn4XpQ9lvsK98EPug9DyHlMzrKOJ/sQrGsu
cziMz7bNXsmeHZBvkhoJu4h5SU1Fr5S7h34HvU3OLuzU2v8X+j24CXt1jXzw
+zrNGlXLPZdHh3FcbPNuVOm6/YP+L9TDZ/oeOPDbMmfoCF/h20bsR4epWVK7
TsPvrFUDciFk6vrmoC+A1VAIq6CAvEPIbLmHWqdr2KelyBO6r9K3OzkekCx1
mHgS8jp2C9zUOiq1IZFvSILf8J2HRuhM7An9PvnOXnACdTRtv0avkfdFxseX
j5yAfzx00b3y15r+FHqE1F/s5VAFO6W+48sglos8Iu8r+kGHeUvlTd0H+Xzn
JOSzEA/+xEeRNxK5lD6WyRmQdSHvMLIOvoHvXP+fsnVQ7rKcGXlj9f0vou1a
recy/zSHWW8P+ighXibvvdRoqe16DvMkBz1Hzo3Of6J8s8O8aZHEVuFbCSvk
LktN1e+uwC6HRPR07eOa3Fvb/LOs0f+TSr3zeVqnW5GL8OfqGlWTv8s276vU
6mg3U1elvt7Smt4fXyqxfsi3pM7B08RjdM1KyWlGT0T+Qd5lqHc1/09HkUPJ
HyZvE5zRuzxW39NE+pwBKXqW5uEbSLxR93qi/vM0MM4pvU/fEuuPL0O+HWbR
tpS2M5FTIA7iYQu+2U5Ty65Ass5zlLzFcFbf8Ug9Y+dkXHiHPt/Qf6DhOvef
tO7L3vck90GnuYufa+3ZJO31n2yD0/xT9dZ6dJT4F8SuIH+mPVOzjiFHkBtu
m1rRCgX6Lq10Gr/EpV7er+v4Af7NTjOW/LcVIbdAsdO8BfLebJW2MELeYvqs
w9eNfvzgNLq3beqq1NdmfYdkXg9j94H/AK0yWbc=
             "]]},
           Annotation[#, "Charting`Private`Tag$1830616#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LlFEYh/E7XzPN2pQZoQySKDq2EBGlcCuYELqqFEFxoQvdKhG0a76A
2ipR0E+gO3e+QG4KNc13BRMVQV268/cgzDXX/9zn3Oc555lJ9Q53DD2IiB/4
LyR5zNcpP8V1VkQ5F2ZH1HElv+P36JQ/8yBG8VFfhvv0dMsTcr/cI8/K87jV
s8Rv1FLm1uXt3Igj40E8z4l4hg31F1yCv/JLLsWm/Iq3uIz/cb2+cnk7OZc9
G4xreMe4NC+iXW5U2zVOWbfHFbzPr7kSB3IVV+NQruFaHMk/nW8STfZ4aL9a
+6XNHZvbVT9RH8Za8s7UF/nGPed4k2d4gcf5O0bwxXggeYf6PnHGnh/kNrlL
bpffyq2c5hzry/gKF2pPeMuzV+QWnOs5Q3HyO/IJHsvHXMQHXJiclx/xJb7p
K+BxvuCvyf34lHesy0+ewa4cG+xx8Zv/wDXjF6/C0WKJl7ECn5iyeBrN9trP
vf9v3QGbjUtW
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{710, 1074, 703, 1070, 704, 1089, 749, 1114, 777, 1135, 805,
          1155, 828, 1174, 851}], 
        Line3DBox[{714, 1077, 718, 1099, 753, 1093, 754, 1118, 782, 1138, 808,
          1158, 832, 1177, 847, 1171, 848, 1190, 870, 1635, 1214, 895, 1661, 
         1662, 1646, 1648, 1232, 914, 1663, 1664, 1652, 1654, 1252, 935, 1408,
          1270, 960, 1294, 986, 1013, 1020, 1341, 1048}], 
        Line3DBox[{720, 1080, 715, 1075, 716, 1097, 759, 1122, 785, 1142, 812,
          1161, 829, 1156, 830, 1175, 852, 1193, 873, 1669, 1216, 898, 1644, 
         1234, 916, 1650, 1253, 937, 1271, 963, 1297, 989, 1018, 1023, 1343, 
         1050}], Line3DBox[{724, 1082, 721, 1078, 722, 1100, 761, 1125, 788, 
         1144, 809, 1140, 810, 1159, 833, 1178, 854, 1196, 877, 1218, 900, 
         1236, 918, 1254, 940, 1273, 965, 1299, 991, 1021, 1025, 1344, 1052}],
         Line3DBox[{727, 1366, 725, 1081, 726, 1103, 764, 1127, 786, 1124, 
         787, 1143, 813, 1163, 837, 1181, 857, 1199, 875, 1195, 876, 1217, 
         899, 1235, 917, 939, 943, 1276, 968, 1301, 994, 1321, 1024, 1051, 
         1428, 1054}], 
        Line3DBox[{730, 1599, 728, 1444, 1083, 729, 1378, 762, 1102, 763, 
         1126, 789, 1146, 816, 1165, 835, 1162, 836, 1180, 856, 1198, 879, 
         1220, 901, 1237, 919, 1255, 942, 1275, 967, 993, 1658, 996, 1415, 
         1416, 1026, 1427, 1053, 1606, 1472, 1429, 1430, 1498, 1055}], 
        Line3DBox[{731, 1371, 732, 736, 1106, 767, 1128, 795, 1149, 820, 840, 
         842, 1184, 862, 1205, 883, 1204, 885, 1224, 906, 1243, 926, 1259, 
         949, 1283, 973, 1282, 974, 1303, 998, 1324, 1028, 1323, 1029, 1431, 
         1474, 1473, 1345, 1432, 1494, 1562, 1561}], 
        Line3DBox[{734, 735, 738, 1107, 768, 1129, 797, 1150, 821, 1168, 843, 
         1185, 863, 1206, 887, 1225, 907, 1244, 927, 1261, 948, 1260, 950, 
         1284, 975, 1304, 1000, 1326, 1030, 1325, 1031, 1347, 1056, 1346, 
         1057}], Line3DBox[{737, 1084, 739, 1108, 769, 796, 798, 1613, 1616, 
         823, 1624, 1626, 844, 1186, 865, 1208, 886, 1207, 888, 1226, 908, 
         1245, 928, 1262, 952, 1285, 976, 1306, 999, 1305, 1001, 1327, 1033, 
         1349, 1058, 1348, 1059}], 
        Line3DBox[{740, 1085, 742, 1109, 770, 1130, 799, 1614, 1617, 1151, 
         824, 1625, 1627, 1169, 845, 1187, 866, 1209, 889, 1227, 909, 1246, 
         930, 1264, 951, 1263, 953, 1286, 977, 1307, 1003, 1329, 1032, 1328, 
         1034, 1350, 1061}], 
        Line3DBox[{744, 1373, 1375, 746, 1111, 773, 1384, 1386, 1516, 1620, 
         1389, 1619, 1391, 1520, 1631, 1392, 1629, 1394, 1570, 1396, 1397, 
         868, 1211, 892, 1229, 911, 1249, 929, 1248, 932, 1266, 955, 1288, 
         980, 1310, 1006, 1332, 1035, 1331, 1037, 1353, 1064}], 
        Line3DBox[{752, 1092, 707, 1363, 1365, 1478, 1488, 1477, 1502, 1501}],
         Line3DBox[{772, 748, 1088, 1377, 1482, 1504, 1481, 1495}], 
        Line3DBox[{779, 1116, 751, 1091, 706, 1362, 1364, 1360, 1443, 1442}], 
        Line3DBox[{806, 1136, 778, 1115, 750, 1090, 705, 1071, 1361, 1441}], 
        Line3DBox[{891, 1213, 894, 1231, 913, 1251, 934, 1268, 958, 1291, 983,
          1313, 1005, 1312, 1008, 1334, 1039, 1356, 1067}], 
        Line3DBox[{956, 1269, 959, 1292, 984, 1314, 1010, 1335, 1041, 1433, 
         1066, 1357, 1068}], 
        Line3DBox[{982, 1293, 985, 1315, 1011, 1336, 1042, 1434, 1437, 1438}],
         Line3DBox[{1009, 1316, 1012, 1337, 1043, 1435, 1475, 1485, 1440, 
         1439}], Line3DBox[{1017, 1016, 1422, 1426, 1484, 1541, 1483, 1497}], 
        Line3DBox[{1040, 1338, 1044, 1436, 1476, 1486, 1500, 1358, 1545, 
         1544}], Line3DBox[{1045, 1339, 1423, 1014, 1317, 987, 1295, 961, 
         1409, 1463, 1407, 1577, 1528, 1532, 1403, 1590, 1402, 1573, 1523, 
         1527, 1399, 1460, 1398, 1641, 1638, 1636, 1633, 871, 1191, 849, 1172,
          826, 1153, 803, 1133, 802, 1139, 783, 1119, 755, 1094, 711, 1072, 
         708}], Line3DBox[{1047, 1340, 1019, 1319, 990, 1298, 964, 1272, 938, 
         1651, 1653, 1667, 1666, 1665, 1645, 1647, 1673, 1672, 1671, 1670, 
         1668, 874, 1194, 853, 1176, 831, 1157, 807, 1137, 781, 1117, 780, 
         1123, 760, 1098, 717, 1076, 713}], 
        Line3DBox[{1049, 1342, 1022, 1320, 992, 1300, 966, 1274, 941, 936, 
         1649, 915, 1233, 1643, 897, 1215, 896, 1219, 878, 1197, 855, 1179, 
         834, 1160, 811, 1141, 784, 1121, 758, 1096, 757, 1101, 723, 1079, 
         719}], Line3DBox[{1062, 1351, 1060, 1352, 1036, 1330, 1004, 1308, 
         1002, 1309, 979, 1287, 954, 1265, 931, 1247, 910, 1228, 890, 1210, 
         867, 1188, 864, 1395, 1569, 1393, 1628, 1632, 1630, 1519, 1390, 1618,
          1621, 822, 1615, 800, 1131, 771, 1110, 743, 1086, 741}], 
        Line3DBox[{1065, 1354, 1063, 1355, 1038, 1333, 1007, 1311, 981, 1289, 
         978, 1290, 957, 1267, 933, 1250, 912, 1230, 893, 1212, 869, 1189, 
         1459, 1612, 1611, 846, 1170, 1596, 1571, 1458, 1522, 1521, 825, 1152,
          1568, 1567, 1457, 1518, 1517, 801, 1132, 1453, 1385, 774, 1112, 747,
          1087, 1376, 1374, 1449, 745}], Line3DBox[{1069, 1359, 1499}], 
        Line3DBox[{709, 1073, 712, 1095, 756, 1120, 775, 1113, 776, 1134, 804,
          1154, 827, 1173, 850, 1192, 872, 1634, 1637, 1639, 1640, 1642, 1461,
          1526, 1525, 1524, 1572, 1575, 1574, 1462, 1531, 1530, 1529, 1576, 
         1579, 1578, 1464, 1410, 962, 1296, 988, 1318, 1015, 1421, 1425, 1424,
          1471, 1046}], Line3DBox[CompressedData["
1:eJwl0b0rxHEcwPHvuXMG5itPg9XgcIqRQtmw4GLxkEEeBoVYXR1XVoOHyUMs
Vzd62HTEYlGUhJT8Dyevy/Du9fk99Pn9+v2aJheHFyIhhHl9VIbwru54CD06
N59pMBZCqSKEafOMEtEQ5tjCNdeSzLGfB0wzzyXeMMMn7vKbea7Yv6qS47vy
HvMnN7iuTfuj7FVMfco618lLJnnBVm4xzja168pxitusYjOvy/s8K8cvz0kw
owdz4D0jLPDHfft85h5fmGWRyyxwgocc4A5T5XdnHWs1a9evbzbk3JT51TzO
E3V5p1OmVWMeYzVv+aaiRvWoER2r0fUjNrBD9fH///UH76w4BQ==
         "]], Line3DBox[CompressedData["
1:eJwl0Dsvg2EYBuCnDh2aOCsmiR0JiQGpgaEYDTWQSAwmIUzEYSFhsqu/IGg3
foDBInGI7o7lN2hdjeHKfT/P935v2q9veX1uLRERS/w0RnwzmYyY4lK/YKch
Yqg+Imc3z4k5a27XO1jQC3YbMmOe4Ejf8u42p/qu3OOXgrkqE84FFf2abv1A
9shnWaLi3kFzPwPUUbW78ezOPYeyKMt2+/qZ/qLnZUkey1u5KYtyUabd0UUn
s8zQShstTJNl1X1XDHvnqfa75Kj9OGOs2DXJZr70cu0/OPMgU3aP8p43Xvnk
g3fOGXGmN/n/3f8AcD4x0A==
         "]]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
      "]], {}}, 
   {GrayLevel[0], PointSize[0.02], Point3DBox[{3, 1, 56.50239736135707}], 
    Point3DBox[{0.2054675103868579, -0.4016774437055123, 5.002900949338392}], 
    {RGBColor[1, 0, 0], Thickness[Large], Arrowheads[0.004], 
     Arrow3DBox[{{3, 1, 56.50239736135707}, {2.012066336424508, 
       0.8451223825909406, 27.821902421213423`}}]}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-5, 5}, {-6, 6}, {0., 217.42809246976304`}},
  PlotRangePadding->1,
  SphericalRegion->True,
  Ticks->False,
  ViewPoint->{-2., 4., 2.}]], "Output",
 CellLabel->
  "Out[339]=",ExpressionUUID->"e53203df-d5ab-44fd-bd35-17b11a2d9308"]
}, Open  ]],

Cell["\<\
For a well defined error function, nesting the updates with a small update \
step leads to a fixed point.\
\>", "Text",ExpressionUUID->"eae09b27-70e3-42da-8a32-1063aa084b79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"#", "+", 
        RowBox[{
         RowBox[{"1", "/", "500"}], 
         RowBox[{"d", "@@", "#"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], ",", "2000"}], "]"}]}], ",", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"347d2fae-514b-4e76-a3d7-2c84f12e03a5"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw023lYTev7BvDIEEISQkimEEJUhNuUJElFpWiUSpo1z+Nu3rs9llAUIYQQ
QhRClERFyFQdQoiS8Nu/6/u8559zfby9+173etfTXuc6l8kOnqY7+8rIyDwa
KCPz///+3z8dK/73bznQH6BexB/Z+Xsg2J+fHlKg3tbFrIDvHctWNH1nVoJt
4xaLmi/Myuhv2eFV8ZFZBetlhqWUtDKr4t3O0wWFb5nV8Frlye2cV8xTcehS
RIvgOfN0NNWcHphYz6yOrK6ds8IeM8/C0vJDxt7VzBrwvevst/M+81wY55zd
Z3WHWROzX8ZXbCxnno8bY999XnmdeQEmfLg3bvEV5oU43LLUYNZFZi0MPaod
MPEc8yK4l187qniaeTFm1T1qHHCCWRtyPt5Dfx9h1sHExQdWfTnErIsXlyyD
3h5gXoJh4twz9VnMS/F4V9DH+yJmPRTcbp5elsG8DPbGDY7FaczLoZFld6gg
iXkFuGuD32THMwOe7dOm8qLJkUD/2U674sLZ+kr8t39RYVAwW1+JoW+yvu3x
Z+urcFUgWOLgw9ZXIddsSuxWD7a+GldL11UburH11fDy6Kuywpmtr0HAQHO3
hQ5sfQ0+Tl92ecYOtr4WcL82RGUbW1+L9QENOxS2snV9LG5LPtfPlK3rQ2Db
OOjXRra+DpvCb9h/Ws/W16Ho/Zorr9eydQPYajuNfrqSrRvAcZSq771lbH09
1NSCHl3TZevr4SDjNf/cIrZuiHVm/flH57N1Q2y9pvtz3xy2vgF+74dac2ey
9Q1ocY++ETuNrRvB7Jd4ZtBktm6E8nmb+HsmsPWNOHC+4K/9WLa+Eac183dv
HcXWjaG2bu0zwxFs3RgJBxMNVwxl65tQ3exTunAQW98E47N9NNX7s3UTlF5Z
nK/ShwwTaOUrqoz4M4B+XuoxIkH/X+QyE+RcvjGsp5MssxnXdURJnzvI2Izl
S5Xk3raz/Zsxx10vob6N7d8MWf/hclXv2H5TZMumJZU1s/2mWFpWMux8E9tv
Co4FV3Csge03BW/vKJUDdWy/GR7cNsjPqGH7zTC2e5ZmQhXbb4bLF0pLQyrZ
fjPYFP019Kpg+82hxP/6zKmM7TeH3VCRu1Up22+O6Q/b/20sYfvNcT72p2BV
Mdu/Bbebz83WLmL7tyAkY1rF7EK2fwscDI12qBaw/VvgfUm9RymP7d+KIbwr
4kE5bP9W/Inur/13H9u/FZErBzZ8E7P9W6ETcSO4lc/2W2DxF61JTelsvwW6
1jjcqklm+y3grGW451YC22+BRu9Poy/HsP2WGHXW6OapCLbfEhuPu3geDmH7
LTFZYdVESQDbb4nczMaHKb5svxUM/8yLivJk+60w5NvaRf672X4rYJ7KR7dd
bL8VLrifO2TryPZvw3EHeRtzW7Z/G+7dnTFmvTXbvw2LrQfULbNg+7chrKYg
Y4EZ22+N3LfDzWZsYvutMWaT3iiVDWy/NSoezG1UWMf2W6Pv+LYD/Vez/TY4
8M3FuWc522+DeoWz874sYfttYL+gouftYrbfBjuVcu40LGD7tyPCT1/0YC7b
vx03FEqcb85i+7fj7NEfOhens/3bYdz9T75Qje3fgUE369/kTGT7d6CqIuyy
cBzbvwPdZd/4SaPZ/h1wCtD2jFBk+21hd8zIyG8Y22+Lc8oLZ7sOZvttkZ3w
cciOAWy/LepK/D+b9mX77ZDq+aR23d/+/7OqHXw85S7p9ZBhh4JQhdz5P8l2
dqi2/pw0/Rs50g59ag/5j/9MzrHD47y5TgofyGV2sMjKMOvfQm62w9ig6jU9
r8ky9pgi16L95QXLt0fPsHqNd40s3x6Hthye0viE5dsjO2+DysNHLN8eLRU1
o8sfsHx7/IlYOLLkLsu3x4uDfiNO3mL59pD5Ihhx6AbLd4CDjnCk+CrLd0Do
Ov8xKZdYvgMM23QmRJ1n+Q4waH0x1f8My3eA7wjnubtPsnwHrNeq1bU7xvId
UDVhyrot+SzfAeHZVlsNc1m+I3ZF+O9asZ/lO0JBFByslcnyHRFf5Jw+U8jy
HWF9cOmRiTyW74gjC3uujUxl+Y7ou+Jwo1wiy3cEj6/9808sy3dEj2yJ0vdI
lu8EN8dpi9pCWb4TRHGRFi8CWb4TLi2/F1Lrx/KdIHaUPXTHi+U7IfSuxr1S
d5bvBD39dZ1nXFi+ExYVmakedWL5TjB+aWqcbcfyd6L76Npwng3L34l57zWK
4i1Z/k4EeQx6F2LO8neiTaVprLcJy9+JcffyNzsbsfyd0DXZlWxtwPJ3ojdx
8h2TNSx/J46aPumnD5bvDPn4mDVL9Vi+M5Jl5sRr6rB8Z4w8WHt3mhbLd4ba
ir3Dx2uyfGfcujbKQkGD5TtjX29xTn91lu+MR/Vm7T1TWL4zZmh+1+2YxPJ3
4fN7fuL78Sx/F+SeLX7+bAzL34WPn5rm1oxk+buQI5sQe2s4y9+F8j+Lmi4P
Yfm7EHv9w6KigSx/F45qHOHly7L8XYif6fol618/ynfBiH1am7i/yaouqHIe
dCauiwwXPPZpUwr5TrZzQWN+bbDXF3KkC2a2Vr7Z+ZGc44K8iVVG1q3kMhfc
1npRYvKW3OyCw4p/puu/YvmuaMvVEC99zvJd8bLKfdD8epbvCufwa2HTH7N8
V/zLVescX83yXXFzSpb7iPss3xU7O6a1DrjD8l2x5Mdtx96bLN8V81XD33y9
xvLdUG9r5Nh6meW7werwgpamCyzfDdHP5u+uPcvy3VD6w/DbnVMs3w0jWsJD
rh5n+W6Ys//hgHNHWL4brIcuFRQcYvluSJp5a8qBAyx/Nwzf7znPz2L5u/FQ
a/H6RBHL3412+UmvwjNY/m5MdJwZ4JfG8ncjes7WEW5JLH83XjgcOWkbz/J3
Q9IzzmhLNMvfjZvtxe2G4SzfHYoL9qYjmOW74325jdZif5bvjpXZ7s9n+7B8
d9Sdz4+d7MHy3fFzyCDNMW4s3x1Hs8Qv5J1Zvjsydpim9nVg+e4YumXJiu7t
LH8PxoWafP9kxfL3wLlWeOztFpa/B0YWQxwaN7P8PXg8+KxK9UaWvwdFn5Ia
K9az/D1Y10csubyW5e/BiXX1VkUrWf4eHCw3mnBkGcv3gDCw+80+XZbvgTNu
z4/zFrF8D9w98NMvYT7L94DTuA0rw+awfA9cfds43Hcmy/fAjT55zS7TWL4H
FEOPn9sxmeV7YKD1Z475BJbvicKjXnaGY1m+J27uXrAEo1i+1Ge0Ri8ewfI9
0RQb2Dl7KMv3RHfH37rJg1i+Jy70vXtxTH+W7wnPO/XZQ/uwfE9ob9SIlf0j
S/leaDp0Z8+vbrKCF1rrj1t96SSremF/79N17zvIml74N3mjzvN2MrxQZTVs
9qM2sokXoi6MV73zjmznhW0b/MdcbSZ7ecFEY9KIc03kSC9M9Bgz9FgDmeuF
FdPthhysI+d4ocOtZ4iwhlzkhXlmrcOSq8hlXrj6c4ZSVCW55v8/7+r4gApy
sxf21RZM21NG7vDCyuUf5zuWsv7eeHs/DlYlrL83xomDNm8qZv29sa70jtPa
ItbfGzxL7+Clhay/N9oSAzLmF7D+3ujv+bxwRh7r7w33GQfuTshh/b3h9ris
bWQ26+8NZcGawYMlrL83rJNnzZURsP7eeP/c1/xnOuvvjUXHJoe1J7P+3pCM
WVTwJoH198Zso9NPGmJYf288d+f1r45g/b3hlNOkfSuE9ffBlmEZ7lcCWH8f
DHt19vAZX9bfBzeX4sVRT9bfB4HGS8ce2M36+2DwqnwLwS7W3wczV0VIkhxZ
fx/YhNx7HmnL+vvg3zjO5ABr1t8H+psuue6xYP19sGKdbbGjGevvg+oFIX22
bWL9fXBh1bDNJhtYfx+kFYw9rL+O9ffBA9GBLr3VrL8PbuOA8cIVrL8PCp6N
LZi5lPX3RWSmYj9VbdbfF0vPJTqMXsj6+yJ/R2S5/DzW3xeuj7umy85m/X0x
2vBryq/prL8vxvfu+fFFjfX3xb0pnnYtE1l/X2zr/fGgaRzr74uWG7LLH49m
/X3heSaz6K4i6++L53KXppUNY/198WuA4/4Lg1l/X0R8lIw5OYD194V8l7Xg
cF/W3xczd58cmfW3L/X3hWFSmpDbQ5bxw0OxzLiEn2QFP/Rp6Jcb9o2s6gcV
bvYsv89kTT/oD7h7we0DGX4QRSWvtW8hm/hhpOH7pxZvyHZ+KC6odzN+Sfby
g0OrY5+1z8iRfugxSc5a+pTM9YPR/E2LF9SSc6T5T4rq1B+Si/wwNenM3kn3
yGV+GHXQdOzo2+QaP+n7qfC6/E1ysx82qIe4yF5j/f1wb3l/pZ5LrP9eFPzS
utlxnvXfC7/CIb6tZ1j/vbh8Imn6y5Os/1703Xiuqe4Y678XtS3xwvv5rP9e
nKkZsPlmLuu/F1MdtYZf2s/6S9e7FGpOZ7L+e/GmbT//iJD134tVGU1W+3ms
/17YmzxUE6Sy/ntRF+n3OSmR9d+LRdE1pVFxrP9ezCh+mxoYxfrvhVnAaXvP
MNZ/L9znLNJxDmL9/TFP13/E9r2svz+c/vp+MvNm/f3R/HpeleEe1t8fMetP
nFzpyvr7Y3l2K09nJ+vvj+GrWgLn2bP+/uifV+AwfTvr74+VGpqbJlix/v7o
Whu+XGkL6+8P9+0CzSGbWX9/9L7yndZ3I+vvD2W9iRN+GbD+/lj3WjCmYw3r
7w91NCq1gvX3h9+9dqWXeqy/P/5+qxnzRIf1D8C5OQkTqrRY/wDs/6IwvVyT
9Q/A21Oe8y9rsP4BuPcmb8UZddY/ACWyZ00KprL+AViYLHE6qMr6S/d/twoR
qbD+AeBf6hKkKrP+AVhg5XsmVon1D8ATk4c1IQqsfwAuThr83Uee9Q/AEn11
ZTc51j8AH9fOgn0/1j8A4bkjdlvKsP7Sz2t6JdnU24f6B6A3VHRXv5ssE4h5
ctp/lnWSFQJR37984aIOsmogUv8u3aPRTtYMxITQw8emtJERiJhBv9vGvSOb
BOLrgjWzFZvJdoGoiov0GtRE9gpEEfdMiUwDOTIQXm8bZLsfk7mBGDu8e/OX
anJOIDryFQ633CcXBcJ/6dSuF3fIZYFwcdIyflJOrgnEjQurCqquk5sDceWu
Sf+KK6x/IGoW2e28cpH1D0KpwKfy7DnWPwjhUYlzj59m/YNgKTkizj3B+geh
1v++bOZR1l+6/8ovH+5h1j8IGgMXvk84yPoHIaYncFvEPtY/CO46D2r9xax/
EF45zTf24LP+QVCddrRqZzrrH4TySZrG25NZ/yCc7H1Qa57A+gdBcWf0NqMY
1j8IIbKb3q+OYP2DcCtmke/SENY/CFP42v0WBrD+wZjYvFUyy5f1D4ZknHCe
mifrH4yH37/fHbub9Q+G5cS9u0bsYv2DMdN4nNwgR9Y/GEKd9ydkbFn/YBgL
6k27t7H+wdg19nvvl62sfzAsonSPt5qy/sHoji/c9sqY9Q9GUsvGYfWGrH8w
zm2fdOuhPusfjJgTahG3V7H+wfDjWuldW876B8Pt4a3e80tY/2CUqLuWnVzM
+odgotPahPwFrH8IHujbbN4/l/UPwS7J6YnCWax/CPqqrfySMp31D4H6KcXy
WDXWPwSNctOzQiey/iFI+xfq5zeO9Q+Brv1YU/fRrH8I9P/2LnBSZP1DcLBg
5hibYax/CAoX5v41G8z6h8Dcb+d/Gwaw/iGQWRlYv7ov6x+CbO/nlUv/ylD/
EGS+4l5d2EPuCMHnnVnnZ/8ky4Ri7OtfRVO+kRVCMXXemdPjP5NVQ3F43s0z
Iz+QNUNxoXzuxSEtZIRi2MPu67JvyCah+LBArer3C7JdKCY0FD7/3kj2CsXQ
/KzPH5+QI0NxPvpTv3ePyNxQFFgfndj0gJwTCkWVe0vr7pKLQnHpjIVN1S1y
WSj6yJtGVtwg14Ti4/grR0uvsv6hUK4T1BZfYv1DcV/9tczJ86x/GD4OP7Qg
/wzrH4b+UY279p9k/cNgtDcxR3iM9Q/D/tZzTan5rH8YIuq2qcTnsv5hmLEk
0jZ8P+sfhkDl6Uf8M1l/6ed7G3d4CFn/MIxc93vZLh7rL/38g3PTbVNZ/zCY
RX14a5HI+ofhQKemnkkc6x+Gg7L9JAZRrH8YFl3e2YUw1j8Mv6dZbtMNYv3D
sHHri7L5e1n/cBjYdM2a5c36h+OhYYFEbQ/rH464xd8GjXdl/cPxfFF9+Mid
rH84BtlbdQ2xZ/3DoVgb7NtvO+sfjjt5y773WrL+4bj387D/D3PWPxypraf/
fDJh/cNhIXHktBix/uFYq3Fj9CsD1j8cGyrvFdSvYf3DocOPXl4D1j8cF85/
qK/UY/3DYbyt/94bOqx/OFxP1o26rMX6R8D8xbbLZzVZ/wgsH5flcEKD9Y/A
CpFgWJ466x8Bizija9lTWf8I+Eyo8Baqsv4RcBH9UU9TYf0j0HfW77fxyqx/
BHpGXj8UocT6R+APb8POQAXWPwJn3h6a7S3P+kfgrOGdH65yrH8ExIOvlDv0
Y/0j8MMlUmgtw/pH4Ma2hU8Luv/97//jN0fg5SrFxKwOckcE/CYfWp3SRpaJ
xE1ea//wZrJcJMYtbK32bCArROJtQX6ufQ1ZORIHsmaEmFWSVSPx6Zy3zdoy
snokhHmctdolZM1IxKl6L55ZRNaJxLNX8+aNLyAjEm8O3J03NIdsEIlpE1fr
/BOTTSKxSy3X4Gs62TISJ/3a7N4mkO0isfrNhKgnEWSXSJTp6R+7E0D2isTQ
bc6NlzzJgdLPU4oZUbiLHBkJF8PczQdsyZxIDHx1K5NrQeZG4vClH/9FbyJL
IiF7e9GqvevIOZGw7Uw6tGsFuSASTro9g7dpk4sioZ3GCTGaRy6JRHjHks7l
M8hlkXB0GL13/iRyZSSyPkz6O2UMuUZ6vQKb9NHDyQ2ROOT5SH3QQHa+kbjG
jbn3++/f/7ktEg8UAv0+/yR3RCJhaPH015/J3ZHYdEzv9eMWskwUdIaMybv9
kiwXhSG2Bp6XnpIVomD05Mmqwodk5SisOlwx8eBtsmoUevqOk824RlaPgvHC
519iL5A1o/AhYOj7gFNknSiYj73wxu0IGVH44vSsbfsBskEUZE9GdJmIyCZR
uGFwYtiaNLJlFDYIHOZqx5PtonCp4/jWWeFklyhMqkhMmOBP9opCRlC/Gwoe
5MAoaEapyvZzJkdGYZrJ241d28mcKJy1M839sIXMjcLCBb5/XmwkS6IwZf0G
h0dryTlRmDGvubpiGbkgCsN9tfVLFpGLovCqYOutE3PIJVGod1298eA0clkU
AsxlX2ZMIFdGIVY+OyB+FLkmCkpLR44LHkpuiEJamsetPf3JzVG4cPlckP2f
P3T+UTgd2LZ4yw9yRxQGJij+MfhE7o5CyTHtKr33ZJloLDi+PU/zBVkuGg4W
SXFTn5AVonExrtxT+QFZORqzhg93lL9FVo3G2sc+tjJXyerS9YudTp3FZM1o
ZOZn+bYVknWi0Z3mltyUR0Y0rFzdCmuyyQbRiNHMeVohIJtEo+v9iMGXUsiW
0v3cW/onY8l20eAvv5GSG0p2icaRPkOahH5kr2i0fCvQSnInB0ajTTNXFO5E
jozGjOZffXxtyJxoyM++5L/LnMyV5q1832ltRJZEQ986NtRkDTlHev3nsoeu
1SMXRONAilaBrha5KBrieaZGczXIJdF48+H3L7Wp5LJorBypc2aMCrkyGrmy
Q33klcg10ZgyIUqvjzy5IRpqd7IUfsqSm6OxzNPu84ffvXT+0bBNbHjy6ju5
Ixq30gfdqftI7o7GINmeG3ffkmVioO5WdPvac7JcDJJMFz4595isEAN5k8RP
BffJyjEY+Kdk+IFysmoMrHoql/KvkNVj4PHlujfnHFkzBuuS8s6EnSDrxCAm
Iuy3z2EyYuCatHmTyz6yQQw+u884uZ1PNolB2Zf+o8ySyZYxMH7zPd4ghmwX
g0fjuvsuDyG7xMDcf2ziQl+yVwyuNewYO3M3OTAGjRrV5yY6kiNjYOvkbalk
TebE4G+A0cDBZmRuDJx37Sr7Z0iWxGCT7t2YH6vIOTGI/h24+eMSckEMWm6G
zXy9gFwUg9gTL4fUzyKXxEDYcKi7So1cJr3ffo++3BxHroyB0hnvryWK5JoY
aN5J+nNqMLlB6q4pSvl9yc0xKOesWbSv5zedfwz63P9ux/tG7oiBn5KuOOED
uTsGauXjG8LekGViIdI7PMXvGVkuFu2fnga51ZIVYvFsw7VndvfIyrG4VGun
b3GTrBoL/oDbpRsvk9Vjoe77Y9mas2TNWPw58fPukuNknVjsNHpkN/8QGbFI
7Erpq55FNohFgOX80xMzyCaxmKV223lUEtkyFoLhZjPlo8l2sTj+9tXPvsFk
l1h4ufpV//Ime8Wir5/yuQ5XcmAsDr58nNtqT46MxYWUU/teWpE5sehwLcp5
spnMjcUSt9dFVevJklg8SlxfVb6SnBMLkwcd3y7rkgtiUbLy1dSz88lFsQjt
VXE4NpNcEou08WeP50wml8XC7daRv+Kx5MpYTJkpuyN9BLkmFrvDqyvjB5Eb
YpHXX2lFeB9ycyzaBjaW7f3VQ+cfi9H10433fCV3xOL1g/6tTv+Ru2NRvyk8
2eY1WSYOvnclS80byXJxmFq0vWvDI7JCHHZEP7m2+i5ZOQ55d+Qylt4gq8ZB
qCDjvfASWT0O3T/LrWefIWvGoWrCdtMpx8g6cTCZX2c+PpeMOIxqne84MpNs
EAe5v+FhQ3hkkziEL684LJtItoyDfvDgp78jyXZxOJOyTakzkOwivb5tV3e0
e5G94pBbu/T8OxdyYBwa21+OeWFHjozD4hOn459Ykjlx2D32Yp+HJmRuHPpu
/Mu5bUCWxMF1Z5rKdZBz4vAv2av0og65IA7TO0+6FGmSi+Jg9HzT5GPq5BLp
z3NsW3JVyWVx+GnccjFLmVwpvf+Jn4R8BXJNHCr2h0emyJEbpPl/DgXEyZCb
4yA/xSkkvPsXnX8cVAT3kwM6yB1xSG1+U+DVRu6Ow/tD52pdm8ky8TCOXDfI
sYEsF4989QIjmxqyQjwStr7K3lJJVo6HU/XPX8ZlZNV4pDp2OxqUkNXjsebz
p2cri8ia8bi/5fWOpQVknXj4Jzd90cohIx6Xkv9LnSshG8RjyQ5FXXUu2SQe
b0bZf53MIVvG40PNqwvjI8l28fhSIkkcFUh2iUcfWZHrcC+yVzwufHm9dZAL
OTAe2vfjN8vakSPjsfVTmtUfCzInHlmX+nl2bSJzpesHv/G+riNL4nF+rOPN
jyvIOfGoPm0n06JNLojH5c4fG5rnkYvisS9hTv6zGeQSad+RivJPJpHL4pFu
ciqyegy5Mh5NfYbK3htOrpH+fJcOv2IguSEex4Ytm3/9XzedfzxOzpv64lIX
uS0eW0x+iYq/kDvi8djnzo7TreTueIw4kql1/BVZJgE3+oco59eT5RLgfdl/
cE41WSEBOb/Eg/fdISsnoLr/B2XRdbJqAkRzAxfxLpLVE1BSs9Eu5TRZMwE6
W/0zE46SdRLgtvhPc/RBMhIg//PT4nAx2SABW2aY7wtKJ5skYJjb0mF7E8iW
CcjbfTrdK4Jsl4AVrVcmuQeQXRLwJN/92i5PslcCVoU/2O24ixyYAKstH2bY
2pIjE/B3QvW3bRZkTgJ0GxOqtm4icxOwUaR63nQdWZKAKp/8QuMV5JwEnMlS
O2eoTS5IgK9BXqX+PHJRAlRuLf60aga5JAH2Li2qKyaRy6T3S3LdcekYcmUC
PO4/PK89nFwjPZ9Y1TFaA8kNCei0uJGg+a+Lzj8BLq1XB87pIrcloPidmnjm
F3JHAq4q/Fk0vZXcnYCHS63eqb0iy3Bwau2aQ5PqyXIcXJ1w31OlmqzAwcDy
HqOxd8jKHDisadYdfZ2sykFMGWfxyItkdQ7GOfdZrXCarMnBf74WtkOPknU4
eKUjSR58kAwOFio9ujNQTDbgIHjvcKX+6WQTDiqa7Lz6JpAtObj4rLbpXzjZ
joMCBV+rP/5kFw4uaG5q6fEge3Hw7o9fTLczOZCDxUbfNH/uIEdyUCXz5PP3
rWQOB39GzL761ZjM5cAnoW/2F32yhIM1wa7Jn5aTczgYPcoj+eNicgEHWoKJ
2f/NJRdxULg28WrrdHIJB16JpV/eTySXceDx6PaCd6PJlRwU5V6IfzOMXCO9
H9ysj80DyA0cOOtH2b/6+5POX3r/w4PaXvwkt3HgOyAjsukzuYODpGuNM5+3
kLs5+JRp+67xJVkmEacPLChqeEqWS8T39/ap9Q/JCokYlN0b8vQ2WTkR6TKK
oU+ukVUTwXM+k1p3gayeiONaH4oenyJrJkLt/f33tUfIOolQGOCsUXuAjESE
6lbGPhKRDRIRuajvl5o0skkiXCqm7K6JJ1sm4mmF3q/qcLJdIl7P3J5Z7U92
ScTS34IN1R5kr0Rs3tI5vNqZHJgIT9fkloc7yJGJeBvmVv1wK5mTCNXPufce
GpO5iXgza1XDQ32yJBFml627Hy4n5yRirs6/WdWLyQWJeL9lmVf1XHJRIsqf
Ta+snk4uScSovKoFNRPJZYnYmL+iqGY0uTIRM9u4eDSMXJOIxpRHbx8NIDck
Yto9xazavz/o/BPB/7TT8fFPcpv0PKybVtR9JnckIis9Yd6TFnJ3IrarBC14
+pIsk4TWEzcN6p+S5ZJw/99en4aHZIUkbPiad7rxNlk5CRHe9jLPr5FVkxCd
eNWp6QJZPQnibfebXpwiaybBcuJ+l1dHyDpJeDF9rdzrA2Qkoe3lkytvRGSD
JIy4Zx/zLo1skoSvsb93tMSTLZNgdOu8cVs42S4J2HbY9IM/2SUJ3hr1bu0e
ZK8kaC13En92Jgcm4fqJ7Q0dO8iRSdhy4umc71vJnCTsTX0j/mFM5iZh0FXB
6G59siQJgusyx3uWk3OSYL9oiemfxeSCJBQ3mg+XmUcuSkJPtNPrvjPIJUno
Vgur7D+JXJaEv7fPVsiNIVcmYYxk7NMhw8k1SVj6/FbvsIHkhiTEfL2vo/iv
k85fen8tkTSqi9yWhBPHtL8qfyF3JGFq9u09Kq3k7iRYyfaVUX1FlkmGTM3f
o1PqyXLJmKFQu3NGNVkhGbu+cHVn3yErJ2P8RZMp866TVZMhfDh9ysKLZPVk
bL2irqt9mqyZjDWT3XcuPUrWScb7mwMKVhwkIxkZUcP6rBGTDZJxfnuml0E6
2SQZf/2v/jRKIFsmI0eex98cQbZLBids1rqtAWSXZOwzyBlh7Un2SsYX+UHf
bXeRA5MxKCnko5MtOTIZo3OG/Xa1IHOSMcukcbLnJjI3GRGl32z91pElyTit
7nM+aAU5Jxk/f3moRWiTC5LheVHmaOw8clEyzAevWJ00g1ySDFxb2ZU+iVyW
jD03VMuFY8iVyeie2nlk33ByTTJUJ9Qdyh1IbkhGcp/GC0f/fafzl/bfOP7t
yS5ymzQv59yM4i/kjmTYXL0ce7mV3J2MuJT1PWWvyDIp8BwXxLlTT5ZLwVWJ
w7yH1WSFFFjvmPSl7g5ZOQW3WyvvPL9OVk2BWX3gpTcXyeopCPlhUPHfabJm
ClTnm7V1HCXrpODZwTPTug+SkYLV4eGh/8RkgxSs1KxrH8Alm6TAZOUD/2Ec
smUK6pxix42OJNulwNFfqWFCINklBaOCJaeneZG9UlCbPTt3jgs5MAWHtf4r
XGRHjkyB7I322mWWZE4K5n7cPFLfhMxNgX+8loexAVmSAiG36O1WkHNSILPg
ja+tDrkgBXrX3k900SQXpWBhcf07L3VySQqSr9XdClIll6Wg99yvG9HK5MoU
FIgdG5MVyDUp8MucJy+UIzekwGF0yLYDMuz8U9Amcaw42v2Nzl96vxoHGJ7p
IHekYMS16I+X28jdKZht86OgopkskwpOV2j0wwayXCosZXUCG2rICqnwVlub
9KaSrJyKszPKS9rLyKqpsB/9SLarhKyeCq5a2u4+Z8iaqQg/M7ZjyDGyTir+
WPF5o3PJSEX9u3EmkzPJBqlYtLFmtgaPbJKKfjceT9VOJFumwi537dJVUWS7
VPRG63tuDCK7pCJ5bleZpTfZKxXzcgM1nVzJgal4Ld9+1dOeHJmKNw0+riFW
ZE4q1A/NXZiwmcxNlb4vrxzPX0+WpCLudNXkgyvJOakYsPy7/gldcoF03bY+
6eJ8clEqplTs+1Q+k1ySChdzR8+ayeSyVFyYv1nhxVhyZSpuXODU/DeCXJOK
QYFzin4OIjekwnyN42nZvuRm6fVOM36o0POVzj8V620Vh078Ru5IhbZv3e7Z
H8jdqTg54dIHnTdkmTSoWr5P1H9GlkvDKqvw9ea1ZIU0xAmPzXS4R1ZOQ871
lFleN8mqaRh5d6NR+GWyehpOv1FMTzlL1kzDpLC+37OOk3XS4L1+deCxQ2Sk
4bBu78SSLLJBGuZEmbfeziCbpCFD6PvoSRLZMg2f50a9eBdNtktDgkH+kM5g
sksa7CfL2cj6kr3SUKNX+1BxNzkwDSMcNZzUHMmRaXiZu0JlgTWZk4ZBGxd1
rTQjc9Mw6t/iH5s3kCVpqMv0GO2wmpyThr7rBlj7LCUXpKEtUL08eiG5KA2/
Pvwz5s8ml6Qh8NDFv4enkMvSMP5LcG3xeHJlGs7u3nvv1khyTRoe/q1teTqE
3JCG3c+vz2iTJTenYX+US+qv3/T3ttvSsPT6rzFDOskdaeAW5dxRaSd3p2Ho
jaTsue/Y3/NOR8+J9yI0keXSMTvs1QXTOrJCOi7zjvQ6VZGV01EqcXUJqCCr
puMv36InsZSsno6bDQfPZheTNdMRruDDO11I1klHtu5f0c08MtKxrMCv/Ek2
2SAdfQYOGPOfgGySjiqLt7zeFLJlOridy7QU4sh26RjHXfd3ShjZJR0vFy/o
0N5L9krH3U2ag432kAPTobTfz8huJzkyHcrLFlz0207mpGP6iWzDxC1kbjrs
y1oHHNhIlqRDUryu/exack461Cd97bmzjFyQjmddygtfLCIXpeOeuFPwbQ65
JB2Gly+pyk0nl0n7hR14OmEiuTIdD50aLywcTa5Jx52tuTfWDyM3SPvmzumy
HUBuTseQjt2n23u/0PmnY8mXd7fHfiJ3pCNmvfaidS/I3enQbarr8XtAluFi
2TZN5cNXyf246Gd8NfXRSbIcFwfHd1jLHCDLc1HZd3nMvDSyAhe/VSf0sw0n
K3GR7tvvVZoHWZmL+sbdStd3kFW42DCmKu+LMVmVi5InB7iqK8hTufA+uqNh
8zyyOhcpgxJCYyaRNbiY7iwIOz+crMnFsdH9mlr/ff6ftbiY4GwuGddB1uEi
jN/v3MZmsh4Xo+oEGlE1ZHDx35b4/ufLyGu4mLjKevl/RWQDLjyvi+on5JKN
uMjvLH1kyiObcKEyxGwOJ4psLu03/9WHq95kSy4s9rcN7rQn23BxIr0rdZYp
2Y6LrC1CP/tVZCcu5IyMrksWkF24GP/mqEeNGtmdi5/7tGLkRpK9uAgeFfkH
smQ/LhT7j30Z9P0TPe9cxC1Pn3buLTmUi8fnfevaH5MjuRgXbflxegU5lovY
5ho3+2Iyh4vl2t5m2XnkFC6ClKvz6wVkLhe+a6McRsaRBVwkn5mUtGkvWcLF
jrjVE1J2krO5+Dw5QeXuFnKO9HqmxHMG6JPzuNjr/MJ+zWJyARemA2cfi55O
LuRik+sw2xujyUVcDNdRj5UZSC7mwnr3uLHoaqd5kz6PhpyJka3kUi7GeI0W
ltWTy7jorHIL61NJruBiY6FGw6oSciUX8hf7HYktIFdxkdCV3XpbQq7hYsGL
nP2DEsl1XDjgaqVRELmBi7HOOa5cV3ITFy9keyLrrMjN0vlaHTJ8rCH5HRen
7jwdtWMJuY2L4lNlgsOzyO1clIs/p/w3jtwhfT6PjPk3bwi5U9onvvOj/++P
NO9c7PFZYX7tI7lX+vwvLNYZ0ESW4UGirpBlXEXux4OPkWKQuJQsx8OOxSFP
mwvJ8jzUqg49N2s/WYGHpE/Jw/emkpV4mDLravv1MLIyD5VKLhuGeJBVeGjN
2aJhsYOsyoNMqAn3sDF5Kg9hitMCO5aT1XnYL8h9t2weWYMHj9/Cp8mTyJo8
NA2tM342nKzFw4Od84xnypB1eNi8N+xJYMcHmn8eXicL31c2k8FD8XOTiLGP
yGt4mBqRdNjtBtlA6vBJZqVnyEbSz3/8OW3YIbIJD799Gy3sM8jmPPw1uXmq
OJpsyYOtfZpAzpdsw8Pl/KmDtzuS7Xg4OddD4awZ2YmHRrWtBQPXkF14+FVx
t3a7FtmdhxHBJdziqWQvHk5Vj3w7ZBTZj4fV0dX3HPuTA3kQxbw2KP3xH80/
D2v7rNoxqoUcycPO3R+HeD4lx/KgHfLM9O5tMoeHn7rDtKZeJKdIr38gpyji
KJnLg/+hDXefi8kCHhTn2EbocMgSHjIX338sDCRn8xB7I+vOdxdyDg+TNjy3
NrUi5/Ew5HE278x6cgEPT998dR2xhFwoPS/hl/fes8hFPGzKOTng8ThysfT6
LPUfaA0hl/AQeu3pEvHvNpp/6Xp0uEnPR3IZDxEKdsN3NJErpOctzAm8WUWu
5KFOziV1xlVyFQ9a2q+NU0+Sa3iYXql77ft+ch0PRQaHmralkRt46K9lfOJm
OLlJet69vrNne5KbeagZtXGHwJb8jof83lFr/24it/Egu2rYaxeQ23kYJwhc
WKdJ7uDBsDJrGSaTO6XX8/6qzMkR5G4exBpzw8f1JffyMGf60oucb600/xng
HtM+2fWG3C8D4/8Lst/1mCyXgbxQ6yf15WT5DLi46w5eX0xWyMAUPb8+V/LI
Shkw/+lZOkdIVs7AcW2BXm4cWSUDB5cYxYzyJ6tmYOXbARlJzuSpGZh+f7Gb
jAVZPQMZG02HBqwja2TgLv9x6GdtsmYGhLk6l53VyVoZ6LGXvfNKmayTgQnF
l/KsBpH1MmAb+N687lcLzX8GTuxXatz0gbwmA91zGxdUPSMbZKCv/V3H9ffJ
RhnQzYnYc+cK2SQDrQeyNusXks0zwHO8OuJ2NtkyA2kW6af1U8k2GXi2pVSj
Moxsl4EZlzuTDD3IThlQ9/p0/8EOsksGxsnafd28ieyegfSTg/88XUH2yoCf
a1GHjSbZLwM7ZMY+fKtKDsyAksoI8e4R5NAM2Fu4bezsQ47MwMxNv7+FfXtP
85+B8nMHE+XekjnS89qmM1LwmJySgXkmJ3iqFWSu9P5+eDvgVDFZkIGHjbV+
evlkSQbmrvB4cV9IzpauXzmzyiaenJOBTfEHjnzyJ+dlQC186ZDIXeSCDAhW
CH1GWpILM6Ctc+3lUQNyUQYyrzzcvEyXXJwBC+X3Dx7PJJdkIPHktC27x5FL
MxAvc+U/2SHksgwMfPwkdf/vdzT/GTiqe3K1Tju5MgO3zoYPrWsiV2WgYlna
J68H5JoMnPOZ3jLsGrlOmp8l+XXyFLlBev9u680yPkhuykDUR+/gL+nk5gyg
e387L5L8LgNTv86JWeRNbsvA/kEiPLMnt2eg6drmGZGm5I4MvPj2VnfGanKn
9HkcWB9cvZDcLe3fW9oeOJXcm4EhnHkZU0aRZfiw167ZU92f3I+P7CSD6NCf
b2n++XilaFg7q5Usz8djbprds3qyAh8nRjbMS64kK/FxTPnrqmWXyMp8LD5R
mN1xjKzCR1xcy4r8LLIqH/fmx8yzTiZP5WOghpeHYihZnQ/Pfnn/7rmTNfhw
jJ7YErudrMmHQmXbVBiTtfgo9B91vXc5WYcPy8dlFy/PI+vxcaRdQTFYlQw+
HpUterRkBHkNH/ucXLt7+5AN+Hg7qyOp7Nsbmn8+PlUpp8S9JZtI7x9f79+G
OrI5H/KR11tH3iJb8mEdqLD+xXmyDR8HvY5NLzhCtuNjlGR4rJ+Y7MTH1bjH
Tqs4ZBc+/u7kVY0IIrvzoTbz67U3rmQvaZ+zR1ac30b242P3IB/TxA3kQD5u
cSb93qFHDuXDR5GzbPEcciQfwSt5E4ZPJMfy8W//nIP/DSNz+JCptbl9699r
mn/p9b6aLT7cQebyMWvL+VExr8kCPpYnTdZ3qiVL+Jj2+IjGunJyNh92VxMf
zC4m50jz1k+Yo5hPzuPj0MzyTT1CcgEfkl8fdd/Fkwv5mBg9pqM6gFzEx8Mf
df5XXcjF0udtQXltoRW5hI+iPjy5A4bkUj48dvxR4S0ll/FRdaFeKV6DXMHH
xwUyP0InkCv5yPm96+beYeQqPoqjR0R7/Wum+ecjvkpBd08HuY4PpSvJ7btf
kxv4cN12Ode9ltzER+Lc1u2e5eRmPqqjPaf7FZPf8fH0crlMSD65jY/3ebu+
xYjI7Xz8ePBNJj2B3MHHpnqFBdmB5E5pnwdRySdcyd18lEePG3l1G7lXOp8t
FQ9rNpBlBPDdGVnRokfuJ0DJGoeev3PIcgIckRX5j51ElhegunT7isUKZAUB
niQqWm/pQ1YSQKF2fc6nd69o/gV4t36J4aI7ZBUBHoZo34g6RlYVQOfEOcXH
yeSpAhTomhnN9CCrC2Aa/ykk1oSsIUDvo9TT7xaQNQUwmuH3Y/0ospYA/HWj
bYq7XtL8C6CerfptyjOyngA+GgG3JaVkCHBasrhN8SB5jQCSseedM6LIBgJ8
j43ZPMaJbCTAXAuPklx9sokAKjfDT8yfSTYX4EPZ7yV3hpAtBXCdvzvA4fML
mn8BKr5leMs+ItsJcGlQ8JLj58hOAgTec327VUR2EWCR3JewQUFkdwHEhs/H
37Qme0nv9yD96sjlZD8BVrWnHl87mRwoQNqobWUK/cihAjS775vypqWJ5l+A
Z52prZfukmMFCJt2eZKkkMwRwH7jz1eh6eQUAfJ/7dJz8SFzBTjuFLd+2xay
QICrH0ermOmQJQLcSta5azqenC2A8k5rZ6u/z2n+BeDqrxu06zU5T4C/K1Qq
QyrIBdKf1zO/JD5KLhTgd27F98tJ5CIBHP8eTHu/h1wsPc/igNwxm8klAtRe
XLZmsxa5VIB1G/TTM8aQywSYUbV+3/OeZzT/AgRHO0dpvCRXCvAyWM067ga5
SoB9LntWteSRawRYxj20eROHXCfAo8tJh8t2kxsEeDx/h9mSTeQm6fNRfju0
dAG5WYCE2tdL140mv5POo8uqk89+NdL8S58fq++f/F+Q26XPj1vQeJUb5A4B
LOKemN3LI3cKENQRfz6KQ+4WYLMo1XaVO7lXgN2b3b3lTcgyQhxZPXtI80Jy
PyG8Fm/beHUMWU4Ix34jrfJ+N9D8C7FEvneT8BVZQYiJJw3NueVkJSFWV93i
CI+SlYWocqxUyE8mqwjRPm6NwnVPsqoQc1rLT7w1I08VouaCh9xIHbK6EKpT
BxttVCFrCHF0/p/sDBmyphDjhpupvX1XT/MvxKOWq7Ir7pJ1hMg/l+l65CRZ
T4ifE7+Ejs0gQ4hcZ/9dEn/yGiEKDLPMpliTDYTQ6xvifnkF2UiIJu2vL7ZP
JZsIMU+eVzd0ENlcCO1JJ8PufXpK8y+Ex0GrgYJaso0Qdjs8c9wuku2EWP4h
LdA4m+wkxJsTU8pWRJFdhDgut6tguTPZXQhxgqPjhg1kLyG+dndNcdYk+wlx
++CzCemjyIFCeNpkx93ueULzL4RJ/QmufDM5UoiW45Z77W+RY6XnkfLU7dZx
MkeInV44psMlpwghf3qf65W9ZK4QPyY+f7/RmiyQ9p/zxrIDZIkQx9oT/h6a
Ts4WIkEla6SzPDlHiLtTm5/ofquj+RdCMmBi7MQGcoEQ61aM2aF0jVwoxNBs
Xt74PHKR9Lx6LTK1ksjFQgyUXRZh60UuEeK/kxOysreSS4XY2vR2brseuUyI
4oucGOMp5AohJvUd86p8ELlSiGT9k4lGHY9p/oWY1RZR1faUXCOE2bDnXyVX
yXVCzHebunZ7HrlBCN3HTYqLk8lNQuy5mFswxYfcLMRCm7lbpluR3wkR3G7j
shzkNiEqTWYsdJ9Bbhfi4IOjA4uGkTuEEDiN1R38s5bmX4iNnfXjQ16Qu4WI
G2nXX/YWuVeIwYeNjQ4VkmVEECnaGVgJyP1E0Df3NFUPJcuJYB7sVzHciSwv
Ql5P9K/hRmQFEcT8OxtnapGVRIh9EDfRRoWsLMJMpVH3CvqRVUQwcHxxevin
RzT/IhyKMtPkPSFPFcHnVmfhnGtkdRGit6/ivD9C1hChc2zptEvpZE0RHp1+
9l9BIFlL+vM+g5actyfriLA1/GDoS0OyngjGmxqUp2mRIYL/9fv+iRPIa0RY
4rLz35CBZAMRdB2sVU521ND8i7DBdqrOnmdkE2n/cZ+uGlWQzUVoHJc61ugU
2VIEjfLgi7slZBsRuk5d61cYTbYT4duWFo+he8hOIqT/+OHItSC7iOB61cp0
0Sqyuwjv9J4W9GqQvUQIVgh82jKG7CdCzYNow86+5EARVtlcazNsqqb5F8Hm
s0LCj7PkSBHe6n8z/i+RHCvCQNGcSTPsyRwR4g4seXpah5wiPU+JommsApkr
Ai9P1iu/7SHNv/TzXkbLK90gS0S4oPCn76NMcrYIKspH5rzwIeeI4Ce/bqeu
ETlPBLv5Q6JappELROh7d8PW9/8e0PyL4N6wrWTxM3KRCH++GQU+LyYXS69v
yk2nunRyiQi/5U6tV9tNLhVhk8Gkjlv65DIRhA4DJpapkStE2Du2VzjiXxXN
vwguQQPHXHlOrhKhotDR5moJuUaEFZfWThgrIteJMGXDIflqX3KDCHfPfm94
tZncJEKTroyGkSa5WYT2nznHlYaT34mQq5/Yqfv5Ps2/9LwUh+eVPiC3i5Av
37lx/0lyhwitQzSjmlLJnSLIF5beDvYgd4vgaOuQG7iJ3CtC7eiE1KeaZBkx
ygv+yggVyf3E8Jjwwq248x7NvxhDBmxYuKieLC/GZlmbK2MukxXEmHig1cZm
P1lJjFi+k5tsFFlZDMm523OH7iSriGHqZfspaD1ZVQyR9o3X6+eSp4ox7Ez+
irCRZHUx/vx4ukDp112afzGCno5/NewVWVOM03oz7PbcImuJ0X4l6e68QrKO
GDO3Fk7fyifriXEn4npwczAZYkxyvlH20IG8RtovOPCj6gaygRj3lge8f7qQ
bCTGZVM1XocK2USM2+cuVe4ZQDYXY/nsnTuMOypp/sWY37haJeMZ2UaM/g/C
K3Ruke3E8JXsGLGqiOwkhvkdx/Mn95FdxFg01cE6JIHsLkb86QNHjvuSvcRQ
nNOxYKkd2U+MvJlvBBobyYFiDLJ6ZhW+hBwqhupsyGmqkyPF8Nx7ZNLK0eRY
6XkM7VI+04/MEUNFM8c54vsdmn8x/NPK/U68IXOl5/vS+ZhWLVkgxsLb+U7j
bpIlYhT8fidjc5acLUaF/4DH3YfIOWJcSj4wq4NPzhNj1v2ZpivjyAVilEav
Tv/oTy4Uw+5yk9pnF3KR9PqTfdcbWJOLpf1PGy79tZFcIobmjFwNmZXkUjHW
Pv1vo40WuUyMR7/7VsmrkyvECHHaU6OgQq4Uw2J5TNQuBXKVGJa+p/oq9CfX
iPHV+4DfoJ7bNP9ifDcK+2H6hdwgxuoJU3M/viM3iZHEM+bVPiM3i3Eg88GL
AY/I78T4pHIpO+EOuU16fwpz3phdI7eLETr1yk238+QOMVZqjNp0v5DcKX3e
Mq5J/PLI3WLI+Pw8vTOb3CvGArWtefsFZBkJkpt7YsenkvtJMFvnlN3LOLKc
BJMnDNV/H06Wl2DV5ZOr5wWSFSRY/mW1yxVvspIEDWEVNzm7ycoSzG+JdxDt
JKtI8OrbTou3tmRVCbx/vjzjsY08VYLzpfNitLeQ1SV4ssD3hZ4JWUOCP3dL
H4dtIGtKUCtZEPxLn6wlkU709JZTq8g6EmCfxtz9y8l60uvV0XIrX0KGBMqn
ss6papPXSLD6DqYVLyQbSNDF3f88VJNsJMFf05rOoDlkEwnyAs5wj88im0ug
vvtNzVB1sqXUwU0Nh6aRbSQ4cOHvA5cpZDsJFD5m1e+YTHaS4PjhPpNiJ5Fd
JPhmnlpdP4HsLsH9o4WjrVTIXhJ4fvs4ZeB4sp8Ev9//UX89lhwowfjAcqsW
ZXKoBOsUzNpHMUdK8OnfX2XPMeRYCcqNrMd9HU3mSLCtbtWcfcwpEnRXP+e6
M3MlCLq+L96JWSDBrxuGptHMEgkuOQxYcos5W4KC5tXxGiwvR4IzPx9FXWTO
k6Bp1rOgnez6CiRQPP766iLWp1CCORfuHpwxjlwkfT5OVPsuYf2LpfcjP4W7
h92fEgn0yzqNy9j9K5U+f3JbBy9g97dM+jyPtFC9qUqukODh6h8dnmrkSgmG
PIh+uWQquUqCK855G9Wmk2skMLhpnD+NnXedBGFl5cZr2PPQIIGxe/r5MA02
/9L7eS123aO5bP4l4Gpc9ls+n82/BDaD4k9XsOevTYLw88HujovZ/Euw76iD
2jhdNv/SvkZ6hm1L2fxL4HZzke0D9rx3S6S/rwpeVq5k8y99XtOUDJ6tYfOf
Ca6zyoQ+Bmz+M1F6NuK1HpsvuUyoXR49PtWYzX8mspwfbP66mc1/Jt6sPjDc
lc2rUibk3FObv1uy+c/EP4fDpjwbNv+ZkH/b+gN2bP4zkbfPxqavE5v/TKx7
1zX2yS42/9LrcTpYUcJ+n2hkQqlYrbPQk81/Js59WbTqjC+bf+nnbXA3vBXA
5j8TG/cvON4WwuY/E0de35UZH8nmPxPfr6/8Yh3L5j8TPwb5Kp/gsPnPROyS
HlU59vvRKBN23+ef9uGx+ZdeT8ic3R+EbP4zcWjpub8eWWz+M3FhlfYomYNs
/jMxoOKJ9f7DbP4zEX1gY5R+AZv/THx817PoN/t97pIJa7dHs6+cYfOfidVm
FqPjL7D5z4T9iYPHra+w+c/EyD5rDy4tY/Mvvf4BToXTbrH5z8RgXVHy2Hts
/jMxLr29a3Q1m/9MqM/5cHJCHZv/TNycHLF7TiOb/0xozZTtWPuSzX8megI1
e53fsvnPxEr+RFNuG5v/TBSrLTt/4xOb/0w8eGn8oecbm/9MNAY6XVzazeY/
E628+rcxf9j8Z6Li0lqdx33Z938m5gckh8+UY9//mQizuh4VP5R9/2dCOHLO
sA+K7Ps/E9dzTL6aKbPv/0z08330q3wC+/7PROCJsC7dKez7PxPONmuvnGfv
A5XS83myaIz2XPb9n4lZPX4vry5k3/+ZeJir9369LrkuE/F9n8o8X05uyETH
NOFA7zXkpkxsdqmrGWJIbpaeV98OrRObyO8ysX/fyqGbtpDbpH0+jtfq2kZu
z0S67e3Yw3bkjkzMrA58buZM7szEUV2LUXLu5O5M9Enbo1DmTe7NhHfYiRMh
AWSZLERaNt9eEkbul4X0nxdW/Ykmy2Xh/dEzMuUcsnwWdBdMf5ucRlbIwqV6
3QcWArJSFgQuLw5NzyIrZ6Frx12D7oNklSwk9Q/Oq8onq2bBrmB29uET5KlZ
2FbzdHTYGbJ6Fno5Gr2WF8kaWThWlKGlfZWsmQUjM9VjY8rJWlmwHZ61uqeS
rJMFyziPzy8fkvWy4ProrOBWHRlZkAyfpHbqGXlNFmZ/GBwjaSYbZGHrAre8
2BayURZ0Yu76+rSTTbIw4ovhK/tvZPMsnL9w6IlpN9kyCwuHKOmv/Uu2ycLx
xj2quuz92i4LBrkDt8wdzN7/pddndq1uqgJ7/89Cw7KvXBX2fu6ehYn/wkNG
qbD3/yz8F3szfrgae//PQqASN38we78PzMLQ7QvuD5jL3v+zYC3Y9VFWi73/
Z6E9e0dPH/bfB7FZ8F9c3C4D9v6fBRUdr4sy+uSULPDq+pr0MSJzs6DctrKw
rylZIP18E+eb/SzJkiwoGg9KHLiDnJ0Fn47JXYOdyDnS80/q22+4GzlP6vlb
j470IhdInzf9iY3K/uTCLKwZWMSbGEouyoKbxtm7U6PJxVkoTRkXPJtDLslC
wYPZ2QvSyKVZuDned+YSAbksC2M+3fq/Luw3KKoqDuM4lhqGJo4oWKgYVJiW
2GBSoD4WTYaaTGpa4bgY5GaIFJQw0UhFhrklESnsOatoYJjEEKmtRYbNOlKB
ofFPg2aHMKEo12bHqJbqvjh37+15+Z3P7Ozes7/74nduus+u2mXH6JZFm5Mq
VDdp8zEXYSsPqm62Y8Xj1tCUGtWtdqTHlaen16tusyPbcmU406m6S/s/Rn3z
fe4J1d12LB4+/tcrLtVuO6ae2fHom1+r7rOj51T8L3taVffbMf3GUUcPdKge
tKNlwvK6D7tVe+zomH/4vLNXtVc77z0X73D1qx6yY/m/vx369jfVPju2rLyY
9L1XdYCA0z3+hkt/qR4pEPRFj+f3ALXPBgosurfP84++344V2JTYExQ0TnWw
QOSVqkWhE1WHCHz0Z8IbkVNUhwlMSTo5MGe66nCBcXuyUhJuUR0h8L6vyr1k
luoogctVXTmr56qOFrj5JXvohvn6/i/wYd/u05kL9P1foCP37VdfvF/f/wUC
L6QlFT2k7/8Cx7aNuOndFfr+L3DunQzv/tX6/i9wquNEe+0T+v4v0Lsz8sRn
qfr+L7Ass7OmaaO+/wssrL1tf/tmff8XqL2aZe/N1vd/7bxenFZ2OU/1WoHc
Gw6V+7apThG4A7v3jtmu2iJwY+HWg5NtqtMEyi0DdZElqq0Cz1SVfB5TpjpD
oPCDyOYFe1VnCZzdvbo7qVJ1jkB/7cCvaz5QnSuw63B1QHqd6nyBiWEbQp47
prpAYL3zl+htDaoLtXm4GrHQ9qXqIoGIx3pXljeptmnP/0/IpoNnVBdr5zfj
QMHHbapLBRKrX9jTeEF1mcCD9a/UtrhVS4Ev7j5+6sJPqisE3q4c33NpUHWl
9vmdL3m9v6uu1uYjyRd0jX7/UyOQ+tX2yPH/qq4TePiuKfHho9R90RHteZ11
j8wMUu0UuH3D0k13T1DdIDDj/KWX7w9V3SjQft9r5clTVbsESqdGfrQuUnWT
QFTUyaZNM1U3C4TNX+/eOkd1qzZfS4f/KJynuk3gTosYXxKvuks7z5x7btu3
WHW39nt2dC6seVC1W+Bvx/OPHl+uuk97P7aZvF9g1Q8mHxQYM9xiuEfgq3X1
hnsFzhf3zPP7kEC69Z1dfvcJTJKpZ97TPUDi7/jO0Zd1HymxznO0u2uRfv8n
UbW1/oGBLfr9n+b101va9fu6YIn46TMc87L0+z+JXQOnd16nn0+YRL7zyndr
dA+XyHso49w03SMkrK6uxRt1j5J4ZMW3r83UPVoipGBmQqbusyUmt+VtvFP3
GIncSePSn9U9VmLEsdJ9MbrHScy4YvvuOd0TJHo9Wfvn6g6Jk50H87J1T5RI
yHhq8l26L5E4UOBx+X2ZxL2nM5f6PVlizvUTLvl9lcQ3Z/Ke9PtaiYXJO676
PUXieKgl0+8WiY+324b9niZR4EvO9rtVYvGKTwNydM+QeD31ref9niWxPnbW
NX7Pkfjk4ZIX/J4rUbL5nOH5EkU3B271e4GEJX7atX4v1M7XtsDwIol5ZTDc
JvHsl6sNL5a4OCvZ8FKJ+Q0Ww8sk3oxfY7iU+PlouuEV2vxlPm54pcTSPzYa
Xi2xpfcJw2skRg9bDa+TOPtGiuFHJA5nP224U+LWTpM3SOQcMnmjROOfJndJ
tJ80eZP2/WPWGd6szU+zyVsldgabvE07j7Mm75JwTTR5t8TtbSZ3a/M0yeR9
EnPbTd4v8aPZByWqze7R5m+yyb0SP5h9SHufzO6TuGr2AAdSzT7SgREdJg90
wGr2sQ6MNnuwAxlmD3FgjNnDHMg0e7gD15s9gjyKPJp8NnkMeSx5HHkCOcgT
yZeQLyNPJl9FvpY8hdxCnkZuJc8gzyLPIc8lzycvIC8kLyK3kReTl5KXkUvy
CvJK8mryGvI68iPkTvIG8kZyF3kTeTN5K3kbeRd5N7mbvI+8n3yQ3EPuJR8i
95EH7P2/j9z7fw8kH0seTB5CHkYeTh5BHkUeTT6bPIY8ljyOPIEc5InkS8iX
kSeTryJfS55CbiFPI7eSZ5BnkeeQ55LnkxeQF5IXkdvIi8lLycvIJXkFeSV5
NXkNeR35EXIneQN5I7mLvIm8mbyVvI28i7yb3E3eR95PPkjuIfeSD5H7yAP2
0fu/j95/8rHkweQh5GHk4eQR5FHk0eSzyWPIY8njyBPIQZ5o+H/yjUHz
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxU13lYjG3YBvAQQggh9BJCCJFdONOKIkqS0K6S9n3T3rTPNNPMlFAkRdqE
UEQhRJElhChkLUQhfPN9Xfcf3/uP43fc7rme8zmf6zhek61dN9v1lZKSujtQ
Sup//+z9r2P1//9TCiXFznY+f9rJMngsCMn++ItZDpPtZlZYdzPLY1ajZWHj
d2YFRB5QCNzwjVkRJ3dqK1V3MCthyKVHB5d9Zp6Ctu3XfhR8YFaGS20/FeV3
zNNxNCtiQdobZhU42y8bM6yVeRZ8Dik0hL9kVoXeLXnHrufMczHXenLjniZm
Nax5OF+p+THzfOzgL9M0ecS8AOP/zV5Rc59ZHbf9eoZq3GNeiPBtB88V1jEv
Qtc36VVTbzMvRrpg6n7hTeYlCA/7VD+ohnkpnH9teRF0lXkZypYaXWu/wrwc
Vq51UdaVzCvw5+a1/x5UMGvgrPvMJL0LzCuxNuL9w3NlzKvwU+FP1+wzzKsh
0jH5cuAUM+A1uuXK8GJyKGCVlOEcVsDONZFX6Pn56wl2romhHtv1bfPY+Rpc
vq4b8CCHna+BXYZKpG42O9dC3wff7M5msXMtDDDaP0nlEDvXxqrXI4rFGexc
G/fs1o0flM7OdaCZsWS7v4id62CHQa3nOwE714WO+m+bbSnsXBdWA8/OvpHM
zvWw0+/rzaWJ7FwPKvMyNXPj2Lk+3t4uSR7LYef6+NmueDo6ip2vRfvMu8Xf
w9n5WkQPuhJlG8rO1+Ho6FdqDcHsfB1M70w9pRnIztejKt9ftsiPna/HvKkP
NSb6sHMDdGbM1k7wZOcGCA5xnvLLjZ0bQnNa/KPdLuzcEBff+ts82MPON8B7
9OxraxzZ+Qa8/sH9V2jPzjci+vaB4f/ZsvONqGrQ+hFrxc6N0K3hferHTjKM
4LhIWc/Ggv19I6x5taa4bhu50giJVlVfVmxl9zdh/k2RTK4Ju78JH2eXfB+1
md3fBMNk6XP7NrL7m1D4PXTzBwN2fzMWbRt3xXQdu78ZV/MvDbyix+5vRt8m
u6lzdNj9zdC/9UdevIbdN0bOVv+mvmD3jfHE9Kb/3pXsvjHWiV59fLSc3TdG
n+ZTi9YsZfdNkNcxzyR/Ebtvgsgwff0x6uy+CfZotY8IVWP3TXD1xejid3PY
/S2I7D45zXg2u78F/6nkuZarsPtbENPnZ9K06ez+FiyQS45Imsrum6Jfo4Vh
lxK7bwqjB8Yfd01k903RGGRnWTOB3TdF5YqIPLVx7P5WJPgevC4ew+5vxYSk
3PNS8uz+VmQ9SAl3GMHub0VmxoZJ9cPYfTO8nXmbu0SW3TdDTPm/hwcHsftm
uBv/6Ev/gey+GTZe13npLM3ub8Nl4YqjDX3Y/W2QH3985fJ/n+n+Nux0DD+e
2UOu3IYngtMfBvwiS5njRfbCPnu7yDDHs7SO9/c62X1zmDo/yV36ld03x1PZ
luUH29n97ehr+zuz3yd2fztsNss/dXjP7m8Hv2jiu9tv2f3tUNw45NaC1+y+
BQJ+3AwVvWL3LTBy94bBPS/YfQvM3Ra92/IZu2+BriAbcfUTdn8H3AIeZqg0
svs74PqlzivhAbu/A2J/KHXcY/d3YMthhUPG9ez+TjR81f9y5ja7vxO/3l0e
M/4Wu78TDn89hwfXsPs7sefgxqcvrrL7u/Brnk7Amip2fxeK5XQ+Zley+7tQ
k7p6/sCL7P4uyMlOW+t4gd23xIezr9VvlZGVLKH3wP2L6hn2e5YQic6FJZ0i
W1qidubJ1vYi9vuW2FygMX5TATnTEgNWm00pOcHmWUL9U3vPyDxysyViL3/L
88xh860wrtx45v0jbL4VNtz/F7Awi823wuvutwcFB9l8K7wf3iPo3M/mW6Hg
x+wdJmlsvhWqwnZ3nRKy+Vb4EXTQZpSAzbeC3onKLA8em2+NV9cqiu8msfnW
UAyL4qslsPnWcAgfqJccy+Zbw9hJvfZTNJtvjZC67ikGkWy+NUSr9dYfD2Pz
rWG0epiOzD423xoW61bK2Qex+TbY3VCVX+XP5ttgqDZv/GRfNt8GjT2CbSFe
bL4NFm656PjUnc23gcv+nnVLXdl8GxyTX/1H4Mzm26Chxyv0iyObb4PC6MT7
hrvZfFucf+r7M8+WzbfFPMWp7f2t2Xxb/NsZctpqF5tvi5piP4MKCzbfFvUK
fUoVzNl8W/xNGvDRcyubLznv79d5x4TNt8U2O+3bMzez+XZYlGDuE7mRzbdD
9Ma89ucGbL4d3gdMWrZsHZtvB+/6E5v5emy+HU7IrNT4pM3m28Hn3uXvumvY
fDtMaVDZl7mazbeDSY5l408NNt8e/Z5v7WO8nM23h1vfPz9PLGHz7TE5ZdUV
6UVsvj0e9RlivmMBm28PTrnR5dPz2Hx7mE392zV0DptvD15in792s9h8e2To
r22omMHm70a3qMp39DQ2fzcWnd75wXkKm78b7+tk5lZPYvN3o2ho0eoJ/7H5
u6EQt0bJYzybvxtHTQvqasay+btRFfDScNJoNn83rny7ke49ks13wK3SLWdu
DWfzHfA0xyNz8lA23wHncodt8x3M5jugI2lsc+1ANt8B16YGLprSn813wKIZ
M7b59mXzHdCyYdD62n+faL4DxusOHzL5D1nKEZUnp6d5/yIrOWKj4srvN7rI
cMTt/zBp4neypSOq1f8b6/GVHOqIFQ8uN11tJ2c6It9lgtu4T+RKR/yxGnvX
+T2b7wj/AUf+XXrL5jvhau6J3yNfs/lOeBo38ardKzbfCf9a2raXvWDznXCu
uevS4GdsvhNqDy/9YvGEzXfCbE1xe8EjNt8JP673uyD1gM13gstSB+PN99j8
PfjIKSk7Usfm78GT7Lr3nbVs/h7kO+e/07nJ5u/Bg9OLTguvs/l7ULnOzPBt
NZu/B1ffS5UsucLm74HyOsWWmEts/h78HCFqflTO5jtjSfOO4zPOs/nO2K+3
A75n2XxnHKsLO3ytlM13hqjzbP3oEjbfGdtmfLxpW8jmOyPq9mDeqXw23xmb
NKWm9j3O5jsj8W5ZqNExNn8vUi8rHT+YzebvhcFa5UMfs9j8vZBLLdy1/BCb
vxelVws+xGSw+Xvh3TFU60Eam78XHRPP2U0Rsfl7MWFjhrGrgM3fi+WeR2TL
eWy+Cxrdz3Nlktl8F1yYdvuFSQKb74LnO67/zIxl811g80zw/GM0m++C5O2T
k5ZGsvkuqIgwk4kMY/NdYPp9mmFdCJvvgmta3hbjg9h8V3j/mL/Yzp/Nd8UF
jt6TQh823xWPHbP0f3my+a741DMrTNudzXfFO3FdRJILm++KWE6AUeMeNt8V
BoPHvp3syOa7wt6Iq7fHns13w/nQu+6lNmQ5N9SWXrX7Y8mexw3lP7dO1d1J
VnPDMiPP40nb2fO5wTe/7++HZmQjN0z/0SE/yZQ9rxscZGZ22xuT3dxwrTg1
u8CIPb/k75dOHv/DkMx1Q1X1WbOV61keN0xKWGMZqU8ucsOfo/lqt3RYPjds
zmq+MUKLXO8GSN2YbQaW1w0DlxqZHlxJ7pDcL7Jc27qc5XdH5LVW6VlLWX53
/Ll2jeO6iOV3R+W3jvulC1h+d8iFGb77OY/ld8dI4bWrq+aw/O64ZKDrFDGL
5XfH8+IzD6/PYPnd8b26zxDZaSy/OzT9Rgw0msLyu+N4Ud1N/iSW3x1lOtNN
Hymy/O6I7fMvd/x4lt8d1ZlaVTvGsvzuSLn3LDtTnuV3R9LSs4YtI1h+d1y0
P1cxbTjL74Goltudu2VZfg+kz3j+NW8Qy++BngMNZz8MYPk98PqISGuONMvv
gSucUUKXPiy/B6YlqRUW/v1I+T1w/u2jpI7fZDcPrLzwdeH8n+RQD7goOWW5
/yBzPSA9ecb94m/kTA8cLht5+0sHucgDd+6PTpj/mVzpgWaTcSPcP5DrJc87
aIBFURu52QP9zlY7t78md3ggRm6V1twWspQnKsvNXzg3k+U8EWbcT/PEM7KS
J2btVHJ494Ss5omDW9NNZjSS4YlF+dsG2D0gG3mi+Jxu8OF7LL8nFtStPfei
juWX/N6c9ecVb7P8ntjYXz10202W3xPcgHeDhddZfk8MyjI1v1fN8nuiK9ja
ZdgVlt8TeQO/6667xPJ7wmfaj5aocpbfE4WFhjqXz7H8nuC7tjj1nGH5vaA1
6ZDJklKW3wunHB36ehSz/F7Iej/dK7+A5fdC5NwreW9OsPxeCCuZfEQpj+X3
wq5WVUvzHJbfC/5TbjXzj7D8Xii+0KJ8O5Pl94J1+w7VAQdZfi9s+aTUtWo/
y++FkgejonzFLL8XvpX997AwleX3QqNo2vu3KSy/F8xsRl6exGX5vSDouWm+
NZHl98KNhYvPJsWx/N7Qub384dUYlt8bpr6XzvZEsvzeWH3/+Hb1cJbfGyre
LZcd97H83hj5dOP7Q0Esvzdu+Dy8/8Cf5ffGw9wdYUN8WX5vuF6+1Q4vlt8b
zlIDlXzcWX5vLEn9PuKEC8vvjUsHg6++2MPye8NpdtRyeUeW3xv9l31107dn
+b1RVnrcIciG5ffG9wDB5CJLll8yb2vq/pYdLL8PfkvzH47ZzvL7IGuO5721
Ziy/D/Y6TUgO2sLy+8BDy122cDPL74Mz88zXvdzI8vtgWuoF/VGGLL8PQmsC
BuqsY/l9sGlocLSPHsvvgyepx64e02b5fTAg4kV1oybL7wPz1kGRg1az/D54
e3ZIv+UaLL8Plr2/oem0jOX3wVrTmUhfzPL7wPnqsL831Fl+H+i17wz8qcby
++KC/9+zKnNZfl887r57autslt8X9Z8rXKJVWH5fNN/KaSudxvL7Qvez2+SW
KSy/L9QOS40bocTy++Lk5OV1q/5j+X2RJuij7Tye5fdFitwK37SxLL8vWsU3
Ha7Js/y+CJooUPg2guX3xYN9gdGThrP8vnjHsS1ZL8vy+0Lp24IM30Esvy/W
2N3UOjKA5feFleewvDv9WH4/1B18deunFMvvBxnTWfnKfz9Qfj8c7axZu/E3
Wc0P+lVZ2f7dZPghsUtUfuQ72cgPP08l8W5/JVv6oW2g49SudrKbH4LaB3ko
fSKH+iHJ2CR47Xsy1w9pg2breLwlZ/ohv8HtRnorucgPppYyg6tekiv9IFp3
f8CH5+R6P9wad/bSyCZysx8yNPkLlz8md/jh8+T1dlYPyVL+uDPg8iZOA1nO
H7tUHv0sqGf5/XHruOuOB7dZfn/MOegc9Psmy++PsL+FppNrWH5/8E5N+Kh7
leX3x2suT8P5Csvvj5NbvunxLrH8/ijOnzLsTDnL749Vqn2Sn5xj+f0xytTt
5t8zLL8/Noo2VU4pZfn9YaEf7aZbzPL740V++xPHApbfH9nfXP4lnGD5/RG3
+PWzwlyWPwDuAeo+946y/AGYXri8pvMwyx+ATYVPG8ZksvwB2IUu8dIDLH8A
PEa6jDVPZ/kDsL5SaWOgiOUPwOK69tUZApY/AD8LLrwr57H8Aag4Z2vwLInl
D0CP+q3df+JZ/gA4G9St+C+W5Q/AxwmbajSiWf4AuB5VG2oRwfIHoO2B4eDA
UJY/AIsiOZfSgln+AAx2r1QtC2D5A9Gs+2DTQ1+WPxBNaTlzO71Y/kCUvx1V
NcKD5Q/EFVHPsHmuLH8gsn6tHmngzPIHwnZdRa2DI8sfCIvjxqui7Fn+QAye
8co+y4blD8SgM3q6FZYsfyB+LrJpatzB8gfCyWXUzE5zlj8Q14YvUR1uxvIH
YsWp/Nczt7D8gTj6ZPMW7c0sfyD8OgYG7tzI8gfihN5xUz8Dlj8IhycotPHW
svxBGMOdN++ELssfBKniO7OrtVj+IIR7NDxrAssfhLtFE3S+r2T5gzBRLcpq
6AqWPwj7Mj4tmLaU5Q/C49gF5zQWsfxBuOE5v9N4AcsfhPiK6y1O81j+ILwu
vhcTpsryB2F4xLxm0UyWPwgZ6y58PDmd5Q+C1SDjk1VTWf4g7DrWMPmxEssf
hBPfxq37/B/LHwzT7L7T+01g+YNhYup0eqwCyx8M+8Q53bNHs/zBkCpV+bx6
JMsfjAUTloqMh7P8wUj6teSbvSzLH4yRbtJ9Awax/MEYGupflTCA5Q/GwNGe
Sw71Y/mDkfevdkexFMsfjMM/rBdX/XlP+YPBE8pdvv+LXBmMd1bFf153keuD
0Vip9PFHJ7k5GPP6LE8Y+JXcEQx908ZnY9vJUiH40PiwecZHslwIFsXIpS55
R1YKwT5ty1+6b8hqIVjzOFPOtIWMEPz7mv/ItplsFAJl5V0bPZ+RLUPQ3sLz
DXtCdguBadIko+RH5NAQfLZ51Zhxn8wNwa3Y0hHH75IzQ7BnkNuvM3dY/hCk
1n9OqbrF8odAq3jw07oalj8EkVYH7j29yvKHwDIw1P/tFZY/BBeDEuu+XmL5
90Hv+oH7f8pZ/n1YnxnHkTnP8u9DttqcDyPPsvz7kBG5s0exlOXfhzvxXRem
F7P8+yA77u5MtQKWfx/wqkpn2QmWfx+MQnOHr8ll+fdB2nVrzLqjLP8+tMrm
5W8+zPLvg9J+733mh1j+fXBZmfrPKoPl34cvP1+oOqax/PugcG7OQDchy78P
4TqmST58ln8fmtfPvxLEZflD8chceDg8kSwTipevLOZx4tj7CMX8xRYOiTFk
hVBwOXsMUyLZ+wmFdrvVc2EYWSUUny3HTNgfwt5XKPac3tXvUCB5aSjOHpUX
HfZj7y8UtbeGPDzqTdYPRfjhCZW5Hux9hsIjavyWE65ks1A8KHouOOnM3m8o
bDVX7St0JDuEYunC4fLF9ux9h+K4/QzjEhuyXyjUhRYapyzZ+w+FgWVk3akd
ZI7Ea7xkS81ZH6HQT+vz7dRWsjgUX7P6RJwyYf2Ews9vbXnJJnJuKGwUCg4W
b2B9hcLbQnpW0XpyWShi/irtLNBn/YXCUdS4PF+HXBOKioP/LuWtYX2G4rGT
06ec1eTGUGSpfbpyRIP1G4rd/SyQuYzcFopr9+PsMhazviXv08twgVid3B0K
a65vDl+N9R8GudKmy0lzWP9h+KZvFBk7i/UfhqHCo58iZrD+w/DwUuGfYGXW
fxjG12iW+k5m/YfhfuLcEe4TWf9hGHRbX95pAus/DNkTbSqsFVj/YdjcvVF2
+2jWfxgs8l9KGY9k/Ych0vF9+rrhrP8wPF+u8URTlvUfhvyBeReXDmL9h2Ex
v6/+vAGs/zDkBI33mdaP9R+GllVX9CdIsf7D4KR265Lcn3fUfximRwx42v8X
mRsGA22d9F8/yOIwLLAw+/P5GzkzDLOS5KRbOsi5Ydjut6rg4SdyURiE/JLf
N96Ty8Kgrr7yY/lbcmUY3kYW7CtsJdeE4QD34emsl+R6yfylUUn85+TGMNQv
iRsU9ZTcHIYryqen+zSS28KwweXBa/sH5I4wDNlxXnfrPXJ3GOpGqq/VqyNL
hSM+btinxbVkmXBMEE9YMP0GWS4ck9tUFEZfIyuE4/E/6UP9qshK4fikEXLt
yyWySjg2PrBOelFOVgvHoEehP2rPkZeGY7RKzt9zZ8gIx4LozJycU2T9cJyJ
Xvk5pYhsFA574boHISfJZuHQ/ynY7nScbBkO75vvQrccIzuE48vv0TrIJruF
I8D0zbFZWWS/cOz0n5Enf5AcGg7DJ0f1/6az/sOhenVO9FsR6z8cb7fHW9UL
WP/hWCOMe1LGY/2Ho0CzqyMzifUfDoU+B7I58az/cFww0PvuymH9h+Or++VX
plGsf8n74T90XhnO+g/H0GOb+FP3sf7Dsd//z5ZBQaz/cJQezy797Mf6D0ds
wYjCBm/WvyTP7WE6ZR6s/3D0n2rvk+HK+g+H8aGXa0KdWf8RWNd//XEbR9Z/
BJZ/2JOva8/6j0DI+aFrZ9qw/iOwvvDnviGWrP8IBDd2G32yYP1HwH7s/Qt3
trH+I5A+yaSy0JT1H4EKH82dXGPWfwQMvWxT3YxY/xHw0IyyMzJk/UegpnHP
nXnrWP8RmD2guW6YHus/AhH2eY6ftFj/EeDuTt5/C6z/CJTobbPLW8n6j0DZ
6DvXopez/iOQW1R6yWYJ6z8CnOsNG7GQ9R+BWY+/+CjOZ/1HoFP9wcLuOaz/
CBz/rhXbMIv1H4ElQ6S9Cmaw/iPgo/a0k6PM+o9AV3vSEJvJrP8I1B5uPasx
kfUveR9uWT9HT2D9R+ClYVz957Gs/whU/7XRuC7P+o9A3ahvGodGsP4jsPLD
77s+w1j/kvdZtOa34RDWfwQub48vU5Zh/UdiXknaoN/SrP9IaOjM/1zfh/Uf
iaMeo+1z/rZR/5FQsR3kHvibrBSJ9cPrhxl1k1UiMXGR6mrl72S1SPyxau7T
/YW8NBImnwpMb30mIxJ2P7etPPiBrB+J/p5HTru1kY0iYTXC8NKa12SzSFRu
UTCXf0W2jIRW/LWo18/JDpHIuaaw5sxTslsk+r2pS4puJPtFIpmbv8f0ATk0
EtsXuzZOu0fmREJervF+5x0yNxJXJh6zrLpFFkciZnZGIK+GnBmJHdd9pu26
Ss6NxP11P3aoXiEXRaL+wWPlnxfJZZHQ2djsf/UCuTISP2xrLHhl5BpJH/FG
ty1Ok+sjEdmz+NaMEnJjJOLOLTP9WkBujoSAM8al/AS5LRIu3+NGRueSOyIx
epOJ1saj5O5IeBfPk1I4TJaKwqQvj/WbD5JlojCgcPh/ufvJclFYuCExyFXM
+o9C1Pdhuxensv6jsCvZqKmHx/qPwu4bQ5uuJLH+o7BSvq89J571H4W5R9r8
DTms/yh82hM0dmQU6z8K+tP9Vj0MY/1H4fl64ee0ENZ/FBrG8mbsCGT9RyE6
esq7SX6s/yjobJFWf+XF+o+CVN8O6Wx31n8Uft88uNPOhfUfhciCG6un72H9
R+GI08zcN7tZ/1GoDfIR5diy/qPAm+w41N6K9R8FY5Nzg6btZP1H4dudiQkt
5qz/KIQO2iTI2sr6j8K7ZQOn7DJh/UfhhHH3QsVNrP8ohAx8WttoyPqPQv8q
u3eCdaz/KAQVbYgz0mP9R8HmzPrCIdqs/yjM8R1pdg2sf8k8I7PI0JWs/yh8
sbinvnw56z8afNdF9t8Ws/6jUT528YR8ddZ/NA4f5Gy2VWP9R2PvwJdDFOew
/qPxatg33YaZrP9oyMz26Bc3nfUfjftxIzQxlfUfjdujI/99n8T6j8bpPUGr
Tiiy/qMxtzX/z65xrP9oWCZd15Afw/qPxiG1kN/XR7L+ozFcP3xZ4HDWfzT0
ZaJ+zJFl/Ufjl/mSBc0yrP9ocF+s/cjrz/qPxr33zspafVn/0ZLvyejJt79v
qf9oyLtnD83+TRZHY+p/CheNu8mZ0dAoNv/Q9zs5Nxq7B05ILf5CLpLkzR94
Yddnclk0jF/esRj6gVwZjeWiiQHn35JronHBI3vk7lZyfTSO3Bg6fdRLcmM0
vhweWHrxGblZ0seZVeWOT8ht0dBz3rVK/hG5IxqFTaOXX2wgd0fDpW5o4e56
slQMQi58zZC7TZaJQfY1137nbpDlYjDw6rxXltfICjGoXvpsqUwVWSkGnE1T
BhZeIqvEYMrHXIMt5WS1GIxLGT/odxl5aQzgr6SReZqMGKyLsHmtXULWj4H5
ygTpdwVkoxikvViTlnCCbCaZbzDvyLxcsmUMLo74OfleNtkhBhPt9EZ7ZZHd
YlA5/XLQ6INkvxgYv5A1O5NODo3B20v1OaYiMicGflklDj/4rP8YBEmbHUjl
sv5jsFfOXnthIus/Bqb8sB33Yln/MdjeZ2ObazTrPwZrvDxaZSNY/zH4czx5
U94+1n8M1Aatm6cTxPqPwVmhdnCzH+tfcv5v8opAb9a/5Hl4kQ6jPVj/MdBb
Pax/oQvrPwYxGZZy+ntY/zGQfqEY17yb9R+DR89a3P1sWf8cfJQzvT7civXP
QQR3VFzODtY/Byfly89pmLP+ObjT+XnLPVPWPwfjZ6zfuduY9c+BHFzv/d7I
+ueg2/1ncbIB65+DnQkxPVPWsv45SPh9pvi0Duufg341ynf11rD+OehK3Wv+
eBXrn4PL2XMMnVaw/jkwvyOV92sJ65+Du9Hhe+MWsv45qHhqmD5uPuufg1LP
P3Nz57D+JeeJs2cvnsX6l/y+lEdS1XTWPwd/lzuZGU1l/XPgp3mS0zSJ9c+B
XWHDRAdF1j8Hh057j/+mwPrnYPj42YHBo1n/HExYEo+BI1n/kvPfqk7cYax/
DuLf5nQpDGH9c/BOLrktcyDrn4Nj/wVqqEiz/jmo05H6ViDF+udg++ZTQxb9
eUP9c5CRoRJ9/ie5W/J8QzutVv8gS8Ui6b+8g1VfyTKxGNXwZIVeO1kuFuev
TFh28wNZIRZGw/6mGrSRlWKhaTtq851Wskosuv5+dN74kqwWiyXZE97UPSMv
jUVA9ryKjU/IiMX6J2Vf7jwk68fiQJ5uhGED2SgW0/7tdr9VRzaLRdHGExf0
a8mWsfAXHbS6WkN2iEXwtjprzatkt1jUH7x5sfwy2S8Wn78rei+5SA6NxRCP
zVHF58mcWNgd//F51lkyNxa8c4LiI6fI4ljUaJytnVBEzozFQuO21fx8cm4s
VhwoHjw4j1wUi+srMlRDj5LLYsGtUzv6PYtcGQsrvy5Pp4PkmlhY3vcVP08n
10ve97+lIzeLyI2xeMC73FzNJzfH4kymqN8SLrktForlCMhNYP3H4v5nTe1x
saz/WMRWTLKKjWL9x6Hv9J313WGs/zhYHAzl7Q5h/cdBW35w9oMA1n8c1D4G
DdTyZf3HgS+1/UKhJ+s/DqOzpl2a4Mb6j0MVb8fIGGfWfxx0B0eUfnFg/cdB
7vToo9vtWP9xSCgQtFRbsf7jYBAZ4jpnJ+s/DosXbtJPNWf9x6FgdtzeHlPW
fxwu6eY8tzZm/cdhTd3k/TUbWf9xGBDkd3iOAes/Dl9dp3Xy9Fn/cZi57Ejy
d23Wfxzm1O/xMtNk/cfhl7A76/xK1n8cZpldGau4nPUfhyG6mg+CFrP+Jc/z
8+PjpgWs/zhs8tCYpjGP9R+H+lE5Z9Jns/7jYJVzKLF7Bus/DiZbDuZtUWb9
x2FpwZjBJUqs/zi0HQoqGPof6z8OB/y1hA7jWP9x6H73rPLKaNZ/HIb/rZij
OJL1Hw8vpS1NXsNY//FYpSBfWzuY9R+PYTJ7eqYOZP3HY9TeG84B/Vj/8Rgy
8aBi/b/X1H88tNZtHTKth6wWj1Q/66X+3eSl8bCNVj1S20lGPIQ5k9dP+kLW
j0eC5cl57p/IRvEYm7zc6Mo7slk8XHap5498Q7aMxySjPlrWr8gO8fg3b6h8
8XOyWzwU/rs08d8Tsl88BBEh1gaPyKHxyFUseS5uIHPiEfjpUkprHZkbD1nd
oSHzasnieMhX/j3kX0POjEfbyu6uK9Xk3Hhse2cRNeQyuSgeyQuS9YwryGXx
eH2nY2X6OXJlPC6dfbW7+TS5Jh42M69WTysh18fjZlaXsVMBuTEeni8a5QuO
k5vjMb/52oAvOeS2eHS/mDhT/Qi5Ix55W1cGeh0id8fj4e/gntL9ZKkExF9Y
kd8pIsskQO5Sfay6gCyXgDx7ocCdS1ZIgPHa17cKEshKCYhQHz3vA4f1n4Cn
04Irpkex/hPwytjTxyqM9Z+Ac1MMt+0PZv0n4NaMXXb3/Vn/CQia8SdN1of1
n4CGUQE/tDxY/wmYPkQlIMCF9Z+ASlMz5SIn1r/keRy3d7bas/4TEPc89J2C
Des/ATW+Y/sZ7GL9J+Cw4l6EbGf9JyC28U5m4VbWfwKSHnOmNhuz/hPww+XN
9eFGrH/J8w9ckLjKgPWfALv5pz2c9Vn/CehOLfNN02b9J2Dc74j9V8H6T4Am
dj7r0GD9J2DTjkSNCctY/wkYamVapr2I9Z8AoeufjXvns/4T0Fp5tW/qHNZ/
ApYd+lJ3YSbrPwEpdlfOvJzG+k+AfIjfmQFTWP+J8LM0vjNrIus/Ee5c3h/D
8az/RMhluGm5jWH9J2L6+DmHeCNZ/4k4lNtXrmQY6z8RTe9np94dzPpPxBDO
qzkdA1j/ifCduevx0H6s/0Q89nssnPWvlfpPxOGJHDvd32SjROhUZmpbdZHN
EuH/d6t64DeyZSKCPF+qCdrJDokwKHbVyP9AdkuUvOmFW6rekv0S4bF/V8Dj
FnJoIsIWTD7x+QWZkwg122Nv+jaRuYkwDZmkOqaRLE5E3oXTASr3yZmJeKmZ
endZPTk3EQ8mtc1bV0suSgR//SPBthpymSR/Zty/3dXkykSsfKbi6l1JrknE
sMOPXoWVk+sTEeNyYVtiGbkxEZWHuu6JSsnNkrwuBYZZReS2RCz8KHUjL5/c
kYj2vsO1i3PJ3ZI87l0VZ7PJUklIufFoUUUmWSYJ/V1rj1/OIMslYYGgY8JV
MVkhCRlLd3KuC8hKSTgyfW57DZeskoTtX3w33kggqyVh19dNuTUc8tIkZOrd
7b4WSUYSVO8OQnUo6z8J3+YOC64MYv0nIfpie8EFP9Z/Eu6JL94/7cX6T8L9
5NhPBW6s/ySsVd3ZnePM+k+C2Qn9zgMOrP8kLO8xbubbsv6T0FgRe4FjyfpP
gr3G18ggC9Z/ErpdBCtczVj/SZD/7v3c0oT1L/k9+f3Om4xY/0nYc3rAaxiw
/pOQY31ed54+6z8JttpnuIrarP8kDJ7087IMWP+S5zUKffxtBes/CXW1eg+f
LWH9J2Hsf+vOXlNn/Sdh2/bQwIJ5rP8k8NVeTU6dzfpPwse7dnkBM1j/Sfj9
55/crqms/2TI/jqydc0k1n8ydiRrBSlPYP0nY4tMXXD/saz/ZJTMWbT99UjW
fzLOatmMqh7G+k/G+oE6R7MGs/6TMf5E9fCQAaz/ZBy7f3PTtr6sf8m8tFVO
6n9bqP9kiAP7m8n+Ihsl48jufuNbv5PNknG6aHzh+S9ky2S0DFUdw/1EdkjG
UNGYDbbvyG7JuHz57JYlr8l+kufZ+WH2oJfk0GTw+fF1j5vInGQ8fua2Oq+R
zE0Gd5BHgO99sjgZI+bb7tOuJ2cmY+q58YZyteTcZBw33P3qyXVyUTI2Ph+3
KruKXJaMifuldjlfIlcmQ+nLWy31C+SaZLRFp3/oPkOuT4bispcmFSXkxmR8
HRMRElpAbk5Gzk6d3WuOk9uS8c7/w9B+OeSOZOj9Wux+JYvcnYx9qW+TQw+Q
pbh4OvmCw8o0sjQXfil7f3ULyDJccL6VaZ3ikmW5iLPfouWcQJbjwn/iz66p
HLI8F1+3m1k+iSArcLHZcVpg8j6yIhfVQjk9rUCyEhcbFtdc+e5DVuaiXtT9
MceDrMJFl7RBtakLWZWLWRVOev2dyGpc7Pnyy6vEjryQi7mVmet3WpGXcjF9
/t8bMjvIGlwMmH/qc7EZGVwsT9xRts2ErM1FSrt4mpQR+x65ePv478Kj68kG
XBRlTX+tr8e+Ty4S9xxd+GEN2YSLW9OHTUlYxb5XLho5X07MXk624CJf5nn9
jUXs++Vi5pNdyfbzybZc7H0n9abPHPY9czH+oX7DfhWyMxfJn8u3LFRm3zcX
CrOb99yaRPbiQm6murzVBPa9c9E9baHh9zHkIC5Cf+0czRnJvn8uwkfP2TNu
GDmSi+8+ow3zBrF94OLO8YRzS/qTE7h4WCVdWC3F9oMLT9NPs416XvVawIW1
56m5T7rIYi7sDl8+bf2NnMHFq6Z9l959Jmdy4cMxXuf6npwtsfshk2+vyblc
7L5a1eT9kpwv+f2hE1/+aCIXceGiMsjSp5FcykWNzrOtnQ3kMi4mvWi/5lZH
LueivIR/4sNNciUXhysUpO2ukau5EC6qvdN0mVwjuR/RPci4glzLhfuK16eu
l5HruVg7/tHN5aXk+1xc+D3cML+Q3MjFpwd3liqeIDdxcblkY0JcDrmZC4+8
WzpdWeRWSd+NfjbWB8htXMzZEddyS0z+yMUzI7VqdQG5gwvXi6J+6cnkTi72
HXh/6G8cuZuL+bc2iqyiyT1cGPb78PZKGFmKB4PHTclTgsnSPGwqXpMY6keW
4UHu3OLnTZ5kWR4ONNeFLnEly/Gg1jDZk+tEluehtl3j1Fs7sgIPjZpzV6+0
IivycMT/nzzPgqzEw93WMwtatpKVeThtv1WobkxW4UHs1rwyfANZlYc3Pw1n
1K0lq/Gw1k9sNF6HvJCHgkelZ21AXsrDAg+B+YkVZA0efg2ctuTLYjJ46Dpj
tH7RArI2Dwlf/wh855D1eVAOHD6yTIVsIPn9LbaVP6aSjXiQqnp0QH0S2YSH
qUs0c13Gk814iDHyenZsNNmCh4l1WPFCjmzJw854j0vysmRbHlT23t2tP5Ds
wMN+68kLAvqSnXmoNp2iePzPS9p/HlapcKc2dpO9eCg8NEVXupPsx8M8+8Sw
ue3kIB64v/c1mL4nh/KQnH90WfBrciQPbzlHi7OayRwetLdNWVb9lJzAw6TU
87dbH5K5PASayeztd48s4CF8W5a80m2ymIdBz8dcWV5DzuDha9F3D+MqciYP
bmOvKTtdJGfzMOfakAch58i5PGx+qBPGKyXn8+B8/vP0w4XkIh7U1YOqio6T
SyXfo/Yuk4qj5DIetFSkH13PJJfzMED3nn79fnIlD0OVVY89FJKrJc+7w7X9
CY9cw0MVv3PiswRyLQ/f7YerP4sh1/PQ127YzKfh5PuSvv8t//swmNzIw42Q
x4X1fuQmHv50qqyo8SQ387B3vs2BChdyKw8ep8obihzJbTxsOGD7NMuW/JGH
xzmRxdxd5A4ehshpGgebkzt5sOCXVezeQu6WzNsq/XmjEbmHh9aWJS8XrSdL
peD0UCvBOF2ydAoCPsdI/wZZJgWLGwrmPllBlk3Burn3hp9dTJZLwUlOWzZv
Plk+BT0er947qpIVUrDN5/jz1TPIiimY2H9a8KgpZKUU2O5Rq2pVJCunwPRS
9slTY8kqKdh+13hZ6EiyagqGKg6yWTeUrJaCP6diZ4yUIS9MgcESQcSjvuSl
KZCtaPZM/9NM+58Cr2ql7+bdZKSgaeq/fuO+kbVTwOmadOD+J7J+CsBVqkhs
IxukoMBKZKndQjZKQXzHqMjuZ2STFPArJyofbySbpUBrzbKV2xrIFinYWfns
Vv87ZMsUrDDcV1tYQ7ZNwaPC2BVbq8gOknlGVqN7KsjOKbCYbmN6sIzsJnnf
Wa2/Vp4ie6XAeL/6vycnyX4pKNUQ7vLOJQeloPDzOoWhR8ihKQjS4kw7fIAc
mYIZr4IiForJnBQEu2+cW51CTkjB2fCJUzYlkrkpeBUotf1pDFmQgv7h/R5Y
h5PFEtvMSXgbRM5Iwap9gUGOvuTMFDSXvMpqcydnS/Ks2tht60zOTcGmkuzA
5/bk/BTcuFsxY4sVuSgFZaHO3TXbyaUpqM71f7fMlFwm6Wfy0R/HjMjlKfgt
Ojph1HpyZQrMvVVMAnXI1Snod+3u/ubV5JoUNEzS+LxmObk2Bfqcbt3DC8n1
kn0wT8r6O5d8PwW5swN/bp1JbkzB6pIF6wqmkptScDt3YnKfieTmFLieOli1
SYHcmoKbWjItB0eS21LwNCinrU2W/DEFnmPO180bSO6Q9A1/vmcfcmcK3g6a
tNOh6wXtv+T73rpiRcsHck8K5Jd6lm5tJkvx8cS/6dLV+2RpPh4V+RjPuUGW
4ePrj1l2SRVkWT68Tt5631ZMluNj50r5Jxo5ZHk++j3KVYlLJyvwcVdtTG19
ElmRD2Odu+fkIshKfNjKLXm71peszAdvfcLaoD1kFT7yZ/55cGwXWZWP6BEH
wmqNyWp8PNxqr/lej7yQD53uZYP7aJCX8pFh+KJeTo2swYfCjX5x45TJ4ONZ
7vJZExTI2nyEnuw5OlqWrM/HmTvHvshIkQ34kGsP6fP923Pafz4ak/JuPH5L
NuHjZ7D6qrNPyWZ89CTIGifWkS34GLVSpmd7FdmSD3XXZ6pTz5JtJR45/fGr
42QHPrrqdnamHyQ785F17o37+hSyGx+VX/9qd0aRvfiI2X7TMtWf7MfHn2WG
ZXP3koP4mPPKeVWlJTmUj4072l+vNSFH8tE2PDDrlh6Zw0fLTqGNzgpyAh8H
jI9NPDuXzOWjedW3aqUpZAEfDeYH9cNHk8V83N9zYv9TGXIGH5qWvwtVe57R
/vMxq93A17udnM3Hh0UaLadfkXP5KDRZ8/rTA3K+5H0POu3y3w1yER/rDa65
aZeTSyV9t0Y0WReSy/hQ6v/osN9hcjkfT5sjSqNSyZWS/Joz+8ZxyNV8zJiA
oKhAcg0fVZMnjPJzIdfysX/bmzNWVuR6PiLzcrauMSHf56PGadnrcXrkRj6m
dhtvbFtGbuIjZUVE1ElVcjMffVfM9nWcRG6V5DsSPUpxJLmND7MtOWuvSpM/
8vHynZuMXVcT7T8fw1YfXvX7HblT8r56bj6JaSJ383FsvNGtwXXkHj5y7Jz+
RlwmSwlwve9062+nyNICjP5q1WqWQ5YRoCu5zqNUTJYVIHL011/948lyAlwb
O9HJMJgsL8Cn/v4n41zJCgJ453QXV1iRFQVYx7e2fWNMVhLgVen6YmldsrIA
O8rHRiksJasIUJDRfWvyLLKqAHf6fnZXUiSrCdD/drW1/DDyQgEMw8bE/fn3
lPZfgCdX9BuefiFrSPJeS5hZ2EKGAH+uP/f1fUDWFsAooH/ewutkfQHeBvGO
vSkjGwjQcatpR+JxspEApfMHn1HJIJsIMOqsdHpZItlMAPdR+75p7CNbCKCq
+O3EaTeypQAH1LPyp1iTbQWoOJv8PMKY7CBAoFvcrMfaZGcB6v9M9p+ymOwm
QKHOiZJdM8heAjS+XHWJq0D2EyAnsSz69CBykACd/DMdt389of0XYNbKtNbH
H8iRAnBWhq993ETmCFA31WRA7W1yggC7aor7lFwkcwV4X/5ncnwhWSB5vvJt
hlszyWIBNk/McRzDI2cIUKQdZlETRs6U/N4ovSF7PcjZAnhay22XtiHnCuDg
VaKWZEzOl5zvveg2WJtcJEBEbeg/v4XkUgH+eyN1+bEyuUwAPSupNNXR5HLJ
/DO/nNz7kysFWFOiPD73+2PafwEsu/bE1r8m10i+jxif/e8fkGsl39+Gwwt+
XCXXS5wvPf/bafJ9AbYPdvJ7eZTcKHm/zlveV6aSmyTft6zkX3VR5GbJ73eZ
3dvsTW4VYE6x9OD+duQ2AeweWrQfMyF/FODvHVfrFdrkDsl+BUtpXVIndwpQ
1hXlpj6V3C1Ak87sm6KR5B4BDs2om/uxD1kqFUov+wWrfWmk/U/FkuHD+bbN
ZJlUPI54t4FTR5ZNRZ/Zq5P2XyTLpULU7TL34EmyfCruvIiT5WaQFVIRdn9r
f/d4smIqRj0y/I4AslIq7IaIy/45kJVT4fxUfvbJrWSVVMhMN1VZq0tWTUVx
QFZ8w0KyWiryrDvmGUwlL0zFprKO9pIR5KWp2Dq0f85AKbJGKryUdFTXfX5E
+y+xTYhFQBNZOxXrUhbKiW+S9VPRs/2w0pEysoHk/Uw8b78/h2yUCqvS6RdC
BWSTVAzcbvBjczjZLBWJuWs7RriRLVIxOKM7tGIH2TIVulXt+7asJ9um4qFf
RPXjpWSHVBiuuD5t3XSycyr2T0wOyBlFdpPYzD3tsxTZKxVf3l03m/L5Ie1/
KjbaliRpPiUHpcKobuwIgxpyqOR5T+ae1jxNjkxF+KSXm6YcJnNS4ak25MKn
JHJCKtZoaF47EkjmpqI2zE1f24EsSIVC4/YxdSZkcSrM4w9Ka2uSMyTfi3Xh
28NzyJmpWF3Xwv8wjpydCmV9z2f/DSDnpmLu3QDxsq8PaP9ToVoslbbqObko
FQu2dpeo3iSXpuKNm+75fmfIZalQUb8aXpVFLk9FyEP95j2J5MpUFOpn5/T4
katT8V6+IM/bllyTitcROhUPN5JrU6H/fevpSSvI9am47PnGzmg6+X4qhkcN
OeIwgtyYCp0lfTQdeu7T/qciynmG/Ma35OZUWNgP/qJ4j9yaihaeY/7dcnKb
5PlSV03Ye4z8MRUJh6tHtvPIHal4NzDUYWsQuTMVV2V1vx61J3en4uZQnegn
RuQeyff7UvZ353KylBCDwkQzviuTpYU483tTy5NhZBkhik9MG5DT3UD7Lzk/
HeZg+oosJ0TFbduWD7fI8kKsWLPbyP40WUGIOYZXY68eJCsKoXbc0WkQh6wk
xEm37tvz3cnKQrSqPeGuMierCGG3WY87T4usKoRGifFxaVWymhD1Ib8qKuTJ
C4VQ3jjrhPmfe7T/QnzwuLv56WuyhhAefu+Fq++QIYTqa455zBmytuT5/3sT
VnKQrC9EHx+Xr5XRZAMh9rjeSSlxIRsJsWi41PoYU7KJEOO3mUmvXkU2E8L5
uSDv8TSyhRALd72bvnUo2VKIFJ+hTmc779L+C5G3fp31r6dkByH6gyOlVEV2
FuIH32KJynGymxBSP8f8HskjewkxcXCdZrMv2U+I6Vnu/bg7yUFCGEvdWTZF
hxwqROq1w83C2eRIIb5kH//+aQSZI8Svm7l+M7rraf+FGCHlvUfrOZkrRMfO
gfc0q8kCIS7mRpRMOU4WC3FOWXv0m2RyhhA+fVqlE7zJmUKEq65Nkt9OzhZi
eerJyn0g5wqRWXfs5O1p5HwhxsiqO/4dTC4S4mGx8yjl5jrafyEadMYYjThO
LhOCd7//pWpPcrkQplqN+1etJFcKEWauOmPfAHK1EF87cnOi6+7Q/gshWtDH
bouYXCv5Xr78KP5gSa4XIqLd/NXameT7kvczboiR25fbtP9CfBd/3rbrHLlJ
COur7TZjw8jNQgx8+O2hWJ/cKnnfO+qVWoeT24RIj1hV+vNhLe2/EJ++3pJ5
coDcIcSM2BvpUbbkTiEWn1/yoWcWuVsIt1NF+/DlFu2/EM0wemV0liwlkvz/
bVrW3GCytAhbTcyNnqwhy4jg8yEhykSGLCvCqa+Lmw7cvkn7L4Jcj+63Mylk
eRHiW133Zm4lK4jQYd/3i7kiWVGElPbqGW+bb9D+i2B+88ZFnaNkZRH8rmnZ
+zqSVUQ477ztbtAcsqoII97+OG36pYb2XwS9cwdr+58mL5ScOy+rj/MjLxXh
jkFr8JsVZA0RhthdEoz7d532X4QTt88/UL5C1hbhX5hNv0FRZH0R7B8Vvrym
RzYQYd7FW4t2DSYbibC5o/XqvdprtP8iaC7oMpuSTDYTofCG+MyGTWQLEXYY
Xs8xG0W2FEGjo/QLHlyl/RdhiqNwl4yI7CDCNJF7WaEZ2VkE6z6fqpaMJ7uJ
4L9RaW3W02rafxGCHtoN+5RB9hNhp8mcxxN2koNEmPG1bu/cSeRQESyP2CVP
a66i/RdhZdf+f32yyBzJ+3RJCqm2IieIkGuTeXPvFDJXhPEHzDL/vrpC+y/C
kehV532PkMUijFU9V//YhpwhAqezPW2aMjlThKoZJ29sb71M+y/C7jVrRgRn
k3NFCJjgMinOlpwvQlaTdmaEMrlIBKfacSudWitp/0VwbnPKWJVNLpPMW3/H
qo8tuVyEMdtfzjk1lVwpQouDp0betUu0/yIsySlMr9Uh14jwuXbx0bvVF2n/
Jf2me0Se0yLXi3Bzi7151JUK2n8RRk7IWrNYk9woQtwM9c23L5XT/kueZ2SO
aP0qcrMIOQ1d40vKL9D+iyAVKH7WZwW5TbJfIU5PVpw7T/sv+d4Dr/a3WkLu
EGG0aaChx+lztP8ivEl4IXZTJ3eLYHS8vsaiuIz2X4TnJVVnl8wjS4nx3u3u
sr4nz9L+i7E69KpixSyyjBhHf89Vccw9Q/svxqsCj/8GTifLiaFb9Pys6Mhp
2n8xQnUu5U+YTFYQY2a31wn+wVLafzFmXYrfIaVIVhLjz5QGe+u0U7T/YqRr
+dqdH0NWEePKsfFfZQQltP9ibLjYcWjDCLKaGAN+N/bEJxXT/ouR7B/AuzyE
vFSMFyMsX7Zzimj/xSi6Kb9n7AAyxMiaG2bkPqCQ9l8Mr4NxE3KlCmj/xQg+
cHbs/V/5tP9iKFlbK/7oPEH7L0bBTJnuYe3Haf/F+HA+wm3SuzzafzE+XdfT
UmnJpf0XQ2Zs2rRZz47R/ouxxqKmetqjHNp/MTYX7Lk24e5R2n8xHkWIamRv
ZdP+i9E2faz1z+ojtP9i5CVlT3l18TDtvxityZP418uyaP/FGLe1etHxkkza
fzFWrr4iO3rbIdp/MY4sG/P9rsEB2n8x8scc7ZeA/bT/YhhWfRiivTCN9l8M
IzWVh79miGj/xRgmXT6peEIq7b8YI6wT9+8ezqf9F+PyRbuvE/vxaP/FaNl7
ILrwUyLtv+T3bzzWm/YglvZfjIdbizUzy6No/8Vo6noXODk7jPZfDL+Bck+N
xwbS/otxUe3tL683HrT/kvfRYS9rtMeO9l8s2R+hm9cMbdp/MVLMMloeFZhe
+j9XSp5n+rA9nLI9va6WfD+/GtvOy/r0ukYMt2HDPimsDOl1rRhq5xelFyyO
6HW9GF+1lWyrNsT0+r4YARFfbW7ax/e6UQxXxxfqVSHJvW4SQ75pVLnpLV6v
myV9Lt3sqv2I3+tWye8Hz0qe1ZLa6zYxzPb4/ZZpF/X6oxiZQavEL36l9bpD
jO86HoYFAzJ63SlGbsrNAd4jD/a6W4xJwuuPxw3P7HWPGJi6aOp3+axeS6XB
quqAee34w72WTsOJDT5Bh5SO9FomDQNLj0S7TM/utWwajG/a+y1TPdpruTR0
NulvllqQ02v5NKi3y4ypWnKs1wppeFQcey1sZW6vFdPgPL1yt4ZWXq+V0nDm
w+G/X/WP91o5DQ1zx/OObjjRa5U0HNDomGZikt9r1TS0Flyp/rvtZK/V0qA8
v9P76K6CXi9Mg2fjwTX6doW9XpqGhVFa6Z6LinqtkQY734GzNcvISEOX+ujH
siuKe62dhufXZh5/WEHWT0NRw+rsgyjptUEanm2Mu21bRTaSvD8/V9WZuqd6
bZIG2T6R1z/UkM3SEBcYfTR/fWmvLdKws9P89p47ZMs0DK4eoDtz0+le26ah
JCV/zOsGskMaghI4uodMz/TaOQ2jr35s2vqY7JaG8zUrXw6zONtrrzTM2dZu
Xv2c7JeG8VvCNvlZlfU6KA2WNUG1s1rJoZL3PdW94an9uV5HpkFm/5e98e/I
nDRcz0k5ssz5fK8T0lB3/G3gm89kbhrSKkL/8twv9Fog6ZvbtkCjkyxOg5v/
YaXXPuW9zkjD1VSVuoSf5Mw0jB3xXkc9qKLX2WloCV+b0PiXnJuGGY7784LC
LvY6Pw17y5WPTpK+1OuiNGRnjIu+HE0uTUPT4Dszi6Ure12WBv/gHYP76JLL
0zDBeamDUQy5Mg2jgu7qHqohV6dBZTU379Ogy7T/adC7Wc9fsZ5cmwbzLS0y
sQnk+jS0tQyRfXibfD8NI3+EZU4ZfoX2Pw0CTbcbLkbkJsn359EZe55Hbk7D
4a8TX/dvILemwfHc12dG8lW0/2nYpGTnu38L+WMa5l/aUfpaSO5IwwvDM6J5
jeROyfuIX67sP66a9j8NCqq5FlfMyT1pULpRoDUkgyyVjprH7U+Nn5Gl03Hh
5N8ZGROv0v6nY9xey1mtu8iy6XBWTHg9O4ssl47w7PfbPV+R5dPx89nD5PNT
r9H+p0Mj80BEHzuyYjpuNgQv088hK6UjOib3VNJbsnI6vspodt5XuU77nw75
fxZ/xjuRVdPRGiN91/IEWS0dCmYL3HM+khemY+Kzhhcf5tTQ/qdjutWNifNd
yRrpkJ3/Zp5PERnpGFTdIX/hC1k7HVKvD9f9W3CD9j8da5/lWWl7kQ3S8SQz
p5ZzmmyUjoLfc0be/kE2SYdJZY36iKU3af/TEdL1bcEWf7JFOiLkJo9IO0+2
lNwfeaau6TfZNh2GdUPdlFbeov1Ph5W83zebELJzOp69WLb92CWyWzp28RNz
30vV0v5L7qscaZqzhuyXDh3bzG63CHJQOm4Nzfpzqpocmo7Zk89+/NH/Nu1/
Orz7f7i2TI/MSUfc5RWJQRxyguTvzz+ESzfI3HT8Xtb3VZ8hd2j/02EttdZD
24AsTsdmxY1foxPJGem4e/ut9Y075Mx0rJ//vHqIXB3tfzrEnt8VNmwi56bj
dP93u7gp5HxJv/XO6fcayEXpeFUitI0bXE/7nw6DCQ4+s2eTy9LR0PwzvHY9
uTwdW1pEcXudyZWSeRfiEoclkqvTwWsYm1B4klyTDoeQsGijO+TadMyRGxj8
5TO5Ph2631tdU4bfpf2XvK8bJrvU1ciN6Rjumrj+vhG5KR2ZylULvd3Jzelo
2T9jwpgUcms6lIe//3umhNyWjlrTJc1bG8gf0xH4d9ml7m/kDsn+bhufkSZ/
j/Y/Hdnivz7LF5G7JX08HWz0dAu5Jx07da1mBPmQpfZDd/SU/+maDmOqquMw
jqNiomEjJaJERb1LcJg3pWJ1jae6GCUlS2yIKMyoVDCxroZJhkhFyaZOCvP3
P4JGxpSQFBKLUhs1VJqoJDcnBcqKlIg2NGwo3Rf/e+7pefnd5835n/2em2El
uv0Fw6oyz3xzWHeAAIdSype4dQcKtoeMWjvYrzvI49O2zym755zev0AOjg55
/BHdoYLb/9nS2ZGiO0xQfvb+g/nrdYcLXmy4uWGK0m0T+A/eMbehXneEwJXz
eshLbbqjBJf6H+kYfku3XZAV6dq/d0KL3r/gpT1Ra56K1R0jcNzIfqwrTbdD
MPhjwoj383RDkOM+eTpyt26n4GpfX8nJ47rjBavsLWmZl3QnCDpbsqcGDvtJ
719Q5DrbUzlFd5Lg0WuDtc86dScLpstgbk+G7lTBmrGtT255R3e64M4Nm0fZ
9+rOEOx8Y9KZ5h90LxOUTDZKVv+uO0vwmn3okjEB5/X+BaOuzLcditDtEvz5
8IdX5j+tO0cQva+xum+57lzBrbd71374ge48QXHVHbMf2q+7QDCzyzas9ZTu
QsHqPdEn3ujWXSRYHBa7JXR0q96/wJ4Rt+DIdN3FgprU+HEpz+neIZj3XXzH
v6/qVoIjM576TLboLhOkTXaudFTrLhdk3oqd1dasu0KQP+bRG2/9rbtSME0e
PDphjFvvX9Dx/Yx3js7UXSO4fChybvp83XWCvblT7hzi0l0vGG4f37q7WPcx
wWR3iPFEre4GwdD1QS9e/kl3o+DCuFGRBdd1Nwkm1g/7y3b3z3r/gsTUmzXf
P6y7RbBp4PqbLyfrdgtqVS9GrNN9UdDluHJbxce62wUhbZeb4r/S3SlIn23x
LsG4Cxbv9txXlcV7BSMDO3zeJyhtTBpher/g/bbZJ00f8OynPC3TdD+F508M
eXyO1/0VBif9cThup+4AhV8qS+OKqnUHKmR+Wrc4q0Z3kMKqqs8zJh7UHaww
PmtVaWGt7lCFA0t7Jp73epjCmjRb5sgvdYcrPBt+/FrEId02hZQJ40896fUI
hbULv8h/zutRCol7e7DE63aFs9dTC9O8Hq3w4/Hc2BVej1HYtfrb2Fe87vB8
b8DSA6u8DoWJCdFHV3jdqeBofuG+17wer7AiKHxBltcTFPYtXOR83euJCncH
Tx690utJCre1D/3B9GSF6qrN6aanKkz5rdHP5fV0hbvWLXrX9AyFzpdXjjN9
mcL55W+XmJ6lMG3WxqmmZyvcm+8sNd3l+d/f/Btleo7C0Bkn95ieq2CMWTvD
9DyF7qtLy00v8Lxn7Ed20wsVzkWHfWp6kUJXWegDpm9VkJnZPi9WWHB6vs93
KGyL+8jnSiHyk1d9XqbQ995nPi9XWN70ps8rFC6kHPB5pcLn8/J8Xq3Q+NtB
n9d47vN0vs/rFFLza3xe7/G/N/n8mEKPo9bnDQodrgKfNyps3GbxJoV11RZv
VnAftniLQu4pi7sVYk5Y/KLC160Wb1e454zFOxXi2yzepbC/xeLdCk2/WrxX
4ZnzFu9T6G23eL/nHlstPuDZX4fF/Qwssrq/gS+sHmAg3+qBBpqsHmRgu9WD
DbitHmpArB5m4BerhxsotbrNQLvVIwyUWT3KQIfV7QZ2Wz3awCWrx5A7yEHu
JI8nTyBPJE8iTyZPJU8nzyBfRp5Fnk3uIs8hzyXPIy8gLyQvIt9KXky+g1yR
l5GXk1eQV5JXk9eQ15HXkx8jbyBvJG8ibyZvIXeTXyRvJ+8k7yLvJu8l7yPv
Jx8g99v1f/ff9X8PIA8kDyIPJg8lDyMPJ7eRR5BHkdvJo8ljyB3kIHeSx5Mn
kCeSJ5Enk6eSp5NnkC8jzyLPJneR55DnkueRF5AXkheRbyUvJt9BrsjLyMvJ
K8gryavJa8jryOvJj5E3kDeSN5E3k7eQu8kvkreTd5J3kXeT95L3kfeTD5D7
ldL+S2n/5IHkQeTB5KHkYeTh5DbyCPIocjt5NHkMuYMc5E6f/we7Zic7
      "]]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {2001., 0.20456534224256046`}], 
            Offset[{2.999999957988072, 0.0005020672939494788}, {2082.7075, 
             0.20456534224256046`}], 
            Offset[{0, 0}, {2122.8182716865795`, 0.2045838083734369}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., 2.220446049250313*^-15}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., 2.220446049250313*^-15}, {2122.8182716865795`, 
             0.2045838083734369}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {2001., 0.20456534224256046`}], 
            Offset[{2.999999957988072, 0.0005020672939494788}, {2082.7075, 
             0.20456534224256046`}], 
            Offset[{0, 0}, {2122.8182716865795`, 0.2045838083734369}], 
            Offset[{5., 1.1102230246251565`*^-15}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., 2.220446049250313*^-15}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., 2.220446049250313*^-15}, {2122.8182716865795`, 
             0.2045838083734369}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{22., 5.500000000000005}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{22., -5.499999999999995}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., -5.499999999999998}, {2122.8182716865795`, 
             0.2045838083734369}], 
            Offset[{10., 5.500000000000002}, {2122.8182716865795`, 
             0.2045838083734369}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"\[Alpha]\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{16., 3.552713678800501*^-15}, \
{2122.8182716865795, 0.2045838083734369}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {2001., -0.40176110111090513`}], 
            Offset[{2.9999735922421746`, 0.012587527540492275`}, {
             2082.7075, -0.40176110111090513`}], 
            Offset[{0, 0}, {2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {2001., -0.40176110111090513`}], 
            Offset[{2.9999735922421746`, 0.012587527540492275`}, {
             2082.7075, -0.40176110111090513`}], 
            Offset[{0, 0}, {2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             2122.8182716865795`, -0.40129812537710297`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{22., 7.500000000000005}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{22., -7.499999999999995}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{10.000000000000002`, -7.499999999999998}, {
             2122.8182716865795`, -0.40129812537710297`}], 
            Offset[{9.999999999999998, 7.500000000000002}, {
             2122.8182716865795`, -0.40129812537710297`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"\[Beta]\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{16., 3.552713678800501*^-15}, \
{2122.8182716865795, -0.40129812537710297}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 40.41633073821518}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {-0.40199489601896354`, 3.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[137]=",ExpressionUUID->"9ea52deb-83c1-4b6f-a964-735827cbc90b"]
}, Open  ]],

Cell[TextData[{
 "When the number of input examples is very large, computing the actual \
gradient can become very expensive. Sampling the gradient on a subset of the \
examples (a ",
 StyleBox["mini-batch",
  FontSlant->"Italic"],
 ") allows to achieve faster iteration speed and reduce the memory \
constraints. This method is called ",
 StyleBox["stochastic gradient descent",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"03f256d7-85b6-412e-b311-2354aeecb0f2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fd7bf7c0-df33-48a8-8c12-dba7a39c4e2a"],

Cell["Simple Networks", "Chapter",ExpressionUUID->"89982d9e-38e8-425f-bbbb-07db7d077c7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a2cc711f-d784-4f41-90a8-92ae9f231c09"],

Cell[CellGroupData[{

Cell["A Linear Model (again)", "Section",ExpressionUUID->"dfc5dbf1-a782-4f1c-8828-a1861da45ee8"],

Cell["\<\
The simplest possible learnable program is again a linear model between a \
scalar input and a scalar output.\[LineSeparator]This is also the ideal \
candidate for our fist parametrized, trainable program.\
\>", "Text",ExpressionUUID->"6a7c4885-0735-42f7-b9d8-b258decf53f6"],

Cell[CellGroupData[{

Cell[TextData[{
 "In the WL a trainable affine transformation is called ",
 StyleBox["LinearLayer", "Input"]
}], "Item",ExpressionUUID->"fb99a21e-d141-4f8f-95aa-266405694f2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "=", 
  RowBox[{"LinearLayer", "[", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "->", "1"}], ",", 
    RowBox[{"\"\<Output\>\"", "->", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"2d3d76f0-6443-4db3-923b-c7a80cce9790"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"1\"", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Input Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866545535758514*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"92231c68-db4b-47ce-a15c-ac28e701bf6c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The parameters \[Alpha] and \[Beta] are called weights and biases \
respectively and when the operation is first created  they are unspecified. \
In order to use the model you have to either train it or initialize it.\
\>", "Text",ExpressionUUID->"587d20c5-8994-4b01-b281-35664b301212"],

Cell[CellGroupData[{

Cell[TextData[{
 "You can initialize a network with the function ",
 StyleBox["NetInitialize", "Code"]
}], "Item",ExpressionUUID->"e20a6cb1-e019-4606-9f50-f5276708e460"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"network", ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"c7cf4196-7bf3-46af-bbee-c21ed2174206"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"1\"", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Input Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8665455443943663`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"1f827845-3756-454d-ad03-19bda8aa8fd0"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The properties of a ",
 StyleBox["LinearLayer", "Input"],
 " (and any other layer) can be accessed using the ",
 StyleBox["NetExtract", "Input"],
 " function"
}], "Item",ExpressionUUID->"b3732d55-ffc0-45fb-b64e-f826e90e2a7b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Arrays are stored in a typed structure called ",
 StyleBox["NumericArray", "Input"]
}], "Item",ExpressionUUID->"d057aea6-be44-497d-bb35-c7fbddda11f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"network", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\"\<Weights\>\"", "}"}], ",", 
     RowBox[{"{", "\"\<Biases\>\"", "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"fb15d08f-3cb2-45c2-adcf-9699cef0ae9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"0.4856787323951721`"}, "RowDefault"], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    RawArray["Real32",{{0.4856787323951721}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"0.`"}, "RowDefault"], "SummaryItem"]}]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    RawArray["Real32",{0.}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8665455538654113`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0e52870d-c91d-4088-a1ba-baf487860db4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "You can use the function ",
 StyleBox["Normal", "Input"],
 " to convert them to regular list"
}], "Item",ExpressionUUID->"3adcc359-a66d-4a0d-8037-21a19bdc6b2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "=", 
  RowBox[{"Normal", "[", "%", "]"}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"16ab2ad8-1d88-4fa4-8c38-38c544c52b07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "0.4856787323951721`", "}"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866545566441743*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d0c58f43-4907-4eeb-8341-267c6527b203"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Evaluating the model is equivalent to manually perform the affine \
transformation.\
\>", "Text",ExpressionUUID->"96afc5ff-5dc9-45a8-b030-417125b04c58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{"{", "0.5", "}"}], "]"}]], "Input",
 CellChangeTimes->{3.866545590808941*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"e6594195-f0c7-4926-a215-33b1c8da1c39"],

Cell[BoxData[
 RowBox[{"{", "0.24283936619758606`", "}"}]], "Output",
 CellChangeTimes->{{3.8665455754070945`*^9, 3.866545591493827*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"214ce95f-8ae4-4a7b-bb9f-0a3714d13eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", " ", ".", 
   RowBox[{"{", "0.5", "}"}]}], "+", "\[Beta]"}]], "Input",
 CellChangeTimes->{3.8665455897150116`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"84629a13-fbb4-4ec6-b178-49ba88008786"],

Cell[BoxData[
 RowBox[{"{", "0.24283936619758606`", "}"}]], "Output",
 CellChangeTimes->{{3.866545582023213*^9, 3.866545598743196*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"8dec11d4-3eac-4933-978b-89f6f30c18d7"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"254457fa-d3a7-4bf5-b68e-61b9e170f80b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"accfff00-9944-43e4-ae1e-0f6fda8de627"],

Cell[CellGroupData[{

Cell["A Linear Model (again)", "Section",ExpressionUUID->"fbef179d-ff1f-4fa9-ba4d-8d466c0d6ae1"],

Cell["\<\
Our affine transformation depends on two learnable parameters which are \
initialize at random. In almost every case it will not be a good fit for the \
input data.\
\>", "Text",ExpressionUUID->"9e3ffe94-ff35-4847-bbcb-3a230fcb320d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"List", "ListIcon", 
      GridBox[{{
         RowBox[{
           TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["List", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["20", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1960", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   {-3.9068434162460264` -> -1.2010588378819396`, -3.3102125843669405` -> \
-1.0228107303013187`, -2.2636390274932907` -> -0.9094541994700834, \
-2.0372061777543617` -> -0.8131889056611358, -1.8882146599997576` -> \
-0.7419076992288367, -0.9766963655609135 -> -0.5449660263404739, \
-0.6093182168230769 -> -0.6203000519513138, -0.32786250459929533` -> \
-0.5232518913646612, -0.16534663622060286` -> -0.51196165881549, 
    0.1757140016150167 -> -0.306814273580702, 
    0.3500541356085449 -> -0.2651102287037142, 
    0.6708342879211902 -> -0.28420304276776986`, 
    0.703541249556281 -> -0.2945138552951242, 
    2.079168012492703 -> -0.022166498041974125`, 3.0128679405935443` -> 
    0.11913456679769452`, 3.077833349639624 -> 0.29144226029576636`, 
    3.3564812989130317` -> 0.34250376678298544`, 3.4181293067372955` -> 
    0.3101741128711931, 3.879943980354435 -> 0.43234926024025866`, 
    3.8983224933304665` -> 0.4100248028376844},
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"ee334ef6-9193-4585-bb3f-7b93d90518ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3.9068434162460264`"}], "\[Rule]", 
    RowBox[{"-", "1.2010588378819396`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3.3102125843669405`"}], "\[Rule]", 
    RowBox[{"-", "1.0228107303013187`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.2636390274932907`"}], "\[Rule]", 
    RowBox[{"-", "0.9094541994700834`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.0372061777543617`"}], "\[Rule]", 
    RowBox[{"-", "0.8131889056611358`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.8882146599997576`"}], "\[Rule]", 
    RowBox[{"-", "0.7419076992288367`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9766963655609135`"}], "\[Rule]", 
    RowBox[{"-", "0.5449660263404739`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.6093182168230769`"}], "\[Rule]", 
    RowBox[{"-", "0.6203000519513138`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.32786250459929533`"}], "\[Rule]", 
    RowBox[{"-", "0.5232518913646612`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.16534663622060286`"}], "\[Rule]", 
    RowBox[{"-", "0.51196165881549`"}]}], ",", 
   RowBox[{"0.1757140016150167`", "\[Rule]", 
    RowBox[{"-", "0.306814273580702`"}]}], ",", 
   RowBox[{"0.3500541356085449`", "\[Rule]", 
    RowBox[{"-", "0.2651102287037142`"}]}], ",", 
   RowBox[{"0.6708342879211902`", "\[Rule]", 
    RowBox[{"-", "0.28420304276776986`"}]}], ",", 
   RowBox[{"0.703541249556281`", "\[Rule]", 
    RowBox[{"-", "0.2945138552951242`"}]}], ",", 
   RowBox[{"2.079168012492703`", "\[Rule]", 
    RowBox[{"-", "0.022166498041974125`"}]}], ",", 
   RowBox[{"3.0128679405935443`", "\[Rule]", "0.11913456679769452`"}], ",", 
   RowBox[{"3.077833349639624`", "\[Rule]", "0.29144226029576636`"}], ",", 
   RowBox[{"3.3564812989130317`", "\[Rule]", "0.34250376678298544`"}], ",", 
   RowBox[{"3.4181293067372955`", "\[Rule]", "0.3101741128711931`"}], ",", 
   RowBox[{"3.879943980354435`", "\[Rule]", "0.43234926024025866`"}], ",", 
   RowBox[{"3.8983224933304665`", "\[Rule]", "0.4100248028376844`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.866545607418811*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f8438dd1-0396-4f6d-8474-7fd8cb0c95c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"List", "@@@", "data"}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"network", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}],
    ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<prediction\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[1524]:=",ExpressionUUID->"cf7d1365-0230-435d-8cf3-09a51abaf0d1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA8PT6HjdBD8AoZdR4iTfzvyhPRbxQ
ewrAzEXKyG5d8L9wQ0jH7hsCwEHifbE/Gu2/LFClwDJMAMCBG2m9pAXqv3Bt
SJMgNv6/ptQaN7W9578QmYa8GEHvv3QHkpdccOG/wJbD6oh/47/Y0Jp+f9nj
vwCstQOz+9S/V2cfwHq+4L/AGYkdFCrFv9xjrWr9YeC/gGEx4ct9xj88aL5V
2KLTvwArEXZJZ9Y/qYWH5JD30L/QBfV3eXflP+Yeh/VhMNK/AGZH8GiD5j8m
iC2kUNnSvyRdxNYiogBA4OWggNCylr8QIcCBWhoIQCgfOFyaf74/LOxZF2ef
CEDyIClw/abSP5C8A94S2gpAMr5F65Tr1T+YfI8tVFgLQN4+toXk2dM/lHnP
ESAKD0AKoUs7nKvbP5zsELTDLw9AIiavq9g92j8OmqPg
         "]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/eHLLzlzR/4DQKYDV8y//Rr+rnsCqrlA/AblnT/3
Fzh7HH8nzQTiP1Cd/nG/TsDSA0Y+DGD1KSvf7y/I9ZisYPZvP4g/K+LtfoGZ
bXskHN+D+AfeRN/bf2Da4Vcd9Y9B/IYJHy7tZ1izlXnz7ysgvsL1xCP7D0h2
yopoHQXzn/Rt2d+QaPjwdO0xe5B9D25stWfQFizzTL8G4i9gPnzU/gLr1/LK
8qcgPoPQrSv2DGnuHzKan4HVh9y7aq8Se+Sa0iIGB5B5Ohof7AUUDzRGSXGA
+A3zMr/b67yJFE+fD+HffvXdfsIe5ntCt7hA/AN6or/sZ9T064ZEcIP4Dpf6
f9lPqTwvqMDFD+a3q/2zn/NGYMthfTD/gZj3P3sAlBeAaw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.9068434162460264`, 
      3.8983224933304665`}, {-1.8974707126617432`, 1.8933323621749878`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "\"prediction\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[1524]=",ExpressionUUID->"df142364-fad6-4ffe-aa65-edeaf9dc2a41"]
}, {2}]],

Cell["\<\
You can have an idea of the error for each data point by plotting the \
residuals: the difference between the expected value and the predicted value.\
\>", "Text",ExpressionUUID->"dbdc6d64-4943-4a30-a32d-4fcf920d839f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"initialerrors", "=", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"network", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"3c9a990b-2332-4ea9-a845-f9392b68726d"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQ/eHLLzlzR/4DG0zD+xg9n9lr+LvuCajmOpBRkp2X
uf2RfYGzx/F30kwH/pRxWBkEnLDXCVh6wMiH4cCfidFc//qO2RfkekxWMPu3
P2PtFOUp2cfsBWa27ZFwfL9/gfWEPYbCm/YfmHb4VUf94/0bFprW5h26sp9h
zVbmzb+v7F93zu4Dp8/1/QckO2VFtI7u33E86qzjgtv7GxINH56uPWZvk7Gv
V0Dy5n4GbcEyz/Rr9itb27cI3by9/wLr1/LK8qf2xf2Hf1m2Pt7PkOb+IaP5
mb3wEbFDl6Kf7FeJPXJNaRGDw4xmpqTvTR/2CygeaIyS4nDgq7O5taTx636d
N5Hi6fM5HI5s/6os4/h5/4Q9zPeEbnE5lEzQa/Wc9WX/jJp+3ZAIbgePgkly
kTO/7p9SeV5QgYvfYZ+4ruEC6+/757wR2HJYn9+hwkxk64Ld3/fDwo8BCmDh
B+PDwg/Gh4UfXB4afjA+LPxgfFj4wfiw8IPLQ8MPxoeFH1w9NPxgXFj4weWh
4QfjwsIP7h5o+MHdDw0/GB8WfjA+LPxgfFj4wfiw8IPxR9MfZekPAA26gD0=

    "], {{{}, {}, {}, 
      {GrayLevel[0.5], Opacity[0.3], LineBox[{26, 6}], LineBox[{27, 7}], 
       LineBox[{28, 8}], LineBox[{29, 9}], LineBox[{30, 10}], 
       LineBox[{31, 11}], LineBox[{32, 12}], LineBox[{33, 13}], 
       LineBox[{34, 14}], LineBox[{35, 15}], LineBox[{36, 16}], 
       LineBox[{37, 17}], LineBox[{38, 18}], LineBox[{39, 19}], 
       LineBox[{40, 20}]}, 
      {GrayLevel[0.5], Opacity[0.3], LineBox[{21, 1}], LineBox[{22, 2}], 
       LineBox[{23, 3}], LineBox[{24, 4}], LineBox[{25, 5}]}}, 
     {GrayLevel[0.5], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
       55, 56, 57, 58, 59, 60}]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.9068434162460264`, 
   3.8983224933304665`}, {-1.4833075593373035`, 0.6964118747798036}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"abf649cc-1de6-41af-9323-e646b04f2da8"]
}, {2}]],

Cell[TextData[{
 "The optimization procedure, typically called ",
 StyleBox["training",
  FontSlant->"Italic"],
 ", is attempting a minimization of the sum of the errors, as defined by the \
error function, or ",
 StyleBox["loss",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"c2d959a6-c6ee-4e74-b018-1a4a6766d3e8"],

Cell[TextData[{
 "You can train a network using the ",
 StyleBox["NetTrain", "Input"],
 " function, the initial step size can be specified using the ",
 StyleBox["LearningRate", "Input"],
 " option"
}], "Item",ExpressionUUID->"be8034bf-33a0-44e0-afae-969e35500166"],

Cell[TextData[{
 "To specify a custom error function for the training, use the ",
 StyleBox["LossFunction", "Code"],
 " option\[LineSeparator]If a loss is not specified one is used automatically \
depending on the network last layer"
}], "Item",ExpressionUUID->"6b11df0e-df57-4875-8c61-bd07db35ff5f"],

Cell[CellGroupData[{

Cell[TextData[{
 "The average squared deviation can be computed using ",
 StyleBox["MeanSquaredLossLayer", "Code"]
}], "Item",ExpressionUUID->"6149c770-583c-4de6-9e47-a181a2c86341"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictor", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", "data", ",", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LearningRate", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<SGD\>\""}], ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Panel\>\"", ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           RowBox[{"Function", "[", 
             DynamicBox[
              FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
             "]"}], 
           GridBox[{{
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1088", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]},
          "IconizedObject"]],
        ListPlot[{$CellContext`initialerrors, 
          Transpose[{
            Part[$CellContext`data, All, 1], Part[$CellContext`data, All, 2] - 
            Slot["Net"][
             Part[$CellContext`data, All, 1]]}]}, Filling -> Axis, 
         PlotRange -> {-2, 2}, PlotStyle -> {Gray, Black}]& ,
        SelectWithContents->True,
        Selectable->False]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866545638457899*^9, 
  3.8665456420075855`*^9}},ExpressionUUID->"d94f1559-3e93-488b-b144-\
94039769e3e5"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain", "invindim3", 
   "\"Data provided to port \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\"}]\\)\\\" should be \
\\!\\(\\*RowBox[{\\\"\\\\\\\"a non-empty list of length-1 \
vectors\\\\\\\"\\\"}]\\), but was \\!\\(\\*RowBox[{\\\"\\\\\\\"a length-20 \
vector of real numbers\\\\\\\"\\\"}]\\).\"", 2, 16, 6, 19443013482437798192, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866545619098381*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"5af7553a-096c-479c-8338-e7ebcd915276"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.866545623321561*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"fead7884-83b1-4d64-99b8-0601d1328dfc"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The final values of the parameters make for a much better prediction using \
the model.\
\>", "Text",ExpressionUUID->"8a1e59b7-8434-4eec-9fd4-c62097981f3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"predictor", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\"\<Weights\>\"", "}"}], ",", 
      RowBox[{"{", "\"\<Biases\>\"", "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"4b5db42a-783d-4fd1-aa52-8f4ebdf12881"],

Cell[BoxData[
 TemplateBox[{
  "NetExtract", "arg1", 
   "\"First argument \\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\) should be a net, \
NetEncoder, or NetDecoder.\"", 2, 17, 7, 19443013482437798192, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.86654565863996*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"2430d388-85c8-42f9-9348-f061152144b7"],

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"$Failed", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"Weights\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"Biases\"\>", "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8665456629864645`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"81cec0f8-dabc-4466-804f-2704bc9de233"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"predictor", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}],
    ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<prediction\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[1047]:=",ExpressionUUID->"bf268d3d-b5da-4251-9fad-3dc5e04b9c2a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA8PT6HjdBD8AoZdR4iTfzvyhPRbxQ
ewrAzEXKyG5d8L9wQ0jH7hsCwEHifbE/Gu2/LFClwDJMAMCBG2m9pAXqv3Bt
SJMgNv6/ptQaN7W9578QmYa8GEHvv3QHkpdccOG/wJbD6oh/47/Y0Jp+f9nj
vwCstQOz+9S/V2cfwHq+4L/AGYkdFCrFv9xjrWr9YeC/gGEx4ct9xj88aL5V
2KLTvwArEXZJZ9Y/qYWH5JD30L/QBfV3eXflP+Yeh/VhMNK/AGZH8GiD5j8m
iC2kUNnSvyRdxNYiogBA4OWggNCylr8QIcCBWhoIQCgfOFyaf74/LOxZF2ef
CEDyIClw/abSP5C8A94S2gpAMr5F65Tr1T+YfI8tVFgLQN4+toXk2dM/lHnP
ESAKD0AKoUs7nKvbP5zsELTDLw9AIiavq9g92j8OmqPg
         "]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/eHLLzlzR/4DQGbCZIvP+zX8XfcEVHOB+Ao/nD7u
L3D2OP5OmgnEb9Bc9nq/TsDSA0Y+DGD1OZqv9hfkekxWMPu3H8h3eKb3cr/A
zLY9Eo7vQfwDZkaP9x+YdvhVR/1jEJ+h+sSD/QxrtjJv/n0FxFcound3/wHJ
TlkRraMg/oJXu2/vb0g0fHi69pg9yLwvDtf3M2gLlnmmXwPxFVZ+u7L/AuvX
8sryp2D5Z/sv7GdIc/+Q0fwMxG94EXhhv0rskWtKixgcQPYtYJ5jL6B4oDFK
igPEd0jiOGOv8yZSPH0+hB+696z9hD3M94RucYH4CXvbL9nPqOnXDYngBvEX
8IVftp9SeV5QgYsfzJfOuGk/543AlsP6YP6Dl0tv2gMAO9iATQ==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.9068434162460264`, 
      3.8983224933304665`}, {-1.2013124227523804`, 0.43234926024025866`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "\"prediction\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[1047]=",ExpressionUUID->"33f7a4e8-69de-44e2-bd47-55aac9e04b62"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3b89d28b-e207-430b-b311-dffc86c8eba4"],

Cell[CellGroupData[{

Cell["Interlude: Layer Properties", "Section",ExpressionUUID->"b9e9586e-38f3-464b-8cac-20fb23d66204"],

Cell[CellGroupData[{

Cell["Embedded Gradients", "Subsection",ExpressionUUID->"c3c73acc-a408-4478-96d0-cc857bfc7c13"],

Cell["\<\
In order to be trainable, network operations must be defined together with \
their derivative.\
\>", "Text",ExpressionUUID->"954c5940-f0e0-48cd-9e30-554c422edc7f"],

Cell[CellGroupData[{

Cell[TextData[{
 "You can access the derivative of a layer using ",
 StyleBox["NetPortGradient", "Input"],
 " in the second argument"
}], "Item",ExpressionUUID->"642f39ff-4ebc-4af2-97a9-cee767db5d71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"NetPortGradient", "[", "\"\<Input\>\"", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[199]:=",ExpressionUUID->"e247060f-a2e1-4828-86f4-528a7158a109"],

Cell[BoxData[
 RowBox[{"{", "0.4856787323951721`", "}"}]], "Output",
 CellLabel->
  "Out[199]=",ExpressionUUID->"52f5b17b-f9f7-4b5d-903e-e1c9b02f5a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    SuperscriptBox["x", "2"], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.86654536140559*^9, 3.866545365051871*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9ab84631-fe7f-48fe-bbd6-543d9b5ea242"],

Cell[BoxData[
 RowBox[{"2", " ", "x", " ", 
  RowBox[{"Cos", "[", 
   SuperscriptBox["x", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.866545365532285*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"03bc8b8c-5ce3-487f-bf66-761b19bb775b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "y", "]"}], ",", "y"}], "]"}], 
  RowBox[{"D", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8665453775011477`*^9, 3.8665454324028263`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1014d456-31ef-406a-89a9-1737536cb6c3"],

Cell[BoxData[
 RowBox[{"2", " ", "x", " ", 
  RowBox[{"Cos", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{{3.8665453929299774`*^9, 3.866545432906002*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"25c33f24-223c-4575-bf9c-ebff2dae98f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], ",", "y"}], "]"}], 
   RowBox[{"D", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", "x"}], "]"}]}], "/.", 
  RowBox[{"y", "->", 
   SuperscriptBox["x", "2"]}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"6fbf59ea-0e6e-4130-b65b-db3e520f5af5"],

Cell[BoxData[
 RowBox[{"2", " ", "x", " ", 
  RowBox[{"Cos", "[", 
   SuperscriptBox["x", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.866545439796199*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3bda7277-5e38-4080-9b94-b67121cd25d1"]
}, Open  ]]
}, Open  ]],

Cell["\<\
During the training, the optimizer computes the derivative respect to each \
parameter.\
\>", "Text",ExpressionUUID->"b6fc43ac-5abd-40a6-99dc-b8284d549473"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"NetPortGradient", "[", "\"\<Weights\>\"", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[200]:=",ExpressionUUID->"62a52a63-23f7-47e1-9979-962ab6cd07de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.5`", "}"}], "}"}]], "Output",
 CellLabel->
  "Out[200]=",ExpressionUUID->"28ba0216-a48c-4a8d-905d-eb0f9d96a8cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"NetPortGradient", "[", "\"\<Biases\>\"", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[201]:=",ExpressionUUID->"fd1d0834-abfd-4ec8-8cfb-e13a44e09851"],

Cell[BoxData[
 RowBox[{"{", "1.`", "}"}]], "Output",
 CellLabel->
  "Out[201]=",ExpressionUUID->"db4b972f-df1d-4c71-8489-b7b0b3af6d34"]
}, Open  ]],

Cell[TextData[{
 "The derivative values are accumulated when the model is evaluated on \
multiple inputs (the ",
 StyleBox["mini-batch",
  FontSlant->"Italic"],
 ")."
}], "Text",ExpressionUUID->"7ffcc0b4-c1a4-423e-adee-32bdd53ff933"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", ".5", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", ".3"}], "}"}], ",", 
     RowBox[{"{", ".1", "}"}]}], "}"}], ",", 
   RowBox[{"NetPortGradient", "[", "\"\<Weights\>\"", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[203]:=",ExpressionUUID->"aba2a4d4-1ab1-4486-950b-70057310ff04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.29999998211860657`", "}"}], "}"}]], "Output",
 CellLabel->
  "Out[203]=",ExpressionUUID->"f3157d8d-adda-486c-8f36-fd91cc03c584"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2ffaa2eb-ce0d-43c7-85ed-543b104e87e4"],

Cell[CellGroupData[{

Cell["Interlude: Layer Properties", "Section",ExpressionUUID->"8dabacc9-9a6d-401d-996f-317b3248060a"],

Cell[CellGroupData[{

Cell["Evaluation Device", "Subsection",ExpressionUUID->"3cda8dd3-322d-4b8c-9282-4feb756ffde4"],

Cell["\<\
All the layer operations are defined both on CPU and GPU.\[LineSeparator]GPU \
evaluation is typically much faster on large networks.\
\>", "Text",ExpressionUUID->"df5b00e7-e3a6-43c3-96ca-aabeefa57b09"],

Cell[CellGroupData[{

Cell[TextData[{
 "The device used for evaluation and training can  be selected using the ",
 StyleBox["TargetDevice", "Code"],
 " option"
}], "Item",ExpressionUUID->"0862386e-7f59-4730-99a7-f8d7470b37ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"TargetDevice", "->", "\"\<CPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[204]:=",ExpressionUUID->"33494580-1608-4b21-a587-89006192f571"],

Cell[BoxData[
 RowBox[{"{", "0.24283936619758606`", "}"}]], "Output",
 CellLabel->
  "Out[204]=",ExpressionUUID->"723fb0e7-5da7-4498-ac6a-753854e86ad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[1057]:=",ExpressionUUID->"06574a45-9b79-4127-a216-42fbca2a4208"],

Cell[BoxData[
 RowBox[{"{", "0.24283936619758606`", "}"}]], "Output",
 CellLabel->
  "Out[204]=",ExpressionUUID->"fe47aa4e-bee7-466b-a565-ed877d4123d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NB: GPU evaluation is not supported on every platform", "Item",ExpressionUUID->"816e1dd7-e9f2-49f2-9478-03a577fecbae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "[", 
  RowBox[{".5", ",", 
   RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[1533]:=",ExpressionUUID->"beaba41d-0f70-4f80-a901-5a60ff0dd06d"],

Cell[BoxData[
 TemplateBox[{
  "LinearLayer", "trgdevmac", 
   "\"TargetDevice -> \\\"GPU\\\" is not supported on Mac OS platforms.\"", 2,
    1533, 141, 34307786172039602764, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[1533]:=",ExpressionUUID->"5a3ebefd-e1f0-4fda-9bc5-351d29346394"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "Out[1533]=",ExpressionUUID->"75ed6f2e-b7f9-4dee-b6b4-0ff69a984888"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1b3c3cd6-32d2-4504-9b9b-bd805ac7b3db"],

Cell[CellGroupData[{

Cell["Interlude: Layer Properties", "Section",ExpressionUUID->"c21f026f-6807-4d88-848f-e79c458744ad"],

Cell[CellGroupData[{

Cell["General Information", "Subsection",ExpressionUUID->"83da5d5d-3e76-4e2b-9687-e93eaa3d3ae1"],

Cell[CellGroupData[{

Cell[TextData[{
 "The function ",
 StyleBox["Information", "Input"],
 " gives a summary of a layer properties"
}], "Item",ExpressionUUID->"ac2649a4-47be-4872-abe5-39585588e63c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "network", "]"}]], "Input",
 CellLabel->
  "In[206]:=",ExpressionUUID->"798a3cbb-88ed-4804-9f20-6fafc5e4673b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox["\<\" Net Information\"\>", "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Layers Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"LayersCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "LayersCount", "Tooltip"]& ], "1"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Arrays Count\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysCount", "Tooltip"]& ], "2"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Shared Arrays Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"SharedArraysCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SharedArraysCount", "Tooltip"]& ], "0"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Input Port Names\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"InputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "InputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"Input\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Output Port Names\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"OutputPortNames\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "OutputPortNames", "Tooltip"]& ], 
                 RowBox[{"{", "\<\"Output\"\>", "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Element Count\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalElementCount\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalElementCount", "Tooltip"]& ], "2"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Arrays Total Size\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ArraysTotalSize\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ArraysTotalSize", "Tooltip"]& ], 
                 TemplateBox[{"8", "\"B\"", "bytes", "\"Bytes\""},
                  "Quantity"]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "LayersCount" -> 1, "ArraysCount" -> 2, "SharedArraysCount" -> 0, 
    "InputPortNames" -> {"Input"}, "OutputPortNames" -> {"Output"}, 
    "ArraysTotalElementCount" -> 2, "ArraysTotalSize" -> Quantity[8, "Bytes"],
     "ObjectType" -> "NetInformation"|>, True]]], "Output",
 CellLabel->
  "Out[206]=",ExpressionUUID->"9f029bf3-2386-4f9c-bc62-73a638894877"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["It can also be used to access individual properties", "Item",ExpressionUUID->"93327428-2e6b-43d1-a5a2-a732d72c982a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"network", ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellLabel->
  "In[207]:=",ExpressionUUID->"361582cb-9aee-41cc-9e8e-b9ab29acbf9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Arrays\"\>", ",", "\<\"ArraysByteCounts\"\>", 
   ",", "\<\"ArraysCount\"\>", ",", "\<\"ArraysDimensions\"\>", 
   ",", "\<\"ArraysElementCounts\"\>", 
   ",", "\<\"ArraysLearningRateMultipliers\"\>", ",", "\<\"ArraysList\"\>", 
   ",", "\<\"ArraysPositionList\"\>", ",", "\<\"ArraysSizes\"\>", 
   ",", "\<\"ArraysTotalByteCount\"\>", 
   ",", "\<\"ArraysTotalElementCount\"\>", ",", "\<\"ArraysTotalSize\"\>", 
   ",", "\<\"FullSummaryGraphic\"\>", ",", "\<\"InputForm\"\>", 
   ",", "\<\"InputPortNames\"\>", ",", "\<\"InputPorts\"\>", 
   ",", "\<\"Layers\"\>", ",", "\<\"LayersCount\"\>", 
   ",", "\<\"LayersGraph\"\>", ",", "\<\"LayersList\"\>", 
   ",", "\<\"LayerTypeCounts\"\>", ",", "\<\"MXNetNodeGraph\"\>", 
   ",", "\<\"MXNetNodeGraphPlot\"\>", ",", "\<\"OutputPortNames\"\>", 
   ",", "\<\"OutputPorts\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"RecurrentStatesCount\"\>", 
   ",", "\<\"RecurrentStatesPositionList\"\>", 
   ",", "\<\"SharedArraysCount\"\>", ",", "\<\"SummaryGraphic\"\>", 
   ",", "\<\"TopologyHash\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[207]=",ExpressionUUID->"1fe6be1e-4b0e-4ff9-9bff-23462d182aa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"network", ",", "\"\<ArraysDimensions\>\""}], "]"}]], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"bb409282-e324-48b4-912a-37288cb29330"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\<\"Biases\"\>", "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "\<\"Weights\"\>", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[208]=",ExpressionUUID->"003a8488-7de6-4ef2-8323-3e7244c56edb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NetExtract[\[Ellipsis], All]", "Input"],
 StyleBox[" ", "Text"],
 "can also be use to extract all the layers parameters"
}], "Item",ExpressionUUID->"4172dd88-2ff9-463c-860d-de475ce4cbe4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"network", ",", "All"}], "]"}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"7712f88a-6d74-4d65-bb49-63e4f647b30a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Biases\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"0.`"}, "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real32",{0.}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"OutputDimensions\"\>", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{"\<\"Weights\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"0.4856787323951721`"}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real32",{{0.4856787323951721}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[209]=",ExpressionUUID->"19bcddea-85bb-405f-b995-9a0a30493e45"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d8155c68-39e6-4f47-b96e-d0ddd90ea299"],

Cell[CellGroupData[{

Cell["Classification: two-classes", "Section",ExpressionUUID->"4a45febd-01ab-4cd3-aef1-49a164bdd922"],

Cell["\<\
A very common machine learning task is data classification. Here we have two \
clusters of point and the task is to learn to assign the data coming from \
each cluster to a different class.\
\>", "Text",ExpressionUUID->"19b5ce26-372b-4a3d-92bd-200fbac5e3f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], "+", "#"}], "&"}], "/@", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "3"}]}], "}"}], "+", "#"}], "&"}], "/@", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellLabel->
  "In[214]:=",ExpressionUUID->"234ddf41-e684-4010-b866-fd7d969d2b85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.4916644970555555`", ",", "1.9293981418977926`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.40610351690262436`", ",", "3.536593872440916`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.678019287754793`", ",", "0.6831694154040358`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9054350638709048`", ",", "2.14294790650831`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.104165555903694`", ",", "0.32689065966865605`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.0357514281233033`", ",", "2.1701861605476003`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.934682193087827`", ",", "1.1731357737770503`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.9090370159707948`", ",", "3.033408636838181`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.6364713394457073`", ",", "2.1885909018083654`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8638577195632682`", ",", "1.9160501684351274`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.4419693631688464`"}], ",", 
       RowBox[{"-", "5.161281575613664`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.9900204355472426`"}], ",", 
       RowBox[{"-", "3.851031723323927`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.9076369321769087`"}], ",", 
       RowBox[{"-", "4.000522608911792`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5102420069249742`"}], ",", 
       RowBox[{"-", "2.617444415293623`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.4515583935388023`"}], ",", 
       RowBox[{"-", "1.8594831620512757`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.852832119865962`"}], ",", 
       RowBox[{"-", "2.3139618602992584`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.7199841021014144`"}], ",", 
       RowBox[{"-", "4.211464259635379`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.580065886655899`"}], ",", 
       RowBox[{"-", "4.206549698874433`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.443104522675481`"}], ",", 
       RowBox[{"-", "2.9726223387333537`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.4142782955862376`"}], ",", 
       RowBox[{"-", "2.1727129565084313`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[215]=",ExpressionUUID->"7207029d-dab3-47ac-9699-f674b345f207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"d5ff130f-886b-4c77-8a04-361fdfdf1422"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.4916644970555555`, 1.9293981418977926`}, {
      0.40610351690262436`, 3.536593872440916}, {4.678019287754793, 
      0.6831694154040358}, {0.9054350638709048, 2.14294790650831}, {
      2.104165555903694, 0.32689065966865605`}, {2.0357514281233033`, 
      2.1701861605476003`}, {2.934682193087827, 1.1731357737770503`}, {
      1.9090370159707948`, 3.033408636838181}, {1.6364713394457073`, 
      2.1885909018083654`}, {1.8638577195632682`, 1.9160501684351274`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-2.4419693631688464`, -5.161281575613664}, \
{-2.9900204355472426`, -3.851031723323927}, {-3.9076369321769087`, \
-4.000522608911792}, {-2.5102420069249742`, -2.617444415293623}, \
{-3.4515583935388023`, -1.8594831620512757`}, {-2.852832119865962, \
-2.3139618602992584`}, {-1.7199841021014144`, -4.211464259635379}, \
{-3.580065886655899, -4.206549698874433}, {-2.443104522675481, \
-2.9726223387333537`}, {-3.4142782955862376`, -2.1727129565084313`}}]}}, {{}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.9076369321769087`, 4.678019287754793}, {-5.161281575613664, 
   3.536593872440916}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"d3b123a9-cab2-47f0-8a80-08154ad19a36"]
}, {2}]],

Cell["\<\
In this case the classifier will take a two-dimensional input.\
\>", "Text",ExpressionUUID->"5be5c8b7-94c4-43bb-b176-eeb12aa8d853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
        RowBox[{"data", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"data", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"LogisticSigmoid", "[", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"GrayLevel", "[", 
       RowBox[{".5", ",", ".5"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"38c72a25-5dac-47b9-856a-28de2ac616cd"],

Cell[BoxData[
 Graphics3DBox[{{{{
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{1.4916644970555555`, 1.9293981418977926`, 0.}, {
        0.40610351690262436`, 3.536593872440916, 0.}, {4.678019287754793, 
        0.6831694154040358, 0.}, {0.9054350638709048, 2.14294790650831, 0.}, {
        2.104165555903694, 0.32689065966865605`, 0.}, {2.0357514281233033`, 
        2.1701861605476003`, 0.}, {2.934682193087827, 1.1731357737770503`, 
        0.}, {1.9090370159707948`, 3.033408636838181, 0.}, {
        1.6364713394457073`, 2.1885909018083654`, 0.}, {1.8638577195632682`, 
        1.9160501684351274`, 0.}}]}, 
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{-2.4419693631688464`, -5.161281575613664, 
        1.}, {-2.9900204355472426`, -3.851031723323927, 
        1.}, {-3.9076369321769087`, -4.000522608911792, 
        1.}, {-2.5102420069249742`, -2.617444415293623, 
        1.}, {-3.4515583935388023`, -1.8594831620512757`, 
        1.}, {-2.852832119865962, -2.3139618602992584`, 
        1.}, {-1.7199841021014144`, -4.211464259635379, 
        1.}, {-3.580065886655899, -4.206549698874433, 
        1.}, {-2.443104522675481, -2.9726223387333537`, 
        1.}, {-3.4142782955862376`, -2.1727129565084313`, 
        1.}}]}}, {}, {}}, {}}, {GraphicsComplex3DBox[CompressedData["
1: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
uBunPhn/qbZFfq3X+YaO406fwi3KNHf7KsePii71Qv+Nx9QsaR32vNB/2zC3
SJnosFy+iKM3tn133/aZrerLs8IG5vYdHF++T4sk22eN3u6nzfLm8dVZ8mjw
G7G2z55e9/awgXl8LT74dufTP22fsx67Py1zKI+vzPztUZm32z4j/0ffNUXG
f7rks9CDA+z+m7xv36VhJcIvNrT7b4x/REJUno6jb6nP7DL+ITtKbIrKHac+
a8r4tx2I3F+t9HX1yfgnSr3EPMD4d8S2KJQwQ/tyvqwr8yU0C83iS7m/O6nM
Q9tz8Nv5O5ZpntW3pfm2se/fe6EvJI/1+xxftCvB9lxiYIGq0WHZfL5PLs96
dMH2PCZzwYVhA7P7Xo2//fnw/bbnc4sKZg0tk8PXa3Hy0EuLbc91ahcKGRid
wzdj+um2efranmdL//C80efMIuOPeftWvU6pdv+tt4y/096XE54l2P03xl/g
2si1ERVvqueSMv6Zb/Y5/trNq+p5rIw/ytH3cFuMP+Tg/CpnCkWrZ8bfbNKK
yAXv2H3O4unfo4y+1fvGNc151/Y8Ov37ksm3rcWov6vE25796youX/OaB70H
z5jrGi5f2uSW1RN+tT2HNgx8OzoswLd8ReUy/5lue04+F7gmbGBm397SF6d/
VN/2/P6wvPlDy7zkuzC1TInhx+z+2zrpH7qNPmcxGf/bC4Yd/Lmr3X8bJeP/
T+DJleGNb6hnxj9gXc4LxTbFqufaMv6Mcp2O5x9k/FXWX2+8b8UZ9cz4Q893
CJsVclw9M/4ic6td6T7lgHrum/65P4isUONV99IbtufS6Z9vWuRfTzcc++GE
7Tk6/XN8FHmsxObbPb1m3/5x5OU1/f4ODbE98/hw59Xdy/PZnnOkf0+fRV74
IHlF8gS7z9kr/fuYwZc8q+uKHdtvG+s1GX0XjT5nHxl/13eqLN3a3e6/lZTx
Nyu67Wa+kCvqmfFPkOtKPM+V8V//rkYX7xun1HNrGX9Y/8Kd3O3+VM85ZfzL
78z+IEOLfeq5p4w/d5HVJasE71DPZdLHExfZ+VBocrejtuf56X83IfLnX3Ov
PbvK9ux//aTIkptWTh3QzVyPS4ms3u5W6q04u//m/17cibxYOKL8gGp2n5PH
E33Dx3UvZ/c5U9LPk3uRk6oHRhzbfUs9r5f+YTGjz1lKxl/2u4/uZnvrsrE+
khCZQa6D8Mz4Fw2dELJw5wmjn5wS2bj4xKZpvj/seUPG/1rLBxFL8u5Rz3Vk
/Hl7BDTNHveLek6W8c+54z42tcZa9XwsffxhkWPbDe794U+254h0fiCy27aY
Ov/tZ+J5f/p4jkf2S0wpX8tn9982pR9/KvLi5a823rhs99/mpb/f85Hb38nT
Keu8BKNvfzmyfLf+4X+cjbfnZ3lMuzJ0U+M5N431keuRGY0+5w4Z/wSp2/Hs
lfG3a39kxrSmx9XzPhn/X8fial6r/Jt63ibj79QmvO24rZHqeYmMP+/angOv
D9imnvfJ+LNN/aLky/NWq+fazH8J/c5n6jxfPVeV8VL/4Hmn/3U81D94nun/
ux7qHzyv9o/TQ/2D5wj/+/JQ/zj7bwc81D/4nev35mkgfTlnn9Mbkcnoc/JY
NKRmk7jVR4zrjsueHpNalz4+b596niXj75193Bu7PDvV8zIZf/4U3w97kr3q
+RcZ/6gilwdvfLxCPS+Q8VeZHeeqGz5HPS+T8S9eGh97vdJ09Xzbf557qIvw
XF3GS12E55H+75GHush5fZfiGSx1EZ6z+r+nnq1SFzmvoxM81EV4LuafBzwR
Uhc5+xXXPZmMPmeijD+l1s7cuwKi1DOPg6KCsj8+HKaeGX+5oe+E1I/bYPSF
UjxJG96NsnosU88BMv7Atz+tNCjvbPU8S8b/XvvAiB+nT1XPxWX841v/FJbl
2Aj13MM/b1vURXj2+3nmoS7CM+OlLsKzv+567KEuwvNZ/++Oxyd1EZ7940nz
UBfp76D/d83zrtRFeF4r/cPZRp9Tfnes0SNyXHur01b1m03GXy7TI9+95J/V
M4+RE/q9umbGIqNf8dhzJza+9aqB36vn0zL++znenB10Y5J6Libjzzl3wtpC
tT9Xz71l/K+ePnz+Trd+6rmFvw6xqIvwnOSvW6xfpS7SvpC/zrH6S12EZ+c6
Q4x69l8fuazKUhfhWeoui7oIz/7rtYzWy1IXOa9TMlq5jT6n1FFW+dBw96YH
y9Wz1F3Wip/r7Tvadp7dF5Lxryx0+m7Y99+qZx4XR3UdkBo0UT2fkvHPjQ5e
+NrCYep5pIy/4PvbplQ8Hqyepc60pm37PNOQG9qX89X219UWdRGe/edhDou6
CM9y3WFRFxnXKdZVqYt0/VrGu1XqIjzLdYS1ROoiPMt1h5VL6iKjfraKG31O
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
+Y15Ff6lzG/Mq3DmN+ZV3Zcs8xv7XuDsf1ks8yqcfDs5bHgLyWOTG9b9NJIf
Zl6Fk3dlXtX3JflM5k/mD/brSZ9BOfvLpC+hvLDMV8yfcPbvMH/C58p8tVLm
Tzi5/RIyf8LHSc6c+RNOLpr8rva1JMcrfR7lDyV3Kn0h5eUlJ0kOj/qNeow6
Sffd/t50YbsX9tXCh3aY/86DF+4HCM+892Rq6Av3/YO/1qRn6phEez8XPOlx
k2p/Xkoyc5K+inkSCy/cb+9PNHNxug4kvNXE5ht7T7P3z2reMG73k/If2/tn
4QGh6/M+HGjfBw8+oMGxFa4Z9v3u9H0d/254+5+vmnlF7SfgR/Nmi0flLPvC
Plndh3FqfrNFt20/8AcfttiX7aLtBz7om16lcu6x/cDj/npv/YFZth8z54YH
+J0CZzYPbmrve4Vb+VaVi+l0Uz3A+wW95Br+5VX1AGdfIR7gaV2u5G+zxa5T
9X5Fq1p1CDqfZObAfb9kPVthzO4X7mPGPraoLfP+W0/qfczwOviV0LVV7PcL
Hy3rd7pfTPgf4WNn/dDF3mcKZ/x6/zFy1l+kphV4dMq+/5jwjg93D045ccTY
d+/yVd1caOqGL837Vbp8ZQtOKF+ulHlfyuf1eXDjY4vG2vtANd9l3L/ReT+n
GGO/vMs3YFbApTNBp3X88Je29Q8eP/uokY91+VLDW/1SqJmdA+d99EpaNb1N
sL2PEn419uvLcS3sfZTwgsZ9I+HbjH2OcM+aJVb9K3t0PHCvN2veHeXs/Lnm
bS61edCtt72vUO/XaNx/Eh5o7O+DP4jvW+mXkT/r6/B3lknu5X/1uziP4cwn
en4IvyXzCX7hmWU+0f3vwvvLfML49HiZTxgfnPOT8et9Ro37a8FbT/AWn/DZ
Hv2+w8/HrEn1zvtFzyt4wNq1j0qXW6OfI9x1//uIIxUXqGe9/2LjHK+3e14f
6rqLcM+tf6alVhur3sw+GN7gzD/O/TipHuYfvMGZf/AGx4/mkIQ/lPkHb3qf
SOP+Y/D92ZYFH1y31thfk+rpWe9J0lvRP9n3ARB+M2Lmifnff6t+4D/+Vrdl
Uto49QMvPW1i576FB+v75e8flnmJ9+u8L1qMsV/j+ecp85Je5wjvJPMS7xe+
zrivGrxszfyjLradqe8LfvevXdPvdZ9g7LN44sk8+fTZYo8G6/vSfedn/rMo
56QexuflspiXnJ+Xy8oq85Lz83JZd2Vecn5ez8dr3P8NHjf+9Q4nLwwx/Lus
lCMV+oT37Gn4d1kRd0e2L3yutY6H13tH5iXGA2deYjzwpsZ95+A3s+7NfuOX
Nvp34Y/qLF+QuUSQ8Xm5LXNegm8y7l8HLz1rTVSxNrXM+scKMe5rp/Wa1Gl8
P+HMY5oTMvpg2tcjpy11nd6/lN9ZqWf0fqHCbznqq1TlfN+d+zJcWh8674fj
0rrIeT8cl9YPzvvSuLR+c96XxqX1jPO+NC4f3zvGw/lLXcp44NRjjEfXcaRu
4XXh1AOME878zzjhzvrqiXG/xhj9/sL5ful+PTmvk6V+Zvxw6kbGD6e+Yvxw
6hbtAwrvLXUC7wvO7xfvS/PDjvrqif27J/OY8z4VqZFZZH7g+wN/x1k/aJ+K
6wLeL5x6WPdFUC9L3cj7hVOP8X7h16T+YRxw6hPdbyg8o+PzSlXO7xEe4Mzb
eIDfk/kQD3DmJef9DWK1zjH7YOa+e+aPf7+/qPd/3F/0Of/X+4t6I+7/6/1F
vREF//X+ot6IOf96f1FvBPWY8z6iz+fdf72PqDfC/B2Hr//X+4g+vx761/uI
eiPM+RxuzsNwc75lXMyrjB9OPcbxjJd5Ev9w5kleB+6s31KV75O6xTkel8V8
6KzHXFYDmQ+d9ZjLYj50jv/560h96Nx377Koi5x1lMuirmA8+OY6mvHAmfcY
D5zvEeebvo7Me5xvev9due5g/JrvkjqW8evvtaN+e6Kc+of3A6fecH6Obot5
z/k5ui3uF+Hc7/+8jpZ5z1kHui2u15x1oNviusl5Prit9VKHO88Ht0X96dyn
/3ycUr8560C3dUfqJWcd6NZ6xuj/WFzXG/0f6yOZx4z+j8X1ptH/sTbLPGb0
f6w0mceM+6RZXF8YfR6rlNTVRp/HOit1qdHnsXZKHWj0eazHUqcZfR7rVam7
tP8lnD7P/wG57WBi
     "], {{
       {GrayLevel[0.5], Opacity[0.5], EdgeForm[None], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
q1puWereWbX9h6l7XtWEX6XWHtUzLs5yrvLdktS9uerMFal1A/Voa1Lrk+o3
v0ytZ6qeXJ5ac1D/+EWWF5S716bWMNXPbk2tSc6Bt6TWLWfD38H14ZnwN6m1
0+lww+C1oTWivac9WDBxr6m9MAJeBdfMuXb9NrX+OQPekLo+VP7anFo7naXa
JrUeOw3enlqTfAPelOUL5bJtqfXV17UvU2sX6o9WptY01DftSK2pvhlcd+tb
vKp1G1wnn8m36BK8T8+Grw3uO6SRzIzWsFSrdw3WFs6Jrn+1JucyT4/gnqUO
4x2C+xT1Md1Vf8DnMn5jcJ9ynmJCcO9zvvZ6cO9TO7qP25xzTfdOap1E/YX6
E/Up6imKBetXyh27U+uu8xg7JstNb+N/ZbwZ/BZcALsFfkd7KLWWoh7kr9T6
7Vz4z9R5U/n3ANYJXsh4GqznLMLvT60/L4D3pdal58NJlsuUc4vlXStrv5QN
1tPe1RqO7g1Uh7wdXTOpZuud7Rft2TuDNcmf8Hfpd+Cf8Y9H99ofKaZG9+BL
NXdwT/qLclEWz7V/50RrcJsZmxgdy77Qt42OR18p7kbriZ/CjYL1vc/1nqP7
VdW0V2VrQPG8VbC+9zX+hSxWfqlvG60PanxKtD74DXx/tL6v9/9SdExcozmi
Nc118ODgmlyxYnK0jrmesUuCtUfNPyRaZ9f7vyjLL9pfjYP1WD1LE+zZnOd/
JFrjej9YH1ccm8HPL2d91AbGmwVrs7qHNsFa5bf4ttgr8Hf41sGanp7l9OA4
r/c/KVp7XQu3CNZ1NeeDwZrDNnzzYH1YzzI4+ixBa+aj6LpTtWWt4Pyi71g9
ixuqPe6M1j0VT3pHa6Pa+9OitePv4T7RGqXiz93R5zGKS9OjdecftLeiNWs9
S9/osxzFk7uitU7FnP7R5zqKG/dGn/0otsyO1jQ3wRcE68wr8XWD4/kKxZDo
sx/FxqnRerHe4YxoffxHuF6wdq01dl/0OZPiz4PRZzzaXxOi86jW3vjovPgZ
XD9Y016FPzM4Ly/DVwvOm0vwVYJz5WL8ycE59AOtkWgtTtefHZx/P8afGpyj
P8SPjc67mv/ZaH1cz3hucO7+ROsrWhPX846J1vo0XhsbzjXLtW+i9UbNPzT6
vErx5+loLU7XNAjWafVc70f3tOpfKgbr+VqrFwb3+Kv1fNFnZootFwfr7dq/
o6N1Nt1/gbzPgZTfj8n7jEf1TJL3eZJirERvnSEp9qpf1j6owFia9/mT4u3+
aL1YddqR6HMmxfaj8z5PUt11VN7nRsrd6qPVz6mXfydaY1KvelvwuclWrZdo
HVjf5Z9oLUb13q3B5y9b8Muj9RT1RB9Hay7qv2LeZ2DKIyHvcyzliIJ5n3Wp
hjkQrXmpbjwYraMpfy2N1lbUo5XOu0dVrXts3jWc6pzF0bqPesZSefelqmmL
5q0vqKYqmXefrFp0SbQ2pF6ySN79sGqwUdEauNbhu9F6nzSBE/PWDlRz/h19
lqaa83C0Rq/c+m+03qf6p3ze+otq10J56zuqzcrk3W+rxi6cd+2oGrVc3v28
6u2yeffwqodHRmvsWv+zos9jNgbrG1tz1iM6B58xaW+OiNb/pYMtitb+pBUs
iD4bUxwbF12Pak1+EK1zqQfvFnxmpPhwTfAZmWJOx+AaQHlfGqzWidaLcrly
unSkZdE6l3rq16PPqLQeRgTrBupHOgWfWynW3YC9lXMuuz74XEzPNTD6LFl5
f1702Z7y4NzoMy3lzQHR59DK78Oiz49VAwyPPu9QXn4r+rxNOfe64PpZNU/T
4HM6xfk3os8CtbavCK5tVNP+HyMu6Uw=
             "]], Polygon3DBox[CompressedData["
1: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
YpalZ9O7yWFmXXq2O/r3azan57uxH39/n57sql4P+P4dj6t7Pe/7v6FGD5nZ
WK9vrNFr/kZ/qx7uyl5fmF19xOfnpD+A4x5cH5dze3p/G/+8P21557JrRE6R
o5tkRLv37/+mfn75vuXoi/v67XyVky/q9YpcLf/d2Y+HfK/nusZa08SL6WkH
9/NJflyH6yOAxwHf0T/jAiXP4LMf3sWv7wweTW4Hr6tXkCpqMqMze31k9mdm
dFavjzbq9dbZvR6Se+X4C3s9JvebKZ3U62P1mXrt5F6/yO16eLMsMxG9vZnA
ib0+NCu4uUZPW+Ot9ZKd2ZsZgLXKGmJWZ6ZgbdlczgNPBX7Ud1ujDcyg1Ivn
0I6gfwLnFuLaiTVeRk8j35xW866G7fn69BqvMKDns1Nr/E7X8/HJNf6q6fn6
pBo/9ncT/jylxo+1PT9fUaMHzZj0R47J8E0yYsdqlS61zRo3Eb9thS556SN6
FvCKXfLYR8HjD5M1PUnJmnatn1Gjz0bp+Xz5LmvbNT4O998MvqXEM23ru+2S
D99fki9eVTOfzbD0z85Z58oEbebybTVz2cxOv3BtjT8xM1SvXwdeoEnGqR95
uc1Y/AXe0bla42/M5PQn5uPm4tYMa8fVNfreDE+9fwt4+SaZoP5HDzmE/htN
vKWe76EST6gXlNNGLMn4Hus5cKYSDpQbb+31+bIl/ub2mnzAzFI/dkcNd5k5
6tcGq0macJrcdn2NPzITVj+3/fuYrs3aubNm7ehx1f8rd9kfeBw84TDJxO8p
ydjNyh1Dx9LM+piaTEk/qN7XH5mpma3pD80O9U/6ATWcWs6M0LzA/ED/aEZn
VmfNmaQmA9uqX99T12RCZkNy1Jw1mZvZmxp3yhp/aD5jTbG2qJmXLNHMamk1
+cI936vVn+35X478tdeoS5TURLWrmn0Z8CqukRpNvnSJR1CrmzEtVeIRzJ7U
g46NY6SXMrM0u1RzT16TaZptqskG1WRgZmFq5ulr9gzOKMnE3EvQYyxYUhP1
HmZkR5b4X7MzNfu/SjyJWv71kj0hNYhaxIzTvOugJn55XMbr4ZI1eVRNxmnW
qYaftiYf85x98y33PC4vyXjdCzGjNKvUI8xek/mZ/ek5Zq3J/Mz+9Agz12R+
Zn96iBlrMjeztwPB09R4LPcLFm3ivfQQ65V4Er2Fa27GkjXtWpRD5BI55Oga
TzZ3iabSq43bZm47x80CvuSeT+h/Svu6Rk+e0+bcV+ATfAdN9rC+qalB1qKP
aV/U+Gv9vfmBftoM2PxBv6/fvonrHzbZg/u8RiOtUZJBqp2ua+NvhvTf7xpy
LcmRx9X4oQf79S8fyHFynfpFfySHyqX6o+NrMvh7S/bAzOblPLlPjnSvZQLw
YyVr9tiajP++Eo40+9cDrFniMfUGarzVSjya2k9NuHqJ51Qr6vnM7vUEekE9
nXtFmzXxenpAs3s1ld5Qz7BiiQfWSzjGrltzdcdej7xQiQbUO5uRm5WrSSeq
8axm+3oSvawe1PzSPFZvasZv1q9GHa/G865Q4sH1wmq6lUo8tlpPTyM3ypF6
HT3vWiV+TS+sJ9a/bdzEK+up5yrR4N/0Gsg8eOsm2sj8c51eX6g3VurCfb5z
373j7Z7oe/14nVnjLwaW+IenarhPDjQbebrGf5qJmY09WcOdcqjZ2gs12ZQZ
ln71mZpsxczF7OX5mrnpHFU/D6nJqsy09LuP1PhdM2mz6YdruFGONMu2plvb
1QB6sWW6cLtzzLl2ZU3e4x6T+bdz6h3w5W0/12r8shmyWfLjNf7dDNksWY2h
1lBD6AUfrMlnzMTNxh+t8edm6GbpS3fxetYYa40aR65Yq432ebYmzzFjMmsa
ra9X8/Za0IxXf6gH0guZ8UxW4hfNfu6tycfNrM2uzXymKMnszILuqalF1iSz
7Ptq8lUzerP6u2vmgnPCPPyumrnpHDVrv78mbzXzNvt+qH9+M3+z/wdq8lcz
Y7Pjl8CnN8kczTvUbGo3NZre20x6opI9AbPq52q0nxmm+ZaZ+AQlmbVZuZn5
hCV7FmbpeuaXmnCe3PdPDVfKuXKvHPQu+Io23DRsl1ppTbO2jdiltrjGXGvD
dKmN1lRr60hd1p5r3rU/Whfuk2PkmtG7cI1rzrU3oAs3uEZdq531q0nNtfaO
xfHLJhx8Nc80XJfaas219qp5lu3r8fc93y/T12Prx7f8noFN9gD0n7/W+GUz
Cv30GF3WvmvetT9yF66QI+SK4bt8l99p7TcjmbIkozY7GdiFG+V4uX7ULtwp
Z8qdo1i/mnCq3Pon/39B8Jwl/vqvmnxDjpFrSpfaLifKjW0XblSjqFX+ruEi
a5y1To2uVlejm7VYA9+if2lfG9Vgb4Mva6PNzDQmL8nUzTqsKWZvF7apNbWL
FlIDqYWe4vhVk/ronFFP+C4H9vVNT6A30HOYteg59B7ut6g3/qjJM8xI9Ptq
jDfBl7TRHr/XaFkzGf2/HClXXtmm1rkHNH7JHoZ7Q09w/YgmewDuBbwFvqzJ
Hph7YR/XeEk9pVnERTVrXQ6QC/Q8eh/1tPpcT6G30BOZHX1U4yXMSMxKLq/J
csx03D95sWYvwD0A88Dzataaz+iz6tH0W9+UeLfXuH5+k0zbvNkxd+wdc7OW
68CXga8Dr8+9F9eMjRwlV51Vk0ePXpJPfQJ+qEmGYZah5/Gzh7bxQu/X7C25
p2c++AH4liZ7TuZ/+mv3Ns38VqX/Xk1WYGZgvuj/8H9Zo8zGzq/hDjlFbtHf
6Ef04Pq7c2vGxj0499ts9gc12U9zT2/Mkt/gXp81z9qnpzNLu7DGT8lpctuH
NdmBGYJZ16s1eah7Fu5dXFqz9uRoufoy2ukl73iFmv0898cmbZI9vVOThw7d
Q+DeC2q4U06UG9+oyVPdA3Ev5JIa7neNuFaW7aKt1Exqp7Nr3p2/yd+2Qs+/
W7R5lvX78d6tH9t3+/EZumfh84JnbMIhcsnLNdmBGYL59ds1WcnQPR3wKzX5
sXsk5tGv12QTZhTu7bxZk++6Z+Pezf8BPFO3Qw==
             "]], Polygon3DBox[CompressedData["
1:eJwt12fYFNUVAOBldwGpIggoKBaKSg2gIF2pkSo9oSZUQzVUI02liAKiAkKU
YlRKVDQJClgokao0oxQbkKCACoKiKEjLe57hx3nuPe+c2W935s65893Ua2i7
IelUKvW+yCkqZlKpCqJ0NpVq4cCTxrXyhuZHza83LyWKmNdk/XOkUkOddyW7
mtVmA9ifxBT5Kn4ju1t+j7oz5pVZJVHG8Zbyp4y75J3MR6t7SF19+U7RkY1i
E1g9+SeiL5vCZrJW8nKirLjJ5zRzbIaxqKhjPlDdMHWFHS/O6rHBbAS7mhVj
ddkgNpwVYdeJkhGO3e3Yo8YS4i7z+9WNVlfc8fysMuvB+sb1Y78RVeL7ONbK
saeNBUU1817qBqjL5/hb4mbWiLVgv5oXUFfF2JP1Y7nUXMsasKFsFCvG8rAK
rCvrIibK84qKrJu8t7qMusKsBuvHhrCC7BpWnw1hI1lRtjquHWvImrOz5lep
u8PYlw1mBdQUYrezPmwQy8/Ki9vitzjW3LGZxnyiknl3dX3UZR2/klVnvdlA
lpetySTX94hj15qXEJXNY0EuVLdEXSf2vmjDfozvZF5DbMok6/NkNllLsaYy
5jewNs7t5Nyf4xz+i/wWUYXtZKfYz/JyojLbxbLOLW1sz7qy8+abM8n6/D6b
3NO4txszye88kU2ek3heNmSSdXec3WJ+q9iSSe7/D6yqeTVxLq4Da+BvNPU3
jphXdXyk8Rk2V1yIa6yuurglm/zu2cZbxb3mD6mZ6tw7HU+zUqw168hOm5+P
59DYmLVk35lfjHVubMpasxPmx+K3mL/LXo3vLl9rLMheNr4i2mXj5nkezFvG
OhXj5eVFz7jX8Z2VNHNujugNrBXrwH4yv439zjiVPSqek69X25h9Y35TrBuR
y7ws66imu3MvmOdkZYwdWDd2zrwC+0P0JDaPNY2+xGaxN9ibomDO5FrHNS/n
WGvHZhnXyRuZfx1rJHqS2Cf6sMnOe8LntZR/LLqz8dG/WGP5HtGLTWTTWXP5
XtGbTWIzWAv5R6IbG8cms0by/4iubCybxBpG34v+Gt/Bd2nq2HTjB/K25sPU
jVFXK9YW759O1kWsj8XybbwdGy4fq662/EPRhY2JXsDulm8X7dkINo7Vke8Q
HdjIuI+sbvRhn3kfm8cWsdaxztn97Hm2jHVm/xZN2LfZ5LvHb6hlPoktjmdV
5HTtt2aSa34qm6zhWMs/iYvxrIlKsV9kk3U/Kp2cF+cvjx4pRrOl8tf83e7O
ey+TXKNj2aTHR6/fLXqwCbGu1DWJnuv4ULaILWUd2a+iIKvPmrDD5qfZpegF
ogbby6o79wHjMvY666HmgijKmrBW7Lj539gPscZEidgz00nPit51XTbZI6ca
/yt/0Pw5dS+q+2P0Of4kW8+2stHsLjaTrWNb2Cj2PzGGzWcvsV6Z5DnqzB5g
fxGn5Yf4WLYgrp+63vLvxQl5HpFXvKPuABsePUS+QF1X+UExgs1hC1k3eQO1
T7C1bDMbyeqzGWwN28SGxxply9gn7CCbweqx6emkl0RPGcGWiywrG/ecfRHP
LftMfi72J7GCvRy9w3gzL88+jWeUPWt8h21gD8v3i2HxLLP5rIv81ej5rAyr
yD5PJ9fgpPwGUSr2Zd9tNjtgnhG51a2KfssOyfPFtWJvs7MsfzpZo7FWN0Yv
FuPY8ugv6vqqqcumstVsHRvC7mQPs3+yt9h9rCZ7iP2DrWb92VdiInsp1jwb
GM+VurlsC9vJxmWSPb58Oum50Xt3X+7FJVldeT2xTT4n7mc8e+IKJatjP2XT
jK+yN9iwy72kXzrpw9GPz8iP8qfZCvm76h6MHhmfyTax7WwM+5e4ilVjtdk3
0W9ZEePtrC47Zn6YPR57B1vB/iz/UjzCXox9hg2IZyjWqvzG2JfZFsc/YwOj
F7LZrJ38czGIzWBzWHt5Dd9vAnudrWL9Lu8Bs9nGWC/h8R4qprCV8jXqBqn7
VAxg09gs1lZ+r7qlbB87wKazNmwJ28v2s2nsCzGYPRG9mHWQ11H3KFvF1rLB
l3vi5HSyF8WetCKbrKsC6eSexb0bnU164oXLazTW6jr2CkurKy2v4PM+M/8r
Oyy/ShRga9iz7Ii8SI5kv459exE7Ls+KYmxT9PRYb/IrRf7Y69kZlttYkzVg
B81/iT3YWIPVZ/vj2Yt9wNiW/Z5dIb8i3m9YZ9aTXTLPzcoZO7Ee7GLsG2q/
k+cSxdnm2CPY6fhu8ZvZjngGYm+QXy2uZ9tjnbAf5YXFdWxbOtmrY88ulU3e
HR7PJv+DxP8i12eTff0x48/ynOZ3xPPh3APp5P0i3jNuyCb71zTjfPk3ai7G
+754j78dfdbYnLdnafmb0dtZbdaInTJ/gZ2SFxIl2Qfp5P+eWunkXTzeyQ/G
e6oYz16Tr1TXx3krRQlWhzVmP5q3VPdCOlm3sX6vsYc2Z4vYLvk+dZOdt1Ac
k6dFUbbR8ZPsaFzjWENsPWvq3HnGrWwXG6+mMXuGbWY72NhM8ndfZB+zj6Jn
yZvFtWHbo9+oe0RdK/YS280+Z4+xWdGP5TniHrOVjrdWt9i4h33BHlezNPbg
uE6iDPvY8b+z83G/RTm2hz0dz5f8Uir5H/RN9lQ8/+xC0vZSb0RvZYWMVXkt
9nX0AZbXWIHdzr6MPZF9K0/F2jJsiD7qQ543fsg+YVPUvCuqsnasC8sjnxs9
K5612BvYO9G/WT5jRXYH+8r8tz5vgXEH28MmqlkizspLiNLso7j/0cuN5Vl1
dijeM9i5WN+iLNsdPZgVjncRVod9a36Pv7HQuJPtZZPi3UUUZ81YG3bS/P9Y
itd+
             "]]},
           Annotation[#, "Charting`Private`Tag$3015#1"]& ]],
         Lighting->Automatic]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEYwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/Mrw/f9PPX+Ouc5nVPW3tvUExdF0bBeFeZHXWo2PopyucBSrrOC
p6zlAxv5zTZmJERRN4tYrEFzNUdZzwm2cIqdnGc/l8K1eM13betZ91q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc057jht+6EIvYS+N
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT/do4B1reMzy8Fws4a1zV3xT
jp7CWRXYMZv5zGIeM8MZZjCL6eEdMI2pTFGqOSnMTGByeMdM4q8S9RP+05es
Ec34uf3/Hv4AxpdK8A==
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
         914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
         697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
         1118, 922, 702, 1106, 1119, 923, 1002}], 
        Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
         707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 
         1211, 711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 
         931, 715, 1129, 932, 716, 1130, 933, 717}], 
        Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934,
          722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 
         1215, 726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730,
          1138, 940, 731, 1139, 941, 732}], 
        Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 
         520, 737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017,
          1220, 741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 
         946, 745, 1146, 947, 746, 1147, 948, 747}], 
        Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 
         1023, 1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 
         1024, 1227, 756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 
         1151, 951, 760, 1152, 952, 761, 1153, 953, 762}], 
        Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 
         1031, 1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 
         1033, 1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 
         1037, 1240, 775, 1156, 955, 776, 1157, 956, 777}], 
        Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 
         1041, 1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 
         1044, 1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 
         1048, 1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
        Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
         960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
         810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
         1171, 968, 820, 1172, 969, 822}], 
        Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 
         1264, 1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 
         1260, 1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 
         1256, 1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
        Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175,
          972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 
         1065, 1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978,
          835, 1183, 979, 836, 1184, 980, 837}], 
        Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981,
          842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 
         1272, 846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850,
          1192, 987, 851, 1193, 988, 852}], 
        Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 
         625, 857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073,
          1277, 861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 
         865, 1199, 993, 866, 1200, 994, 867}], 
        Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 
         1079, 1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 
         1203, 1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 
         879, 649, 880, 1204, 997, 881, 1205, 998, 882}], 
        Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 
         1088, 1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 
         1090, 1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 
         1094, 1298, 895, 665, 896, 1208, 1000, 897}], 
        Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 
         1307, 1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 
         904, 673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 
         1300, 1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
         310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160,
          370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430,
          1290, 653, 445, 1299, 668, 460}], 
        Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
         311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161,
          371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291,
          654, 446, 1300, 669, 461}], 
        Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
         312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162,
          372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292,
          655, 447, 1301, 670, 462}], 
        Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
         1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163,
          373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433,
          1293, 656, 448, 1302, 671, 463}], 
        Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
         1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164,
          374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434,
          657, 449, 1303, 672, 464}], 
        Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
         1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165,
          375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435,
          658, 1206, 450, 673, 465}], 
        Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
         1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166,
          376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436,
          659, 1207, 451, 674, 1209, 466}], 
        Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
         526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
         1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
         1295, 661, 453, 1305, 676, 468}], 
        Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
         319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168,
          379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296,
          662, 454, 1306, 677, 469}], 
        Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
         1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588,
          1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440,
          1297, 663, 455, 1307, 678, 470}], 
        Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
         1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589,
          1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441,
          1298, 664, 456, 1308, 679, 471}], 
        Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
         1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590,
          1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 
         1204, 442, 665, 457, 1309, 680, 472}], 
        Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
         531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267,
          591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651,
          1205, 443, 666, 1208, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
         622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354,
          562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502,
          1213, 279, 487, 1210, 250, 473, 681, 688}], 
        Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
         1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247,
          347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287,
          495, 1211, 266, 481, 264}]}, {}, {}}},
     VertexNormals->CompressedData["
1:eJztnHlcT2vX/5Mp4zmOKfOcilBIiO0cmcoQiUNlKMlcEqlkKDJWpqNBjkgD
JRRCiZQmZQylZMoQ+n6TMjT+9u67ruuPdb/W79Zzn/N7nt9z33+9X2e/Ot+z
99rX9Vmfta61Tw9L2xnWykpKSl0bKinVF9nwxPApsozGAuP+pILqmhq5kDJd
rWTLVFXObvMtK6TrX44X2OneV+dcPOnaR+m62vaBf1rPHs4Z0+TKGem60VKD
1sF5kziHJx08Vy1eF54YjS6ZN5ezabTavnLxuun028uqHi/jrFli6FIoXh/Y
5Zz72REunAYJQdODxOtfvTIrjFfs5hwTUfh5e7VcWKaSIn8w7DCnTXbfrKHl
ciHwxAf9wyNOcarsS+ro9F4uPFC/laGaE8N54+mLBn6X5EL/2Q59tTcmcr4s
s0hPEORCcIf5mfFl6ZzHfslt2XuPTLApr37q2u82ouw/8fyL43kS/u4k+vv/
xPO/Fs9I+LtI9Pc68LuMz+H3/7fGUxOeUxPF8wTE5cS/GM/h8LvDUTxfwn28
RPfzPy2e+yGO+/+Hx/MD3McHdD+RcN+R6P7/E0/F3+vB7+r9YDwvw31fRve/
Bp5zDXref7d4UuuzEO6jEN3PRbjvi+j+XeE5XdHzFkFcilB8/t30k1qf0XDf
0ej+neA5ndDzfoa4fEbxCYA4Bvybx5Nan3WN5ymI4ykUzw2gCxuQPvwnnv+1
eO6COO5C8bTPUeQ5Rpbv/ir/+b81nu4QR3cUz00Qx00onslLFL6Nkfm3/y4/
T+V3Kh/9VfpZ13iuhziuR/F8AHF8gOLZxUNRhzCyeuTvjuf/L+uzrvHUhDhq
oniuClTU1Yysvv7viiflPym/9FfpJ7Xf6xpPZ4ijM4qnx2BFn4iR9Yvq2g+h
6neq3qTqI8rPU/6T8ktUfqfyEaWf1H6n1icVzxaFir4n4z/rf1obl+SX1WvF
ecr5atX/7b14eKjZqczM5OzSwPeK0nh6X2yDv9uG/p66/5VTFPfByO6Huk/y
94n7rOvvU89FXad+P6rd2p8aOjTnVB+6vPa9GGgtji0vzeRU6fZt1gQdmTAO
/nkcuj5cR/HvM7LfoX6f+h3qv0v9/ptlxjce6/flVGvXXS5d39L3QGun0D6c
/km/f5Ku3zdb2/hBJ13O2Yfe3JCupwb3i22ycQincwu3W9L1/IDGEwzfG3D6
fh/fR7qesX98dT+DsZwmITbjpettbVYePh5iwvkyJLKiUrx++p4swOvbdM7D
Zu2dq6T9EnLMPXyqJefioliPMml/Fesl+vst4JyR4Gb1Vbx+Pb3f1tPP7DiN
+qcuyZPWm3L3WRFGqzitf7aY/kq8vsegb9T6yI2crywTTHaJ10eAXjCOA92o
fhRi4By1kzPIa1DmBVFnlLwVusPI9Ge5q/e8+O1+nBFRr+u9E/Xq5hDDdgGP
fTjjctLSvCpEfZt57crh1qGcq2M6rpotlwufQrbUf7kpmPN1nF7Brk9y4U+n
Lk/SsqI5184foX7utuij7AtcprhGcUYqd0jv+1AuLDLZ/aZm9TXOpblXUta4
y4VDP0VuvLznKqdK55QlXfbLBbuLluvfTkvmnGg1t2RAfbmwYpXlo3vzb3Ju
D/z03VBVfC75H286J93ivL3vbnGNg0w4lzFy5z3PW5xWT28P0HCRCYsfnm5m
djOTU1vzfImGnkyITdQwCbg8jHP5+6DL0voprr7suWTveM5vBqvqSddXDKra
f3GmKefBrIrV0rralGc6IK7+Is7gV9NdPovXLzZ7cWyrnz1nQNnuhCzxuvn6
Td+7tdrCGWWmbLZKvH7oZYdJLzO8OGXrbxzpU03no2r12KRBoWGc/rua9q38
KK4Tn2KhtN8FzsILbd4lp8iFPtWFuQPCr3NqvVP+6cUauTBpsqrFIiGF892g
mW80imRC79DKM236ZXDOdb2o0n+pTHBe3U236fxMzr4zdgwPN5AJjd2W6K1t
ks6ZfcFw5qVgmbC3e8k9D92JnJt2PH0i5bWwykdb0pVnc057XZ1XIcXfNz82
45I155AIg18/idd3TJ1lbWbiwDkkM8wsQ7z+4WZoqPItN86AGctsponXo4dM
eR/Tbh/n0k6G+TFVckHvRpfiBgv+5FTfeeJ12je5cBJ8AGMT8ANtXH5tE+92
kXNg0lerpdflwnG3px5ZAQmcxQ6TIhZbife5Y/2GwQNSOVXzxp4Z9UgmpDxa
NP31vgzOpBl/OPe3kAmpJkk/e37L4JySNdip3nSZcMmoW6XQOY3zRN5EqxXx
MmF+urJGnucNzu/XNSY1miEXcv0HL84/+ztnVk6MvhTPkldJvZ+utOH0m34w
WyZe1+kfdUa7xTrOFyO7DUsUr7faovru1datnG9X1qzXEq9r9zmmVJG8nzPp
86ULo8V42inNftQ6KZAz98iVhrpf5YKphffU6vcRnJte5Bg/eC0XssGHZSM/
ZgrPY4qeKwqenzEY4pAM8UpGcUuH+DImQpy94X14o/cSAe8vAr3HnvC+e6L3
npCyb2FRz6WcN56P+fWjGJ+WsztZNk5x5JxbIje5LF538pwnJI724Bxoku6t
IvmuVY389BwPcvZVXtH7SqVcqFdzVV319+OcBc8WD3Mukwvn+uwo0Dl8hrNs
dkTry8/F+9myxr/T9cuc3e6F5p2NkAta4IO1UD3YAPYnYw7sUxfYzy5oX6vD
/ldHOjAN9ILxLeiGFtMXpDMtQY9aIl1qpqHQL0amYz7BlyzyNjtxTkzrFBUp
xi1xiYpO4LftnAv7Pgp/Luqk9maV16v6HuIMel2gqSnGs+rTpm1NPgZxxjxb
vOnQZ7nQ63HXdM8+5zh18/u4aebKhdYZm46dD4nl3BjQNiHvqFzQz/IM0rNN
4oxoortwQ3+6HlwC+WYJyjtpkLfSUP5yhPzniPLgWsijjEsgn56CfHwK5eWN
kNc3ovy+GvzBauQTKsFnVCK/kQi+IRH5B8onvAcf8B75AR/I9z4o7y+HvL4c
5Xdz/d7nasxvcX70NFYO2yzmcfDTi5GvtoK/s0J/vxZ+l9EDfj8U7iMU3U8Z
3HcZuv/v8Jzf0fOmQFxSUHy+Qhy/onguhbgvRfFfzd4Tel9H4L0eQe+X8le2
sG5s0fqh/JINrEsbtD7DYR2Ho/U8HtY9Yzis/x6wTxhdYb8Mgn01CO2vpiWK
fcjI9qMO7FsdtH/TYJ+nof1eCbpQifShCvxQFfJFNYcUusPI9KcX6FSvv8kX
qYDOqiBfpAu6rIv6FXdAx+8gPU8F3U9F+t8M8kQzlC+SIK8kofziAXnIA+Wj
pZC3lqL89QTy3BOU71pDXmz9F/silq9TIK+noPweAz4g5p/4om/gH96Cz3iL
/MZy8CXLkT9ZBz5mHfIz/cD39EP+pw/4pD7IL20GX7UZ+asy8GFlyI/1BN/W
E/m3WfA8s/5FX5QG8U1DcfaC9+GF3ks4vL9w9B57wPvugd77WfDNZ5F/Hg4+
ezjy2+Hgy8ORP2+UrPDxjMzPp4LvT0X+/wXUCS9QvVBVoagrGFl90RLqkJao
HqF8EbWv/25f1BT8UFPkixygDnRA9aA71I3uqH7cDHXmZlRvFkJdWojqUzOo
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
fR9Kfc9IfX9HfS9Gfd9EfY9DfT9Cfe9AzedT8+TU/DM1r0vNl1L9T7X3k2r7
4IwB0A/f1sJDWzqHYKxvqziPiMvQmCOdAzHaZirOg26WmqdK53CMfVVW157H
6TWNfWgasp7z1IruteehxWbZ5j4Pd3A2OPam9jzabtIs2c47oZypn61dpfMF
w5eRp5teucAZ+MukP1Kk89NXBnERBQmc0YZvP0+fJxcaBzzT2tgljTO6acVr
I3EfzcpONNqam8Hp96HS2nGmjNy/Br0nWknnNIz5vRTnNcuz9ianXbPmDDdK
rj0v2+vccsj3Vus4G7dOrD2vtNjdb3CWqFOMJ/pN95L06r53bNCHLoc4Z4Z6
r5XO6+fsGG6SMek655eDTVR/dZYLu0Z6mLz+NYWzIOVKWNFHmWD44tJ2m523
OCOcRz0Ic6HPiWI6jptQop3MWV/ueSW/oahLE4MfHHZdw7nOemvt+eClt/MX
NA9z53TdFlx7PrsjRkhL23uAM/WQh750Pv591IRmY74d53QL3j1Mmk9wH16T
nT80ndO4XvGOykB6bkq1vK/Knl0pnJGx/o9bvJEJTXd6rDgRmMB5oK27dk9R
D0Pb6lgdr7+P08hgcql0vvzFuTC7155Aztn1hOnS+b7FiM47CyMjOXOcxsR6
vJST578b/C1+mvEilTPZZ/unJUliHRRgGqW0LZFTY1/p1eFi/TLo/GCtom5X
ONN63W456pRYx83voX1o2SlOg6TQMg2xHpmTn5wje3qR84mhSuMF8f84D2AO
56Hriwa2czK/ylnQrtRj2wG5YDNiTUKF0znO3atmrIjNkQua+/5cPsb+GmdJ
xemk1e7/OAfF5j26Xk6qN3FRMKfc897nM5/o+WQH2LcOaP9Ohn07+Qf3bxPY
t03+yf71hf1LzTUl6pQXyUJjOfPCbDSzxLpj+4iotqbzz3I+TTX+c0W+XNiq
9zQz58UxTr8BJ0YrfRHzTm7vQ12993NuardYWTovtjc6N+NjjBvn2St2mdL5
ZuKX6conRH/MqNay/Lrkk69DfK+jONd1vxvBPjf6wf0eC/s8Fu334zd3F1Sr
hXAG1ex1DykW/dLXwGPlNj6ci7TVGkjzBr3jTIu23d/O6ejgOkI6H18zxb39
VNEfMMr9jWrPc1f+Me9mxWYbzt88dtaeP7rB/nf7F3WgBez/FkgHdO+0CK/5
uIczvDD4sDQXkatrqf25dAOnsmxh7Tl+RiP901dPruA0WWRde+58S+dhjHQ+
yrg7TnFOSunAItj/jOqgA4Nh/zOmgg4ExfVdMLrQjnPCEMva+YF+I7QNpXNu
xlnvKmrPu+3rjR8nncsyttumOJ91gv3v9IM68HXE+sXSeTnj3mjFubnbhk5W
0vku4xD2HQTsf8Zi0IGUDpG1576Mhv/k/Jf6zqWu58LU71Dnv/adFffHyO5T
FZ5HFT0XNf/W1lURF0YWnz9GKuLIyOK5AOK+AMXfFt6TLXpfNfBea9D7HQjr
YCBaD56wbjzR+tGCdaaF8g6Vp6j1XAjrvhCt/zTYJ2lovxTBvipC+6s37MPe
aD+2hH3bEu3ftrDP26L9Ts25bQYdYZwOeuILuuOL9Gcj6NRGpFfNQNeaIX37
ADr4AelhGOhmGNLPi6CzF5HeUnOPE0DHGU+DnlP6bw55whzli7uQb+6ivGMK
+ckU5SlXyGeuKK95Q/7zRnlwG+TLbShv3oD8egPl2RB4TkY2h2wM+dsY+XCc
989D3tcDf6CHfIIJ+AnGo+ArnMB/OCEfQs3VUN9hUd8TUd+/UN9rUN8XUPPw
1Pw25UupuU1qzpCai6PmuKi5ow6gmx2QfqqDv1RHPnMh6OBCpIdrQQfXIj2c
Dz54PvLDM8E3z0T+eQDo3QCke5agd5ZI91xA71xwHod6YBGqCyqhfqhEdUQU
1BtRqO6g/Amlb9T7pfwS9f1IOdRd5aj+OgB12gFUr0VCXReJ6rswqAPDUD1I
1Y+Uvk0EXZuI9G036NpupG/zQNfmIX3LhTo5F9XLJlBXm6D6+iHU4Q9RPe4E
dbsTqt8P9lLU+Yys3p8GOjUN6RXuMzC9GgY6NQzplSnolCnSqw2gUxuQXr2A
/sgL1Cfxhn6KN+qrvIT+y0vUh6m6pejXMLK+TUVzRX+HkfV5Jr9T9IMYWV+I
8mMWQ9ae6zV9KKdjpk5Kbb90gHmwdScDTsM/ngyVrt9Lm73twIMZnHdOdR8p
+Zw394zOHXNcyDl0Vy/HL+L1pCFnzvVpaMd5I8v0wzPx+s421crBos9gPPre
R1vyG40eK/pxjKwv99q8l8aHkSGcFosb2e0U83Xw+UaJ95pFc85be9tl+325
cGfvH0diusRzuh40avzQUy48GjVYs9HCm5yGvzRzGaQqFwx+b6E/LTud887d
atuF3jLBGuJljeJmeN3WzjfShDPLXv+7tN4mJ/QOCzO15CwbFbtROk/pNqTp
jLUFdpx+Z/1nSn7vyU+pZX6RGzm99W7MkM4Z31hqqA6ds5sz9fn0mp1iHDKg
/5uB+sCvuthNnHomnrPDvhhf+51yYUSGrZWX5U3O5pbDk1qKz/vlYlbWBJN0
TgP9zcLDIzIhtFi/sHBfBufvDpOK+1nIBP8Jzh+OinFhbHH+1YHfxfhsz7ql
dTNxNad6kaZntvQeg57oTRyymfNPa9ULG6T+8NNepqU1ezi1W2xfZyY+19Ej
za9FT/Pj9Il6NaG6nD5fiA+bqjTydhqnzmS16PJwmXDYeXXbnmIdwqjhHDBH
qkeOt77imCM+J+OjdDXfm+LzFg99FKEkxoXRvOh1SUcxPpumnp4cF+LFOadM
Q0dTvE/Nr1+evUrx5+w13q+ttXifcyMrTycGhHDqqEStqSeuz2I4fypG51BU
vWw8zNsoQHwexhEhRxyLxecSMj+l5lnd5DyhlVe/RMwXWVrDPT51jefcMnjc
qVviOh+qP653gyuhnMEbuuywEnVp6aC4xyEtojnNJ1hc2HifnpfDeYr1r143
nJxrcjaes3LKjhPLxPXWePnIpZ2bR3Pqx1u08xB/f0v+p9kHxN9lPLHA3qPr
fvr/P0n1tdZplIZUiPufsc3Wn+dIOoDnXopgnqEJ+MUmyDcWgI4U/KCe3AUd
ufuDejIOdGQc0hPNFgFFzeZncqZvGd5AOj9aAPe9AM1jhN0vUd/neZUzYfbd
Du3FuMlV7DZEtozmVH68KNlJvE/V/F1bHI+EcKbWNFmrJD5Xk/f7b5eJ+4px
QO9rWtL+ejh3pN44UV8Yr93yrZJ0RiVPeXeoqMuMtj7bavU5Ht5HPHovz0F3
niP9GQm6M/Jv0h97WDf2aP2se1Fa5Seue8aRbZeetJTqiJc7y0am+nO2ib5Y
vEj6/7juyTVrpeTJ+ajrqDWSLr11zbkQKOoyY6CdV60+j1xqOkxNzGeMG66a
1OY1rEuDQZf8QY/8kS4dAz06hnSpBPSoBOlSEOzPILRPT76zD7kj6hRjdVT2
QEmvtN4UNJgs6i/j6qdPzks67JJ3+Ld1Yh5iPH7pUG0+Suj58bGUvxmbLlDk
8WmgR9N+UJcegh49RLr0GXTwM9LDpLf9b0v5gzG/t3ptHnHUCs6V8ijjJ2VF
Pn1ya5uX5D8YO4YpfEgB6FEB0qVGoEeNkC59hbzyFeWX7u3brZfyOqOznSK/
e+/VDJX8EGMf8EUOoEcOSJeSIE8noXzdc+PFWr/FuA58VxmcR5ahc8kGmxV/
x8j+3hb+e7bov0vt0477FPfNyO4/Hp4zHj2vEsRLCcUtD+LLWAVxts5QvA9G
9l72wPvbg95jELzvIPTeb8O6YXSD9TMK1tkotN6ovCmHdSxH63kerPt5aP2r
wz5RR/vlCOyrI2h/Uf6B8huUDlwFvbiKdKMH6EsPpDPXQY+uI11KBP1KRDrW
HvSuPdI9J9BHJ6STlN6GgS6HIX2m9FwfdF8f6f87yBPvUL5IyVXkG0aWd55C
fnqK8lR7yGftUV6j8uAHyJcfUN4MgfwagvIsla+p/J4DPiAH+YEc8A05yD9E
gM+IQH7jA/iSD8ifUN/dN4R6qSGqm6h6gfLV2K+eAX3G/rAJ5B3Kv1F+jPI5
a+DfX4N+h8p3pXB/peg+KT2n5i0pvV0FeroK6aob+Fc35GNrlin0kZHpZD7o
Yz7SyRXgv1cgH64Dfl0H+fZM0MFMpIf6oIP6P6iHZlCfmKE6RQ3qGTVU13hB
/eOF6iA56J0c6R7lZ6i6jPJLVN1xAOrDA6hOvAP15B1UVzaD+rMZqkPDoF4N
Q3VrXXXvK+jd1x/UvULQu0Kke3lQ5+ehel/5Z0VfgJH1B/Shj6CP+glDoe8w
FPUfwq8p+hSMrF9B9T2yQb+ykY49Bv16/IM69hH06yPSsQzo+2Sg/s8z6BM9
Q/2iGOgrxaD+kgH0oQxQP0oV+laqqH+1QUfR52Jk/S6qz/N/AF7rLT4=
      "]], {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{334.25061761130434`, 239.11942709617395`},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{-3.9076369321769087`, 4.678019287754793}, {-5.161281575613664, 
    3.536593872440916}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.0386786618075923`, 2.782401126636469, 1.6215395795347411`},
  ViewVertical->{0.13964320707322347`, -0.4105079672776245, 
   0.9011009840855227}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"3c75e235-69f9-4ae0-9492-067a43556e59"]
}, {2}]],

Cell["\<\
This is again modeled with a linear transformation that is converted into a \
probability using the logistic function.\
\>", "Text",ExpressionUUID->"d9334a72-d531-4a81-a3d7-17a1867a822b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Multiple layers can be combined using the ",
 StyleBox["NetChain", "Input"],
 " function"
}], "Item",ExpressionUUID->"085bf079-c12e-412e-bcfc-bad5778133ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[DirectedEdge]", "2"}], ",", 
         RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
         RowBox[{"3", "\[DirectedEdge]", "4"}]}], "}"}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "\[Rule]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*StyleBox[\"f\", \"TI\"]\)\>\"", ",", "18"}], 
            "]"}]}], ",", 
          RowBox[{"3", "\[Rule]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*StyleBox[\"g\", \"TI\"]\)\>\"", ",", "18"}], 
            "]"}]}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"x", "|->", 
         RowBox[{"g", "[", 
          RowBox[{"f", "[", "x", "]"}], "]"}]}], ",", "16", ",", 
        "\"\<Math\>\""}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Alignment", "->", "Center"}], ",", 
   RowBox[{"Spacings", "->", "2"}]}], "]"}]], "Input",
 CellLabel->
  "In[157]:=",ExpressionUUID->"e6cc4c13-ea56-45f1-ba77-717eb85354a6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4}, {{{1, 2}, {2, 3}, {3, 4}}, Null}, {
          VertexLabels -> {
            3 -> Style["\!\(\*StyleBox[\"g\", \"TI\"]\)", 18], 2 -> 
             Style["\!\(\*StyleBox[\"f\", \"TI\"]\)", 18]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
            ArrowBox[{{{0., 6.123233995736766*^-16}, {1., 
             4.898587196589413*^-16}}, {{1., 4.898587196589413*^-16}, {2., 
             2.4492935982947064`*^-16}}, {{2., 2.4492935982947064`*^-16}, {3.,
              0.}}}, 0.030239520958083826`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[{0., 6.123233995736766*^-16}, 0.030239520958083826], {
             DiskBox[{1., 4.898587196589413*^-16}, 0.030239520958083826], 
             InsetBox[
              StyleBox["\<\"\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)\"\>",
               StripOnInput->False,
               FontSize->18], 
              Offset[{2, 2}, {1.030239520958084, 0.030239520958084316}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.4492935982947064*^-16}, 0.030239520958083826], 
             InsetBox[
              StyleBox["\<\"\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\)\"\>",
               StripOnInput->False,
               FontSize->18], 
              Offset[{2, 2}, {2.0302395209580837, 0.030239520958084073}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, 
            DiskBox[{3., 0.}, 0.030239520958083826]}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TagBox[
      FormBox[
       StyleBox[
        RowBox[{"x", "\[Function]", 
         RowBox[{"g", "(", 
          RowBox[{"f", "(", "x", ")"}], ")"}]}], "Math",
        StripOnInput->False,
        FontSize->16],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}}],
  "Column"]], "Output",
 CellLabel->
  "Out[157]=",ExpressionUUID->"2bf5afca-aae4-4d48-8976-ccf38fb3549c"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Elementwise operation on arrays can be specified using ",
 StyleBox["ElementwiseLayer", "Code"]
}], "Item",ExpressionUUID->"d022011a-6bdd-4d72-8160-b6c82085c03c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "=", "4"}], ",", 
     RowBox[{"r", "=", "0.3"}], ",", "layer0Pts", ",", "layer1Pts"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"layer0Pts", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.5", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "8"}], "]"}]}], ",", "h"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"layer1Pts", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.5", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "8"}], "]"}]}], ",", "0"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", "##", "}"}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"layer1Pts", ",", "layer0Pts"}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "[", "White", "]"}], ",", 
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", 
           RowBox[{"Thin", ",", "Black"}], "}"}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"#", "-", 
                 RowBox[{"1", "/", "2"}]}], ",", 
                RowBox[{"#", "+", 
                 RowBox[{"1", "/", "2"}]}]}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\!\(TraditionalForm\`f\)\>\"", ",", "14"}], 
                 "]"}], ",", "#"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1.5", " ", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "8"}], "]"}]}], ",", 
              RowBox[{"h", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "[", "Orange", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Disk", "[", 
             RowBox[{"#", ",", "r"}], "]"}], "&"}], ",", "layer0Pts"}], "]"}],
          ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Disk", "[", 
             RowBox[{"#", ",", "r"}], "]"}], "&"}], ",", "layer1Pts"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7578709505618057`*^9, 3.757870952678488*^9}, {
  3.757874540728833*^9, 3.7578746021809464`*^9}, {3.757874641138597*^9, 
  3.757874798865123*^9}, {3.757874832617928*^9, 3.75787483435861*^9}, {
  3.757874871330027*^9, 3.757874915454023*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"b8a2ff09-6620-4caf-aa29-3c4a3d150e26"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.5], LineBox[{{0., 0}, {0., 4}}], 
    LineBox[{{1.5, 0}, {1.5, 4}}], LineBox[{{3., 0}, {3., 4}}], 
    LineBox[{{4.5, 0}, {4.5, 4}}], LineBox[{{6., 0}, {6., 4}}], 
    LineBox[{{7.5, 0}, {7.5, 4}}], LineBox[{{9., 0}, {9., 4}}], 
    LineBox[{{10.5, 0}, {10.5, 4}}], LineBox[{{12., 0}, {12., 4}}]}, 
   {EdgeForm[{GrayLevel[0], Thickness[Tiny]}], FaceForm[GrayLevel[
    1]], {RectangleBox[NCache[{-0.5, Rational[3, 2]}, {-0.5, 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {0., 2}]}, {
     RectangleBox[NCache[{1., Rational[3, 2]}, {1., 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {1.5, 2}]}, {
     RectangleBox[NCache[{2.5, Rational[3, 2]}, {2.5, 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {3., 2}]}, {
     RectangleBox[NCache[{4., Rational[3, 2]}, {4., 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {4.5, 2}]}, {
     RectangleBox[NCache[{5.5, Rational[3, 2]}, {5.5, 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {6., 2}]}, {
     RectangleBox[NCache[{7., Rational[3, 2]}, {7., 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {7.5, 2}]}, {
     RectangleBox[NCache[{8.5, Rational[3, 2]}, {8.5, 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {9., 2}]}, {
     RectangleBox[NCache[{10., Rational[3, 2]}, {10., 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {10.5, 2}]}, {
     RectangleBox[NCache[{11.5, Rational[3, 2]}, {11.5, 1.5}]], InsetBox[
      StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
       StripOnInput->False,
       FontSize->14], {12., 2}]}}, 
   {FaceForm[RGBColor[
    1, 0.5, 0]], {DiskBox[{0., 4}, 0.3], DiskBox[{1.5, 4}, 0.3], 
     DiskBox[{3., 4}, 0.3], DiskBox[{4.5, 4}, 0.3], DiskBox[{6., 4}, 0.3], 
     DiskBox[{7.5, 4}, 0.3], DiskBox[{9., 4}, 0.3], DiskBox[{10.5, 4}, 0.3], 
     DiskBox[{12., 4}, 0.3]}, {DiskBox[{0., 0}, 0.3], DiskBox[{1.5, 0}, 0.3], 
     DiskBox[{3., 0}, 0.3], DiskBox[{4.5, 0}, 0.3], DiskBox[{6., 0}, 0.3], 
     DiskBox[{7.5, 0}, 0.3], DiskBox[{9., 0}, 0.3], DiskBox[{10.5, 0}, 0.3], 
     DiskBox[{12., 0}, 0.3]}}}]], "Output",
 CellChangeTimes->{{3.757874585767728*^9, 3.75787460262385*^9}, {
   3.757874700584318*^9, 3.7578747990905*^9}, 3.757874837914599*^9, {
   3.757874874739277*^9, 3.757874915853779*^9}, 3.834564357666831*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"3a4ad0fb-994c-4060-9735-4a3a6d485187"]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", "=", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LinearLayer", "[", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "->", "2"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", "\"\<Real\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ElementwiseLayer", "[", "LogisticSigmoid", "]"}]}], 
    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"fcabd5cc-f5e2-4582-97ca-5d293c1bad60"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 2}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[216]=",ExpressionUUID->"293d9a40-3084-4942-ba9b-3531121105c5"]
}, Open  ]]
}, Open  ]],

Cell["\<\
As training data we use the probability of being part of first class, which \
is 1 for the points of the first cluster and 0 for the points of the  second \
cluster.\
\>", "Text",ExpressionUUID->"40045316-ccc0-41ef-b82e-9ed5176c8d01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"training", "=", 
  RowBox[{"Catenate", "[", 
   RowBox[{"Thread", "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"data", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"ad6645aa-6a44-4bd2-9092-f51379248459"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.4916644970555555`", ",", "1.9293981418977926`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.40610351690262436`", ",", "3.536593872440916`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.678019287754793`", ",", "0.6831694154040358`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.9054350638709048`", ",", "2.14294790650831`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.104165555903694`", ",", "0.32689065966865605`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.0357514281233033`", ",", "2.1701861605476003`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.934682193087827`", ",", "1.1731357737770503`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.9090370159707948`", ",", "3.033408636838181`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6364713394457073`", ",", "2.1885909018083654`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.8638577195632682`", ",", "1.9160501684351274`"}], "}"}], 
    "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.4419693631688464`"}], ",", 
      RowBox[{"-", "5.161281575613664`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.9900204355472426`"}], ",", 
      RowBox[{"-", "3.851031723323927`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.9076369321769087`"}], ",", 
      RowBox[{"-", "4.000522608911792`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5102420069249742`"}], ",", 
      RowBox[{"-", "2.617444415293623`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.4515583935388023`"}], ",", 
      RowBox[{"-", "1.8594831620512757`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.852832119865962`"}], ",", 
      RowBox[{"-", "2.3139618602992584`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.7199841021014144`"}], ",", 
      RowBox[{"-", "4.211464259635379`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.580065886655899`"}], ",", 
      RowBox[{"-", "4.206549698874433`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.443104522675481`"}], ",", 
      RowBox[{"-", "2.9726223387333537`"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.4142782955862376`"}], ",", 
      RowBox[{"-", "2.1727129565084313`"}]}], "}"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[217]=",ExpressionUUID->"28e3f531-de5b-4453-b5fa-fd06b90b0557"]
}, Open  ]],

Cell["\<\
During the training, the classifier line is (should be) updated to divide the \
two clusters according to their class.\
\>", "Text",ExpressionUUID->"bfc3a790-0db2-49b4-a8b0-da5f49f87545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier2", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"classifier", ",", "training", ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ProgressIndicator\>\"", ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           RowBox[{"Function", "[", 
             DynamicBox[
              FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
             "]"}], 
           GridBox[{{
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["1616", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]},
          "IconizedObject"]],
        Show[
         ListPlot[$CellContext`data], 
         Plot[
          Evaluate[
           Map[First[
             SolveValues[# == 0, $CellContext`y]]& , 
            Apply[Dot[#2, {$CellContext`x, $CellContext`y}] + #& , 
             Transpose[
              Normal[
               Values[
                Information[
                 NetExtract[
                  Slot["Net"], 1], "Arrays"]]]], {1}]]], {$CellContext`x, -4, 
           4}, PlotStyle -> Gray]]& ,
        SelectWithContents->True,
        Selectable->False]}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[218]:=",ExpressionUUID->"6008300d-b54b-47a4-b295-3df7c723718a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[218]=",ExpressionUUID->"9d689d7a-2a8f-40b2-a4a3-3aa6a3340f90"]
}, Open  ]],

Cell["\<\
The classifier is now trained and its result are matching the training \
examples.\
\>", "Text",ExpressionUUID->"93001557-5077-45c0-b981-16ca0e670a3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"classifier2", "[", 
  RowBox[{"training", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"training", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[219]:=",ExpressionUUID->"d5af8750-652d-47fc-ba2b-7fb2cb835858"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6425145268440247`", ",", "0.683601438999176`", ",", 
   "0.6735216379165649`", ",", "0.6359565854072571`", ",", 
   "0.5857729911804199`", ",", "0.6678444743156433`", ",", 
   "0.6482239961624146`", ",", "0.7009725570678711`", ",", 
   "0.6579704284667969`", ",", "0.6520880460739136`", ",", 
   "0.2192971259355545`", ",", "0.2536242604255676`", ",", 
   "0.22821830213069916`", ",", "0.31411460041999817`", ",", 
   "0.3217970132827759`", ",", "0.31806856393814087`", ",", 
   "0.26937469840049744`", ",", "0.22803372144699097`", ",", 
   "0.3010488748550415`", ",", "0.3095424771308899`"}], "}"}]], "Output",
 CellLabel->
  "Out[219]=",ExpressionUUID->"6e002146-e1b2-4a77-ad8f-f51892d792b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[220]=",ExpressionUUID->"212a42c1-b213-43b3-9de0-79fec887c14a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[221]=",ExpressionUUID->"7c998456-37fb-4a25-8e5a-9fa34001ab56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d49ccd24-6ed1-4c8c-8688-2a545b42afba"],

Cell[CellGroupData[{

Cell["Classification: three-classes", "Section",ExpressionUUID->"5b2b2449-4031-4ec5-a5d8-b571012f0163"],

Cell["\<\
In the previous example we have used the fact the the probabilities of \
belonging to all classes must sum to 1 in order to represent them using a \
single scalar value. With three or more classes this is not possible any more.\
\>", "Text",ExpressionUUID->"50d4b2c9-ee73-47c8-a263-c5fd0d0b6b77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "+", "#"}], "&"}], "/@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], "+", "#"}], "&"}], "/@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "+", "#"}], "&"}], "/@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 CellLabel->
  "In[222]:=",ExpressionUUID->"55d37e47-f408-4ddc-a8e2-29b5a053d101"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellLabel->
  "In[1499]:=",ExpressionUUID->"25a53c75-082c-41c0-b609-86d0cc513633"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.4916644970555555`, 1.9293981418977926`}, {
      0.40610351690262436`, 3.536593872440916}, {4.678019287754793, 
      0.6831694154040358}, {0.9054350638709048, 2.14294790650831}, {
      2.104165555903694, 0.32689065966865605`}, {2.0357514281233033`, 
      2.1701861605476003`}, {2.934682193087827, 1.1731357737770503`}, {
      1.9090370159707948`, 3.033408636838181}, {1.6364713394457073`, 
      2.1885909018083654`}, {1.8638577195632682`, 1.9160501684351274`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-0.4419693631688464, -0.16128157561366452`}, \
{-0.9900204355472427, 1.148968276676073}, {-1.9076369321769087`, 
      0.9994773910882078}, {-0.5102420069249742, 
      2.382555584706377}, {-1.4515583935388023`, 
      3.1405168379487245`}, {-0.852832119865962, 2.6860381397007416`}, {
      0.2800158978985856, 0.7885357403646205}, {-1.580065886655899, 
      0.7934503011255667}, {-0.44310452267548106`, 
      2.0273776612666463`}, {-1.4142782955862376`, 2.8272870434915687`}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-2.9025684095639464`, -3.9099309952804635`}, \
{-2.011973129626899, -2.8401609820479483`}, {-3.7339959178422912`, \
-3.655464278199778}, {-3.4453601954480217`, -2.633757355821462}, \
{-3.2553076483264354`, -2.7496875504116067`}, {-2.6686766909004236`, \
-2.685316212125812}, {-1.2842314929020076`, -3.147646765275222}, \
{-2.622527271098145, -2.482828584297841}, {-2.9728804951087624`, \
-2.5559844357696497`}, {-1.2883427942045025`, -2.4737767645949655`}}]}}, {{}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.7339959178422912`, 
   4.678019287754793}, {-3.9099309952804635`, 3.536593872440916}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[1499]=",ExpressionUUID->"2d1e2199-557e-4c8c-94ce-8c5020a59391"]
}, {2}]],

Cell["\<\
The new classifier will output a probability value for each class. Do do it \
we update the linear layer to have three outputs. To make that a probability \
vector, a typical choice is the softmax function.\
\>", "Text",ExpressionUUID->"f9b7c4fb-f9e5-4dcb-b78c-28d71e31a7ae"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    LineBox[{{6, -1.5}, {12, -1.5}}], LineBox[{{6, 0.}, {12, 0.}}], 
    LineBox[{{6, 1.5}, {12, 1.5}}]}, 
   {EdgeForm[RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
    {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -1.5}, 0.33], 
     DiskBox[{6, 0.}, 0.33], DiskBox[{6, 1.5}, 0.33]}, 
    {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, -1.5}, 0.33], 
     DiskBox[{12, 0.}, 0.33], DiskBox[{12, 1.5}, 0.33]}, 
    {EdgeForm[{GrayLevel[0], Thickness[Tiny]}], FaceForm[GrayLevel[
     0.95]], {{RectangleBox[{7, -2.1}, {9, -0.9}], InsetBox[
        StyleBox["\<\"\\!\\(TraditionalForm\\`Exp\\)\"\>",
         StripOnInput->False,
         FontSize->11], {8, -1.5}]}, {RectangleBox[{7, -0.6}, {9, 0.6}], 
       InsetBox[
        StyleBox["\<\"\\!\\(TraditionalForm\\`Exp\\)\"\>",
         StripOnInput->False,
         FontSize->11], {8, 0.}]}, {RectangleBox[{7, 0.9}, {9, 2.1}], InsetBox[
        StyleBox["\<\"\\!\\(TraditionalForm\\`Exp\\)\"\>",
         StripOnInput->False,
         FontSize->11], {8, 1.5}]}}, {
      RectangleBox[{9.25, -2.1}, {10.75, 2.1}], InsetBox[
       StyleBox["\<\"\\!\\(TraditionalForm\\`\\*FractionBox[\\(1\\), \\(\
\[CapitalSigma]\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->12], {10, 0.}]}}}},
  ImageSize->Small]], "Output",ExpressionUUID->"b4d8ea58-bb06-4a1f-aef2-\
7fd4421422ee"],

Cell[CellGroupData[{

Cell[TextData[{
 "You can perform a softmax normalization using ",
 StyleBox["SoftmaxLayer", "Code"]
}], "Item",ExpressionUUID->"c8b9a552-5924-47b9-afd9-ab3d970e446d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LinearLayer", "[", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "->", "2"}], ",", 
        RowBox[{"\"\<Output\>\"", "->", "3"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellLabel->
  "In[224]:=",ExpressionUUID->"888edd9d-b061-4ff7-9a69-747e4958c213"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[224]=",ExpressionUUID->"b531b437-84c2-4436-972e-1a2290e9ff41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", "[", 
  RowBox[{"{", 
   RowBox[{".3", ",", ".1"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[225]:=",ExpressionUUID->"daf5c0cb-6ad1-476b-a00c-d221caa16aeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.27100682258605957`", ",", "0.24117133021354675`", ",", 
   "0.4878218472003937`"}], "}"}]], "Output",
 CellLabel->
  "Out[225]=",ExpressionUUID->"16c151c2-8bd5-4bfe-b475-5fd7c2ffdec6"]
}, Open  ]]
}, Open  ]],

Cell["\<\
In many frameworks, input pre-processing and output post-processing can be \
used to handle comparison with non vector quantities. In this case is \
convenient to convert the probability vector the the best class using an \
arg-max operation.\
\>", "Text",ExpressionUUID->"bf01353a-3ad1-40b1-88d5-dbf10973c94d"],

Cell[TextData[{
 "The input and  output of a network can be processed using the functions ",
 StyleBox["NetEncoder", "Code"],
 " and ",
 StyleBox["NetDecoder", "Code"]
}], "Item",ExpressionUUID->"1e890e86-4e0b-454d-950d-7f86fd2b80cb"],

Cell[TextData[{
 "Use the ",
 StyleBox["\[OpenCurlyDoubleQuote]Class\[CloseCurlyDoubleQuote]", "Code"],
 " decoder to apply the arg-max operation to a vector and return the \
correspondent class"
}], "Item",ExpressionUUID->"8f526371-19f2-4792-80fe-a8508a6ee19b"],

Cell[CellGroupData[{

Cell[TextData[{
 "A previously defined network can be modified using the function ",
 StyleBox["NetReplacePart", "Code"]
}], "Item",ExpressionUUID->"4ef0c2c3-9265-4f8d-958e-989547086c58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier2", "=", 
  RowBox[{"NetReplacePart", "[", "\[IndentingNewLine]", 
   RowBox[{"classifier", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "->", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[226]:=",ExpressionUUID->"abc51e9c-c5a5-43f4-9b89-d539739f45e7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"A\"", "\"B\"", "\"C\""}, "InputDepth" -> 
                    1, "Multilabel" -> False, "Dimensions" -> 3, "$Rank" -> 0,
                     "$Version" -> "13.1.2"|>|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[226]=",ExpressionUUID->"3e3b0d4b-9b2e-443d-814a-8494ab872edf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier2", "[", 
  RowBox[{"{", 
   RowBox[{".3", ",", ".1"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[228]:=",ExpressionUUID->"bd633943-4076-4250-b76d-841604684f6a"],

Cell[BoxData["\<\"C\"\>"], "Output",
 CellLabel->
  "Out[228]=",ExpressionUUID->"a4a7157a-20a2-4535-a1af-5b0468094d92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier2", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".3", ",", ".1"}], "}"}], ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"f743f4b2-cc6f-4377-82a1-ad83c3a13218"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.27100682258605957`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.24117133021354675`"}], ",", 
   RowBox[{"\<\"C\"\>", "\[Rule]", "0.4878218472003937`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[229]=",ExpressionUUID->"5b7ebb03-71d1-477a-997d-49fc625c035b"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The training data is the list of points with their correspondent class.\
\>", "Text",ExpressionUUID->"557835c4-3cd7-4c7d-8592-d3e63312fe30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"training", "=", 
  RowBox[{"Catenate", "[", 
   RowBox[{"Thread", "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"data", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"a1b30c25-5543-4592-bbb9-4033bf66b956"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.4916644970555555`", ",", "1.9293981418977926`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.40610351690262436`", ",", "3.536593872440916`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.678019287754793`", ",", "0.6831694154040358`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.9054350638709048`", ",", "2.14294790650831`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.104165555903694`", ",", "0.32689065966865605`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.0357514281233033`", ",", "2.1701861605476003`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.934682193087827`", ",", "1.1731357737770503`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.9090370159707948`", ",", "3.033408636838181`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6364713394457073`", ",", "2.1885909018083654`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.8638577195632682`", ",", "1.9160501684351274`"}], "}"}], 
    "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.4419693631688464`"}], ",", 
      RowBox[{"-", "0.16128157561366452`"}]}], "}"}], 
    "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9900204355472427`"}], ",", "1.148968276676073`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.9076369321769087`"}], ",", "0.9994773910882078`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5102420069249742`"}], ",", "2.382555584706377`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.4515583935388023`"}], ",", "3.1405168379487245`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.852832119865962`"}], ",", "2.6860381397007416`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2800158978985856`", ",", "0.7885357403646205`"}], "}"}], 
    "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.580065886655899`"}], ",", "0.7934503011255667`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.44310452267548106`"}], ",", "2.0273776612666463`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.4142782955862376`"}], ",", "2.8272870434915687`"}], 
     "}"}], "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.9025684095639464`"}], ",", 
      RowBox[{"-", "3.9099309952804635`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.011973129626899`"}], ",", 
      RowBox[{"-", "2.8401609820479483`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.7339959178422912`"}], ",", 
      RowBox[{"-", "3.655464278199778`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.4453601954480217`"}], ",", 
      RowBox[{"-", "2.633757355821462`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.2553076483264354`"}], ",", 
      RowBox[{"-", "2.7496875504116067`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.6686766909004236`"}], ",", 
      RowBox[{"-", "2.685316212125812`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2842314929020076`"}], ",", 
      RowBox[{"-", "3.147646765275222`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.622527271098145`"}], ",", 
      RowBox[{"-", "2.482828584297841`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.9728804951087624`"}], ",", 
      RowBox[{"-", "2.5559844357696497`"}]}], "}"}], "\[Rule]", "\<\"C\"\>"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2883427942045025`"}], ",", 
      RowBox[{"-", "2.4737767645949655`"}]}], "}"}], 
    "\[Rule]", "\<\"C\"\>"}]}], "}"}]], "Output",
 CellLabel->
  "Out[230]=",ExpressionUUID->"295bda85-faaf-4054-9527-92708baa4065"]
}, Open  ]],

Cell[TextData[{
 "The target of this training is a probability distribution, so the Euclidean \
distance between the probability vectors is not a good measure of the error. \
The loss function used for classification training is typically the ",
 StyleBox["cross entropy",
  FontSlant->"Italic"],
 ", which measure the difference between a probability distribution and a \
second, reference probability distribution."
}], "Text",ExpressionUUID->"57d42e84-4322-46c8-ab24-209bcb546644"],

Cell[CellGroupData[{

Cell[TextData[{
 "When using a network ending with a ",
 StyleBox["SoftmaxLayer", "Code"],
 ", a ",
 StyleBox["CrossEntropyLossLayer", "Code"],
 " is automatically used as loss function"
}], "Item",ExpressionUUID->"72ed2de2-114c-41da-b70f-f98ea66608f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier3", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"classifier2", ",", "training", ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ProgressIndicator\>\"", ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"List", "ListIcon", 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["List", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["2", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["2216", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]},
          "IconizedObject"]],
        {Row[
          MapThread[BarChart[{
             Replace[#, 
              Thread[{"A", "B", "C"} -> IdentityMatrix[3]]], #2}, ImageSize -> 
            Small, PlotLabel -> Row[{"Example from cluster ", #3}]]& , {
            Part[$CellContext`training, {1, 11, 21}, 2], 
            Slot["Net"][
             Part[$CellContext`training, {1, 11, 21}, 1], 
             NetPort[2, "Output"]], {1, 2, 3}}]]& , "Interval" -> 
         Quantity[1, "Seconds"]},
        SelectWithContents->True,
        Selectable->False]}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[234]:=",ExpressionUUID->"b767f7f1-8945-41db-be39-365a021ea841"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"A\"", "\"B\"", "\"C\""}, "InputDepth" -> 
                    1, "Multilabel" -> False, "Dimensions" -> 3, "$Rank" -> 0,
                     "$Version" -> "13.1.2"|>|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[234]=",ExpressionUUID->"47cca181-11d3-4448-a4d6-a930eaa46512"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"classifier3", "[", 
  RowBox[{"training", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"training", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[232]:=",ExpressionUUID->"ea58a9aa-38e9-4725-9274-d91fd6b0fdbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[232]=",ExpressionUUID->"76b06922-c593-4a06-a496-0205ef6285a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"C\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[233]=",ExpressionUUID->"8321df06-45b9-4189-a6e0-de8e73cf0eb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"825c3de1-1203-447d-a691-4e51086b87e5"],

Cell[CellGroupData[{

Cell["Data encoding", "Section",ExpressionUUID->"459fd154-1a7d-4ce5-8813-e17ff1c31470"],

Cell["\<\
In some cases we might have some prior knowledge about the type of function \
we are trying to model.\[LineSeparator]Here the target function is a linear \
combination of some non-liner transformation of the input.\
\>", "Text",ExpressionUUID->"61e427c6-9d6b-45d3-96e1-bcc6f53cd0be"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"2", "x"}], "+", 
   RowBox[{".3", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"3", "y"}], "+", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}]}]}], "Input",
 CellLabel->
  "In[237]:=",ExpressionUUID->"9c4704b9-51be-4184-ac32-0881de27ba4b"],

Cell["\<\
In this case we can move the non-linear part to the data pre-processing and \
still use our previous predictor.\
\>", "Text",ExpressionUUID->"7024e0a7-d4f9-4084-b884-6144f8e01fcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoderFunction", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x", ",", 
    RowBox[{"x", "^", "2"}], ",", "y", ",", 
    RowBox[{"y", "^", "2"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[239]:=",ExpressionUUID->"aa407458-7178-4795-80ce-b1d59f868a45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"encoderFunction", "[", 
  RowBox[{"{", 
   RowBox[{".4", ",", 
    RowBox[{"-", ".2"}]}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[240]:=",ExpressionUUID->"6ea8161d-8c0a-4e47-8cb4-c19c52c8c319"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0.4`", ",", "0.16000000000000003`", ",", 
   RowBox[{"-", "0.2`"}], ",", "0.04000000000000001`"}], "}"}]], "Output",
 CellLabel->
  "Out[240]=",ExpressionUUID->"13c52a3d-cbb8-4d39-a1b0-cfda7862024d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["\[OpenCurlyDoubleQuote]Function\[CloseCurlyDoubleQuote]", "Input"],
 " encoder can perform an arbitrary transformation"
}], "Item",ExpressionUUID->"b9d08f2a-c6d2-40a0-8afd-9b92e6103122"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"encoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Function\>\"", ",", "encoderFunction", ",", 
     RowBox[{"{", "5", "}"}]}], "}"}], "]"}]}]], "Input",
 CellLabel->
  "In[241]:=",ExpressionUUID->"700357ba-ba42-459b-88f2-88b7825a3331"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Function\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Function\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["encoderFunction", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Pattern\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"None\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Batched\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[241]=",ExpressionUUID->"56b11f93-5821-46d8-b5e4-79dc5ea89c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"encoder", "[", 
  RowBox[{"{", 
   RowBox[{".4", ",", 
    RowBox[{"-", ".2"}]}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"017e30cf-8fb0-4d85-b72f-cb4820455770"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.4`", ",", "0.16000000000000003`", ",", 
   RowBox[{"-", "0.2`"}], ",", "0.04000000000000001`"}], "}"}]], "Output",
 CellLabel->
  "Out[363]=",ExpressionUUID->"754c02b2-e435-4b8f-ba35-135d8b3f524b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The encoder can then be assigned to a network port  or even a layer port\
\>", "Item",ExpressionUUID->"f90e73f8-bbae-45d3-9a63-6f4e6c76a036"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "=", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"LinearLayer", "[", 
      RowBox[{"\"\<Output\>\"", "->", "\"\<Real\>\""}], "]"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "->", "encoder"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[423]:=",ExpressionUUID->"22c9eb08-1d25-46b6-b136-66f83df10ed0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 5}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Type" -> "Function", 
                    "Function" -> $CellContext`encoderFunction, "OutputType" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                    "Batched" -> False, 
                    "Initialization" -> (
                    Initialization :> ($CellContext`encoderFunction[{
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]]}] := Tooltip[{1, $CellContext`x, 
                    Skeleton[2], $CellContext`y^2}, {
                    1, $CellContext`x, $CellContext`x^2, $CellContext`y, \
$CellContext`y^2}])), "$Version" -> "13.0.3"|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"expression\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[423]=",ExpressionUUID->"4cc6ce92-02e2-4121-8ad8-e0bd72221cac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearLayer", "[", 
  RowBox[{
   RowBox[{"\"\<Output\>\"", "->", "\"\<Real\>\""}], ",", 
   RowBox[{"\"\<Input\>\"", "->", "encoder"}]}], "]"}]], "Input",
 CellLabel->
  "In[583]:=",ExpressionUUID->"2da0df94-ca6e-427f-be91-63e4faec7838"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`FormattingLayers`opart, 
                   NeuralNetworks`Private`FormattingLayers`part, 
                   NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"expression\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Inputs", "Input"} -> <|
                    "Form" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Type" -> "Function", 
                    "Function" -> $CellContext`encoderFunction, "OutputType" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                    "Batched" -> False, 
                    "Initialization" -> (
                    Initialization :> ($CellContext`encoderFunction[{
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]]}] := Tooltip[{1, $CellContext`x, 
                    Skeleton[2], $CellContext`y^2}, {
                    1, $CellContext`x, $CellContext`x^2, $CellContext`y, \
$CellContext`y^2}])), "$Version" -> "13.0.3"|>|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[583]=",ExpressionUUID->"af775c33-a59b-41d4-81e3-289966f3a773"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Other useful encoders include ",
 StyleBox["\[OpenCurlyDoubleQuote]Image\[CloseCurlyDoubleQuote]", "Input"],
 ", ",
 StyleBox["\[OpenCurlyDoubleQuote]Audio\[CloseCurlyDoubleQuote]", "Input"],
 ", ",
 StyleBox["\[OpenCurlyDoubleQuote]Tokens\[CloseCurlyDoubleQuote]", "Input"],
 ", ",
 StyleBox["\[OpenCurlyDoubleQuote]Video\[CloseCurlyDoubleQuote]", "Input"],
 " and more"
}], "Item",ExpressionUUID->"6170d22f-b436-4510-a918-718e2aab25a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageencoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellLabel->
  "In[373]:=",ExpressionUUID->"d30212e7-922c-4b88-a337-a65744e3e58e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]5\[Times]5\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Image Size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   PaneBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5"}], "}"}], Short[#, 3]& ], 
                    BaseStyle -> {
                    IndentMaxFraction -> 0.1, ShowStringCharacters -> False}, 
                    ContentPadding -> False, ImageSize -> {250}], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color Space\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"RGB\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color Channels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Mean Image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Variance Image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Data Transposed\"", "\":\""}, "RowDefault"],
                   "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]5\[Times]5\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[373]=",ExpressionUUID->"da7de75c-7cd5-4975-b65b-a34b100099f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"imageencoder", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5DJBsUgNgNDgz0D
HGCw7Ulk09AcUuWoZQ7MXQzEsmlqDgBZOSLd
      "], {{0, 6.}, {6., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{77.88723754882812, Automatic},
    ImageSizeRaw->{6., 6.},
    PlotRange->{{0, 6.}, {0, 6.}}], "]"}], "//", 
  RowBox[{"Map", "[", "MatrixForm", "]"}]}]], "Input",
 CellLabel->
  "In[374]:=",ExpressionUUID->"5e00d470-86d9-4d25-ac0e-13fc694ac699"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`", "1.`", "1.`", "1.`", "1.`"},
       {"1.`", "1.`", "1.`", "1.`", "1.`"},
       {"1.`", "1.`", "0.`", "0.`", "0.`"},
       {"0.5`", "0.5`", "0.5`", "0.`", "0.`"},
       {"0.5`", "0.5`", "0.5`", "0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`", "0.5`", "0.5`", "0.5`"},
       {"0.`", "0.`", "0.5`", "0.5`", "0.5`"},
       {"0.`", "0.`", "1.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "1.`", "1.`"},
       {"0.5`", "0.5`", "0.5`", "1.`", "1.`"},
       {"0.5`", "0.5`", "0.5`", "1.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->
  "Out[374]=",ExpressionUUID->"2ab4d09e-43c4-49a3-a563-5a503dd1eb0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d5451202-2ff9-4d79-aa30-3d2fa74877f2"],

Cell[CellGroupData[{

Cell["Training and Validation", "Section",ExpressionUUID->"59f4ce48-7f18-4fd0-bcbd-6f9f5a462280"],

Cell[TextData[{
 "For this training, we generate some more data from a slightly larger domain \
to check how well the model is generalizing.\nThis data is generally called ",
 StyleBox["validation data",
  FontSlant->"Italic"],
 " and is important to keep it separate from the training data."
}], "Text",ExpressionUUID->"17cbf5b1-1f68-4747-a512-4f0685a7c40c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"f", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "2"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"f", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "2"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[385]:=",ExpressionUUID->"8e962c65-40ea-489b-902e-daf4aa7dfc98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Append", "@@@", "training"}], ",", 
     RowBox[{"Append", "@@@", "validation"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<training\>\"", ",", "\"\<validation\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[388]:=",ExpressionUUID->"9dd1fde5-dc1f-4504-bed7-b236f340a2e0"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        RGBColor[1, 0, 0], 
        PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], 
        Point3DBox[{7.532169851483857, 0.43928500403754356`, 
         3.276280255134095}], 
        Point3DBox[{-8.27553146091735, -2.441740913902283, 
         32.44140206255657}], 
        Point3DBox[{-9.767108540615066, 8.54532326684324, 75.8507626027968}], 
        Point3DBox[{
         0.8751353390213623, -0.41336659055150804`, -3.548594757898639}], 
        Point3DBox[{-5.093015444385905, 5.19792003123176, 36.5216897673246}], 
        Point3DBox[{
         9.699859950886086, -5.659097568733227, -7.856693688350028}], 
        Point3DBox[{-0.8196562614982383, 7.694583374099061, 
         25.359283126093878`}], 
        Point3DBox[{
         1.6770857198029745`, -4.720536649999396, -16.669167121601717`}], 
        Point3DBox[{8.391203247282576, -1.5232955420576921`, 
         1.2032872408710427`}], 
        Point3DBox[{9.745806233326164, 1.7588531238907024`, 
         16.720932507889813`}], 
        Point3DBox[{-8.343902132101434, 5.804292609629471, 57.2989175731084}], 
        Point3DBox[{3.9231786572069467`, 5.037324677170886, 
         14.864062570150063`}], 
        Point3DBox[{-1.9690154632734114`, 2.654825152373398, 
         13.90498794447268}], 
        Point3DBox[{
         6.487894417457689, -7.8892331571369425`, -24.805683931849934`}], 
        Point3DBox[{-0.574767011026335, -3.8000100540514694`, \
-7.6006014511772655`}], 
        Point3DBox[{
         5.63604641693717, -5.672639397142522, -19.050846876405778`}], 
        Point3DBox[{-5.767939044480208, 7.587559036784157, 45.9566289466489}], 
        Point3DBox[{-1.8369900352007882`, 3.5735232771114838`, 
         17.253826840556275`}], 
        Point3DBox[{
         7.1207507000379096`, -9.843640858669836, -28.02505238847208}], 
        Point3DBox[{
         3.036030417159111, -3.5222105206380334`, -13.814822411979726`}], 
        Point3DBox[{3.157587758379549, 5.339539173669166, 
         15.437600513817555`}], 
        Point3DBox[{
         2.120030164211755, -9.489474126798164, -30.9606134139559}], 
        Point3DBox[{2.323901151034555, 2.3202839452223216`, 
         3.4399892653425943`}], 
        Point3DBox[{
         6.9368646162035645`, -2.1906790427126808`, -4.522237151098127}], 
        Point3DBox[{8.761616639853791, -2.4685540701046484`, 
         0.5146145337819821}], 
        Point3DBox[{
         8.017288385448673, -7.581970512011182, -18.707391062560454`}], 
        Point3DBox[{-5.4601148928801635`, 9.7267584128641, 
         49.785964114735044`}], 
        Point3DBox[{
         6.293337898999155, -7.00694076321178, -21.79989624786244}], 
        Point3DBox[{
         8.115893178376233, -5.1941755373756635`, -9.627611148700797}], 
        Point3DBox[{-5.975536412760931, -9.050596810932259, \
-2.270484246706811}], 
        Point3DBox[{
         3.9469344992863427`, -7.569937332483967, -22.939620873891638`}], 
        Point3DBox[{2.4030904537320836`, 6.437752470104684, 
         17.303489421945898`}], 
        Point3DBox[{
         9.66367462201812, -5.353760520895463, -5.708226943188199}], 
        Point3DBox[{-8.271513838578578, 9.997696347239945, 66.1172306350519}], 
        Point3DBox[{-2.987937502329004, 4.187066425987666, 
         23.90784713369778}], 
        Point3DBox[{-0.8653390099878422, 1.278606136950117, 
         8.039671114702942}], 
        Point3DBox[{9.437274834375664, -1.75615599947335, 1.61854000988839}], 
        Point3DBox[{1.4364085889291047`, 
         0.1089073403148717, -2.125002464776366}], 
        Point3DBox[{-2.234563640029336, -0.6176209028173076, 
         4.367560753598508}], 
        Point3DBox[{9.38817914578911, 7.587932282991098, 32.33708716514548}], 
        Point3DBox[{
         7.714639161866863, -1.2764563664904038`, -0.7991161552846284}], 
        Point3DBox[{
         8.370863093285365, -7.547695936210445, -18.260089980426883`}], 
        Point3DBox[{-0.5288860103022586, 1.5699491353374455`, 
         7.367148676381714}], 
        Point3DBox[{-8.775192430608566, -6.69488748657621, 
         20.76438974343391}], 
        Point3DBox[{-7.405652508367524, -2.925910804481834, 
         21.9004528767356}], 
        Point3DBox[{-1.1184679593198013`, 6.520110066718658, 
         23.090164786902882`}], 
        Point3DBox[{6.634034690162764, 8.82215772501268, 
         28.112169866336068`}], 
        Point3DBox[{
         3.929776292601346, -0.42636389294203525`, -3.5006051966649636`}], 
        Point3DBox[{-9.09680105909182, 6.193632783187994, 62.34096659776681}], 
        Point3DBox[{-6.989089308251447, -7.778053658409249, 
         5.101933968505335}], 
        Point3DBox[{8.946801618501816, 0.034441671091244075`, 
         7.013830863570251}], 
        Point3DBox[{4.375984588585602, 8.598435523646714, 
         24.271995058019154`}], 
        Point3DBox[{4.130609603091685, 8.726523610528659, 
         23.391814545116063`}], 
        Point3DBox[{-7.903201159134781, 6.9696258121919215`, 
         58.305871430756525`}], 
        Point3DBox[{
         0.3826938762634349, -4.784667061572829, -13.942307176399586`}], 
        Point3DBox[{
         7.407300057039393, -3.6663851288487415`, -7.231441301526239}], 
        Point3DBox[{-4.7505570854639565`, -2.7686332478132236`, 
         7.031341644072315}], 
        Point3DBox[{-6.897021114501413, 6.894271742717862, 
         50.65167248112924}], 
        Point3DBox[{9.388367578781668, 3.863753013691337, 
         18.667807913855725`}], 
        Point3DBox[{
         0.9426473697128444, -3.783311015837022, -13.534599420597248`}], 
        Point3DBox[{-1.7156845171528872`, -3.4143958943290684`, \
-3.345765758731887}], 
        Point3DBox[{-5.157286906391892, 8.26093683914349, 
         43.712098932231896`}], 
        Point3DBox[{-3.9983706610046212`, 8.179137281849663, 
         38.51514402636806}], 
        Point3DBox[{8.728713198213704, 4.8649459476339345`, 
         22.993050048379445`}], 
        Point3DBox[{
         6.357072400171887, -7.877366471828246, -24.83254824249416}], 
        Point3DBox[{-7.312939493169445, -5.323441440495351, 
         14.351349262015749`}], 
        Point3DBox[{6.575806785265868, 2.627169034360321, 9.362051595792835}], 
        Point3DBox[{1.4816398007064713`, 1.4131832524128818`, 
         4.22304781963171}], 
        Point3DBox[{2.060500292672586, 7.087202031476011, 
         20.725678250481117`}], 
        Point3DBox[{-6.682163836278473, -5.607614693274556, 
         12.061566732485591`}], 
        Point3DBox[{
         2.5115759109078866`, -9.755205516847386, -31.429838521990334`}], 
        Point3DBox[{-3.803471272266435, 4.8222152862650205`, 
         27.330480754835897`}], 
        Point3DBox[{-9.860908513594637, 1.4403016227420373`, 
         55.102482777289715`}], 
        Point3DBox[{
         8.090836665944735, -7.518773496020195, -16.729837772162664`}], 
        Point3DBox[{0.23392683203084275`, 7.161284597397952, 
         22.829822943478845`}], 
        Point3DBox[{3.5725907814740623`, 5.775099102822182, 
         15.00905671922806}], 
        Point3DBox[{
         6.831074944787588, -6.717569242817287, -19.565183897889703`}], 
        Point3DBox[{1.873405644153884, 4.032903598343822, 9.63101439648813}], 
        Point3DBox[{
         8.763546935956214, -6.958430643929958, -15.003531874013799`}], 
        Point3DBox[{-5.827271168302872, -2.5768012489271968`, 
         16.321641862839396`}], 
        Point3DBox[{
         6.588747266256554, -1.7082292607260818`, -3.994879322188675}], 
        Point3DBox[{-3.427087237127168, -3.2253613631891263`, 
         3.344248990092817}], 
        Point3DBox[{-4.455981362101781, -7.427682966109444, \
-7.586245445668695}], 
        Point3DBox[{-4.3774489686636215`, 8.312171797944607, 
         39.206905751272124`}], 
        Point3DBox[{-1.505718591213565, 6.3018531891365654`, 
         22.70457638984185}], 
        Point3DBox[{-7.022262403237434, 7.332863720636837, 52.424465804089}], 
        Point3DBox[{
         9.939630124540585, -8.317671987117272, -14.024261588891573`}], 
        Point3DBox[{
         7.494443250036731, -8.536392957260613, -21.42947577365701}], 
        Point3DBox[{8.606799406906212, 1.0472343655023408`, 
         7.239523731968577}], 
        Point3DBox[{
         1.68939826415372, -9.979381493390672, -30.999813885393074`}], 
        Point3DBox[{-1.1716813046770795`, 9.518823646529817, 
         32.5392307346978}], 
        Point3DBox[{
         4.033969429873842, -9.412348075147321, -29.620052674577455`}], 
        Point3DBox[{0.18824688601781858`, 9.647708620335358, 
         28.05726570919298}], 
        Point3DBox[{8.428346653358517, 0.2506370812088754, 
         4.2698147466524174`}], 
        Point3DBox[{5.9785021381166175`, 0.2358610392973013, 
         0.49280796390016945`}], 
        Point3DBox[{0.5588089861118846, 4.477788933894111, 
         13.242260026818181`}], 
        Point3DBox[{
         2.6156691351529986`, -2.7914304667269683`, -11.690947081029742`}], 
        Point3DBox[{-3.2987787720692268`, 3.8515352528414653`, 
         21.84282186421442}], 
        Point3DBox[{
         8.707753904861718, -8.685839486779873, -19.829464523625095`}], 
        Point3DBox[{9.891923977092965, 8.857497958871903, 
         37.356621010306526`}]}, {
        RGBColor[0, 0, 1], 
        PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], 
        Point3DBox[{-17.131353009265872`, -0.79667594529176, 
         122.14497998552491`}], 
        Point3DBox[{5.749071618235078, 9.705325625469214, 
         28.184135389257122`}], 
        Point3DBox[{2.0123854357893123`, 8.558167223243544, 
         23.18041821671873}], 
        Point3DBox[{-16.42654979569987, -2.917563039600438, 
         106.67474956136765`}], 
        Point3DBox[{-15.764349487448243`, -18.576155049960022`, 
         51.288006733082234`}], 
        Point3DBox[{18.78404182045078, -11.749476145753363`, 
         35.61416266673248}], 
        Point3DBox[{-2.1380352114613643`, 18.125773458725675`, 
         61.632167681062604`}], 
        Point3DBox[{18.236614348648516`, 6.878314085298612, 
         83.66722173240177}], 
        Point3DBox[{11.757794968861617`, -1.938582914194086, 
         12.770522767000127`}], 
        Point3DBox[{
         15.38824682326181, -16.745744977887547`, -8.42473211827788}], 
        Point3DBox[{-2.8517898332893736`, 5.3538256190125395`, 
         24.23432969350361}], 
        Point3DBox[{5.019462921048685, 14.15663781106386, 40.12039219768421}], 
        Point3DBox[{-5.946818928995292, 16.82496842852393, 
         75.31575123481431}], 
        Point3DBox[{-1.5606811983436657`, 3.068322736016256, 
         12.207508928426268`}], 
        Point3DBox[{17.39043435966893, 8.542549335055881, 83.38525853515479}], 
        Point3DBox[{-13.79288931578963, -19.10270174963855, 
         28.265997075527515`}], 
        Point3DBox[{
         1.471779529375688, -17.360839232243023`, -54.58335400654618}], 
        Point3DBox[{-11.693307429132993`, -0.05398620113852104, 
         63.57551590739411}], 
        Point3DBox[{6.7793756764910995`, 19.88619303959196, 
         59.80578109450175}], 
        Point3DBox[{14.161961741710357`, 2.1123519919886036`, 
         39.826643574833724`}], 
        Point3DBox[{
         2.159221340073813, -7.275235287013338, -24.804682307561738`}], 
        Point3DBox[{-0.3208338352443292, -17.817359314976038`, \
-49.99793007175367}], 
        Point3DBox[{-12.396190888851052`, 7.448990202280527, 
         93.62909940458906}], 
        Point3DBox[{-12.55651038022414, -6.371013023085219, 
         52.5918706375843}], 
        Point3DBox[{
         13.807534697869869`, -17.032590039365544`, -19.38635951409229}], 
        Point3DBox[{6.883075399336562, 9.523437259576554, 31.97845054559673}], 
        Point3DBox[{
         13.807040378358508`, -11.966412551931604`, -7.192892149337375}], 
        Point3DBox[{19.93298299665301, -11.813052791079947`, 
         44.21495205840404}], 
        Point3DBox[{5.796872712988673, 14.42756410856694, 43.98682543296472}], 
        Point3DBox[{4.267537976512699, 16.209725299786, 46.452805330925415`}], 
        Point3DBox[{-2.1398090762346484`, 11.168121760863528`, 
         40.48931373261948}], 
        Point3DBox[{-14.218818499123067`, 7.355207368181311, 
         110.29791650307384`}], 
        Point3DBox[{15.832779306885058`, 1.6457240993565563`, 
         50.946865166214465`}], 
        Point3DBox[{11.763812638663879`, -4.216454668284875, 
         6.287380467513961}], 
        Point3DBox[{-13.378508960992967`, 16.367790763537982`, 
         131.6036468803004}], 
        Point3DBox[{10.666386181757417`, 7.151000955314302, 
         34.596854269339566`}], 
        Point3DBox[{-6.324158760768427, 7.299132329464186, 
         48.36868724188575}], 
        Point3DBox[{17.142283437781956`, 12.501090439303951`, 
         93.81007962514212}], 
        Point3DBox[{-14.96724160594259, -3.0679630198904206`, 
         87.3120680789829}], 
        Point3DBox[{10.86018202354397, 5.406157869605352, 31.88412502002243}], 
        Point3DBox[{-1.4656753929374489`, 0.4223630653535153, 
         6.681281014118396}], 
        Point3DBox[{16.53910925129594, 10.62841974463933, 81.57001496501104}], 
        Point3DBox[{13.290207213382374`, 12.253562962616755`, 
         65.24097229965977}], 
        Point3DBox[{-9.687347709351613, -14.189446392633755`, 
         6.960979021836408}], 
        Point3DBox[{-15.130121291062991`, 7.965385969908226, 
         125.77289752718744`}], 
        Point3DBox[{
         7.761395381048061, -1.2370224437211803`, -1.8526648137801178`}], 
        Point3DBox[{-8.143600809160418, 5.634863747084225, 
         52.976336203861095`}], 
        Point3DBox[{-5.11325410838171, -9.451872251393581, \
-11.003888782518665`}], 
        Point3DBox[{-14.89334350472133, 9.764271084100685, 
         125.92449443423982`}], 
        Point3DBox[{-14.508731400563981`, 4.641963424108951, 
         105.22587831196296`}]}}, {}, {}}, {}}, Axes -> True, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {360., 344.2321404598351}, 
    Lighting -> {{"Ambient", 
       GrayLevel[0.5]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{0, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 0, 2}]}}, 
    PlotRange -> {{-17.131353009265872`, 
      19.93298299665301}, {-19.10270174963855, 19.88619303959196}, Automatic},
     PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.4378228416173921, 
    ViewPoint -> {0.7029725555026981, -3.0736224565475614`, 
     1.2282811489298933`}, 
    ViewVertical -> {0.016600064984570142`, -0.10517779554254447`, 
     0.9943148742562986}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"training\"", "\"validation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[388]=",ExpressionUUID->"1d1a9c94-7669-4285-a837-ab3f1d4bb098"]
}, {2}]],

Cell["\<\
In this case, training the linear combination of non linear functions \
generalizes well to the validation set.\
\>", "Text",ExpressionUUID->"e9c64e20-168e-45ab-a50b-ba7aa5a80d5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearfit", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Rule", "@@@", "training"}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Rule", "@@@", "validation"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[424]:=",ExpressionUUID->"e34bad94-a6ff-417b-bc97-94e22abedc7d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Type" -> "Function", 
                    "Function" -> $CellContext`encoderFunction, "OutputType" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                    "Batched" -> False, 
                    "Initialization" -> (
                    Initialization :> ($CellContext`encoderFunction[{
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]]}] := Tooltip[{1, $CellContext`x, 
                    Skeleton[2], $CellContext`y^2}, {
                    1, $CellContext`x, $CellContext`x^2, $CellContext`y, \
$CellContext`y^2}])), "$Version" -> "13.0.3"|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"expression\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[424]=",ExpressionUUID->"486daad5-fb38-45bd-8396-9347bc0918d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Append", "@@@", "training"}], ",", 
       RowBox[{"Append", "@@@", "validation"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<training\>\"", ",", "\"\<validation\>\""}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"linearfit", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
     RowBox[{"Lighting", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[425]:=",ExpressionUUID->"beacdef6-b0c5-4c02-8895-8f5e2f340998"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{{
         RGBColor[1, 0, 0], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{7.532169851483857, 0.43928500403754356`, 
          3.276280255134095}], 
         Point3DBox[{-8.27553146091735, -2.441740913902283, 
          32.44140206255657}], 
         Point3DBox[{-9.767108540615066, 8.54532326684324, 75.8507626027968}], 
         Point3DBox[{
          0.8751353390213623, -0.41336659055150804`, -3.548594757898639}], 
         Point3DBox[{-5.093015444385905, 5.19792003123176, 36.5216897673246}], 
         Point3DBox[{
          9.699859950886086, -5.659097568733227, -7.856693688350028}], 
         Point3DBox[{-0.8196562614982383, 7.694583374099061, 
          25.359283126093878`}], 
         Point3DBox[{
          1.6770857198029745`, -4.720536649999396, -16.669167121601717`}], 
         Point3DBox[{8.391203247282576, -1.5232955420576921`, 
          1.2032872408710427`}], 
         Point3DBox[{9.745806233326164, 1.7588531238907024`, 
          16.720932507889813`}], 
         Point3DBox[{-8.343902132101434, 5.804292609629471, 
          57.2989175731084}], 
         Point3DBox[{3.9231786572069467`, 5.037324677170886, 
          14.864062570150063`}], 
         Point3DBox[{-1.9690154632734114`, 2.654825152373398, 
          13.90498794447268}], 
         Point3DBox[{
          6.487894417457689, -7.8892331571369425`, -24.805683931849934`}], 
         Point3DBox[{-0.574767011026335, -3.8000100540514694`, \
-7.6006014511772655`}], 
         Point3DBox[{
          5.63604641693717, -5.672639397142522, -19.050846876405778`}], 
         Point3DBox[{-5.767939044480208, 7.587559036784157, 
          45.9566289466489}], 
         Point3DBox[{-1.8369900352007882`, 3.5735232771114838`, 
          17.253826840556275`}], 
         Point3DBox[{
          7.1207507000379096`, -9.843640858669836, -28.02505238847208}], 
         Point3DBox[{
          3.036030417159111, -3.5222105206380334`, -13.814822411979726`}], 
         Point3DBox[{3.157587758379549, 5.339539173669166, 
          15.437600513817555`}], 
         Point3DBox[{
          2.120030164211755, -9.489474126798164, -30.9606134139559}], 
         Point3DBox[{2.323901151034555, 2.3202839452223216`, 
          3.4399892653425943`}], 
         Point3DBox[{
          6.9368646162035645`, -2.1906790427126808`, -4.522237151098127}], 
         Point3DBox[{8.761616639853791, -2.4685540701046484`, 
          0.5146145337819821}], 
         Point3DBox[{
          8.017288385448673, -7.581970512011182, -18.707391062560454`}], 
         Point3DBox[{-5.4601148928801635`, 9.7267584128641, 
          49.785964114735044`}], 
         Point3DBox[{
          6.293337898999155, -7.00694076321178, -21.79989624786244}], 
         Point3DBox[{
          8.115893178376233, -5.1941755373756635`, -9.627611148700797}], 
         Point3DBox[{-5.975536412760931, -9.050596810932259, \
-2.270484246706811}], 
         Point3DBox[{
          3.9469344992863427`, -7.569937332483967, -22.939620873891638`}], 
         Point3DBox[{2.4030904537320836`, 6.437752470104684, 
          17.303489421945898`}], 
         Point3DBox[{
          9.66367462201812, -5.353760520895463, -5.708226943188199}], 
         Point3DBox[{-8.271513838578578, 9.997696347239945, 
          66.1172306350519}], 
         Point3DBox[{-2.987937502329004, 4.187066425987666, 
          23.90784713369778}], 
         Point3DBox[{-0.8653390099878422, 1.278606136950117, 
          8.039671114702942}], 
         Point3DBox[{9.437274834375664, -1.75615599947335, 1.61854000988839}], 
         Point3DBox[{1.4364085889291047`, 
          0.1089073403148717, -2.125002464776366}], 
         Point3DBox[{-2.234563640029336, -0.6176209028173076, 
          4.367560753598508}], 
         Point3DBox[{9.38817914578911, 7.587932282991098, 32.33708716514548}], 
         Point3DBox[{
          7.714639161866863, -1.2764563664904038`, -0.7991161552846284}], 
         Point3DBox[{
          8.370863093285365, -7.547695936210445, -18.260089980426883`}], 
         Point3DBox[{-0.5288860103022586, 1.5699491353374455`, 
          7.367148676381714}], 
         Point3DBox[{-8.775192430608566, -6.69488748657621, 
          20.76438974343391}], 
         Point3DBox[{-7.405652508367524, -2.925910804481834, 
          21.9004528767356}], 
         Point3DBox[{-1.1184679593198013`, 6.520110066718658, 
          23.090164786902882`}], 
         Point3DBox[{6.634034690162764, 8.82215772501268, 
          28.112169866336068`}], 
         Point3DBox[{
          3.929776292601346, -0.42636389294203525`, -3.5006051966649636`}], 
         Point3DBox[{-9.09680105909182, 6.193632783187994, 
          62.34096659776681}], 
         Point3DBox[{-6.989089308251447, -7.778053658409249, 
          5.101933968505335}], 
         Point3DBox[{8.946801618501816, 0.034441671091244075`, 
          7.013830863570251}], 
         Point3DBox[{4.375984588585602, 8.598435523646714, 
          24.271995058019154`}], 
         Point3DBox[{4.130609603091685, 8.726523610528659, 
          23.391814545116063`}], 
         Point3DBox[{-7.903201159134781, 6.9696258121919215`, 
          58.305871430756525`}], 
         Point3DBox[{
          0.3826938762634349, -4.784667061572829, -13.942307176399586`}], 
         Point3DBox[{
          7.407300057039393, -3.6663851288487415`, -7.231441301526239}], 
         Point3DBox[{-4.7505570854639565`, -2.7686332478132236`, 
          7.031341644072315}], 
         Point3DBox[{-6.897021114501413, 6.894271742717862, 
          50.65167248112924}], 
         Point3DBox[{9.388367578781668, 3.863753013691337, 
          18.667807913855725`}], 
         Point3DBox[{
          0.9426473697128444, -3.783311015837022, -13.534599420597248`}], 
         Point3DBox[{-1.7156845171528872`, -3.4143958943290684`, \
-3.345765758731887}], 
         Point3DBox[{-5.157286906391892, 8.26093683914349, 
          43.712098932231896`}], 
         Point3DBox[{-3.9983706610046212`, 8.179137281849663, 
          38.51514402636806}], 
         Point3DBox[{8.728713198213704, 4.8649459476339345`, 
          22.993050048379445`}], 
         Point3DBox[{
          6.357072400171887, -7.877366471828246, -24.83254824249416}], 
         Point3DBox[{-7.312939493169445, -5.323441440495351, 
          14.351349262015749`}], 
         Point3DBox[{6.575806785265868, 2.627169034360321, 
          9.362051595792835}], 
         Point3DBox[{1.4816398007064713`, 1.4131832524128818`, 
          4.22304781963171}], 
         Point3DBox[{2.060500292672586, 7.087202031476011, 
          20.725678250481117`}], 
         Point3DBox[{-6.682163836278473, -5.607614693274556, 
          12.061566732485591`}], 
         Point3DBox[{
          2.5115759109078866`, -9.755205516847386, -31.429838521990334`}], 
         Point3DBox[{-3.803471272266435, 4.8222152862650205`, 
          27.330480754835897`}], 
         Point3DBox[{-9.860908513594637, 1.4403016227420373`, 
          55.102482777289715`}], 
         Point3DBox[{
          8.090836665944735, -7.518773496020195, -16.729837772162664`}], 
         Point3DBox[{0.23392683203084275`, 7.161284597397952, 
          22.829822943478845`}], 
         Point3DBox[{3.5725907814740623`, 5.775099102822182, 
          15.00905671922806}], 
         Point3DBox[{
          6.831074944787588, -6.717569242817287, -19.565183897889703`}], 
         Point3DBox[{1.873405644153884, 4.032903598343822, 9.63101439648813}], 
         Point3DBox[{
          8.763546935956214, -6.958430643929958, -15.003531874013799`}], 
         Point3DBox[{-5.827271168302872, -2.5768012489271968`, 
          16.321641862839396`}], 
         Point3DBox[{
          6.588747266256554, -1.7082292607260818`, -3.994879322188675}], 
         Point3DBox[{-3.427087237127168, -3.2253613631891263`, 
          3.344248990092817}], 
         Point3DBox[{-4.455981362101781, -7.427682966109444, \
-7.586245445668695}], 
         Point3DBox[{-4.3774489686636215`, 8.312171797944607, 
          39.206905751272124`}], 
         Point3DBox[{-1.505718591213565, 6.3018531891365654`, 
          22.70457638984185}], 
         Point3DBox[{-7.022262403237434, 7.332863720636837, 52.424465804089}], 
         Point3DBox[{
          9.939630124540585, -8.317671987117272, -14.024261588891573`}], 
         Point3DBox[{
          7.494443250036731, -8.536392957260613, -21.42947577365701}], 
         Point3DBox[{8.606799406906212, 1.0472343655023408`, 
          7.239523731968577}], 
         Point3DBox[{
          1.68939826415372, -9.979381493390672, -30.999813885393074`}], 
         Point3DBox[{-1.1716813046770795`, 9.518823646529817, 
          32.5392307346978}], 
         Point3DBox[{
          4.033969429873842, -9.412348075147321, -29.620052674577455`}], 
         Point3DBox[{0.18824688601781858`, 9.647708620335358, 
          28.05726570919298}], 
         Point3DBox[{8.428346653358517, 0.2506370812088754, 
          4.2698147466524174`}], 
         Point3DBox[{5.9785021381166175`, 0.2358610392973013, 
          0.49280796390016945`}], 
         Point3DBox[{0.5588089861118846, 4.477788933894111, 
          13.242260026818181`}], 
         Point3DBox[{
          2.6156691351529986`, -2.7914304667269683`, -11.690947081029742`}], 
         Point3DBox[{-3.2987787720692268`, 3.8515352528414653`, 
          21.84282186421442}], 
         Point3DBox[{
          8.707753904861718, -8.685839486779873, -19.829464523625095`}], 
         Point3DBox[{9.891923977092965, 8.857497958871903, 
          37.356621010306526`}]}, {
         RGBColor[0, 0, 1], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{-17.131353009265872`, -0.79667594529176, 
          122.14497998552491`}], 
         Point3DBox[{5.749071618235078, 9.705325625469214, 
          28.184135389257122`}], 
         Point3DBox[{2.0123854357893123`, 8.558167223243544, 
          23.18041821671873}], 
         Point3DBox[{-16.42654979569987, -2.917563039600438, 
          106.67474956136765`}], 
         Point3DBox[{-15.764349487448243`, -18.576155049960022`, 
          51.288006733082234`}], 
         Point3DBox[{18.78404182045078, -11.749476145753363`, 
          35.61416266673248}], 
         Point3DBox[{-2.1380352114613643`, 18.125773458725675`, 
          61.632167681062604`}], 
         Point3DBox[{18.236614348648516`, 6.878314085298612, 
          83.66722173240177}], 
         Point3DBox[{11.757794968861617`, -1.938582914194086, 
          12.770522767000127`}], 
         Point3DBox[{
          15.38824682326181, -16.745744977887547`, -8.42473211827788}], 
         Point3DBox[{-2.8517898332893736`, 5.3538256190125395`, 
          24.23432969350361}], 
         Point3DBox[{5.019462921048685, 14.15663781106386, 
          40.12039219768421}], 
         Point3DBox[{-5.946818928995292, 16.82496842852393, 
          75.31575123481431}], 
         Point3DBox[{-1.5606811983436657`, 3.068322736016256, 
          12.207508928426268`}], 
         Point3DBox[{17.39043435966893, 8.542549335055881, 
          83.38525853515479}], 
         Point3DBox[{-13.79288931578963, -19.10270174963855, 
          28.265997075527515`}], 
         Point3DBox[{
          1.471779529375688, -17.360839232243023`, -54.58335400654618}], 
         Point3DBox[{-11.693307429132993`, -0.05398620113852104, 
          63.57551590739411}], 
         Point3DBox[{6.7793756764910995`, 19.88619303959196, 
          59.80578109450175}], 
         Point3DBox[{14.161961741710357`, 2.1123519919886036`, 
          39.826643574833724`}], 
         Point3DBox[{
          2.159221340073813, -7.275235287013338, -24.804682307561738`}], 
         Point3DBox[{-0.3208338352443292, -17.817359314976038`, \
-49.99793007175367}], 
         Point3DBox[{-12.396190888851052`, 7.448990202280527, 
          93.62909940458906}], 
         Point3DBox[{-12.55651038022414, -6.371013023085219, 
          52.5918706375843}], 
         Point3DBox[{
          13.807534697869869`, -17.032590039365544`, -19.38635951409229}], 
         Point3DBox[{6.883075399336562, 9.523437259576554, 
          31.97845054559673}], 
         Point3DBox[{
          13.807040378358508`, -11.966412551931604`, -7.192892149337375}], 
         Point3DBox[{19.93298299665301, -11.813052791079947`, 
          44.21495205840404}], 
         Point3DBox[{5.796872712988673, 14.42756410856694, 
          43.98682543296472}], 
         Point3DBox[{4.267537976512699, 16.209725299786, 
          46.452805330925415`}], 
         Point3DBox[{-2.1398090762346484`, 11.168121760863528`, 
          40.48931373261948}], 
         Point3DBox[{-14.218818499123067`, 7.355207368181311, 
          110.29791650307384`}], 
         Point3DBox[{15.832779306885058`, 1.6457240993565563`, 
          50.946865166214465`}], 
         Point3DBox[{11.763812638663879`, -4.216454668284875, 
          6.287380467513961}], 
         Point3DBox[{-13.378508960992967`, 16.367790763537982`, 
          131.6036468803004}], 
         Point3DBox[{10.666386181757417`, 7.151000955314302, 
          34.596854269339566`}], 
         Point3DBox[{-6.324158760768427, 7.299132329464186, 
          48.36868724188575}], 
         Point3DBox[{17.142283437781956`, 12.501090439303951`, 
          93.81007962514212}], 
         Point3DBox[{-14.96724160594259, -3.0679630198904206`, 
          87.3120680789829}], 
         Point3DBox[{10.86018202354397, 5.406157869605352, 
          31.88412502002243}], 
         Point3DBox[{-1.4656753929374489`, 0.4223630653535153, 
          6.681281014118396}], 
         Point3DBox[{16.53910925129594, 10.62841974463933, 
          81.57001496501104}], 
         Point3DBox[{13.290207213382374`, 12.253562962616755`, 
          65.24097229965977}], 
         Point3DBox[{-9.687347709351613, -14.189446392633755`, 
          6.960979021836408}], 
         Point3DBox[{-15.130121291062991`, 7.965385969908226, 
          125.77289752718744`}], 
         Point3DBox[{
          7.761395381048061, -1.2370224437211803`, -1.8526648137801178`}], 
         Point3DBox[{-8.143600809160418, 5.634863747084225, 
          52.976336203861095`}], 
         Point3DBox[{-5.11325410838171, -9.451872251393581, \
-11.003888782518665`}], 
         Point3DBox[{-14.89334350472133, 9.764271084100685, 
          125.92449443423982`}], 
         Point3DBox[{-14.508731400563981`, 4.641963424108951, 
          105.22587831196296`}]}}, {}, {}}, {}}, {
      GraphicsComplex3DBox[CompressedData["
1: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
hM4vqq38ZbFuKflqQDTs2aDyE6qo8yrJnp+VnyvjToMvJMKeEuUXy/hhg87x
sMdf+dH3lR9N7ZJ/J+3vFxkFvI3yQ4U9L4YeD4E9e/T+vnWuI9lzU/mPwp6g
7WsN2LNA+ZvyPS49Gg17otR3cF/5p9TuSOU3Cfkfe24PAv6I8u/qiHWOz0cB
sGeT3h+3zj8kexoqv6yKPE/jaCTsKdD7sRvv54fCnqXK7/tH+X3ULvkjkuf6
k5zAg5Xf5BJ4zpB/ysienWp/WaxjrXMCyZ7e6juW4/O7/YJgzyzlH8nv5bW1
7WDPPuVPnVf+FPqP+pX7vD8cOoJ8hog6Hn9EyEf039nMIHs8v1V2FYn3Ls/T
I3uOKD9CrBtz8hNbw56tyu+QvH35chXYc1D5KQ8oP4XaXajWz3L8j323DXB/
NT4Jf7Oo7sPdYc8itb8p/Up57hzZM0ytz3fIfLbXz8aSPUvVel6Ok1sO+2G8
el6t/6uq9T+121KtS+U42aQgGPhZtX6+63ZP9y2LgD3vqv1B4f8uk+ezkT3P
qHXv38JdmzujLcbPO4GedbL4x75HZ3SDPVvVutpLraupXVrvOeR5IGeigA9T
61LR31b5tTNgz6dqf03YUyzPMSN7Gqv1pPheiprtDYY9R9T6U06bJckRsOcV
tV71UutVareFWkcJ+UUrw/V+bppa78k44eYJibBnJdunk+d9kT3T1DpN+t3V
8nrCnu/Uus4h69SOxMKeIPXrpdaB1C6tT4T8vv88lQQ8VK2j5H79kE2psGeu
3p+KledikT0uvR5bVmVSHOz5TOc1uGYEJcKe5mp95aXWV9QuzfuSn0lfpgF/
Ta1PhD0DfP/OhD279L5PrDw/iuxJ1+ucK3W3JcGe1WodIrcpVs5IhT3V1brF
S61baL1xSa1H5Lzm98oY2MPyL5xj6/axz7+WX39ueQ5wtm8SOPtcDuxsruZx
uf5v75UOO9PVvC/fy+ndmbDzcdt5DmQH/crv8bXPsE9EcX5rXzV+0FDgZI9c
n/y2dCj4pP0OL3VuA61z2DkM2+S5SZXjota8XybPXyL7GX7odot0zBdUj+Cl
zm0g/fwchlYlqdBfW8/jc+T5SKSf450qdN4v1TV4qXMbKsfZrHoH36R4va4g
XOZLyHOQSD/DD2Uv1+sTqo+oos5tgN+hcPleCqvqdQLhcv/x57BY6Cdcxh++
39sT+qnOooo6t4H08/MZTj0fAf2Ey/FZnmtE+gmX8/u1ZPv6oZ5cd1nnNpB+
wuX3uKdmd+jfo+Ocy6qM6wr9hItx8tAfL/lDP9V91FHnNmBfVeHSz4qr2gz6
Cb8n4wxljaGf8BPiuYbUvYn5nfLoxTzSWp7bgDxhhcv4/J7ODnxfhIt51rH/
owfwfRFeS/BcpxHlaZXj3AYxzrSW5zYg3qjjSIUhzdtBP+Hyfd3Y2R76CZf5
S95vB9rGzxZWvEWe2wD/i53DcK1JKPTP1fOIQ54vRPoJl+2eHBAJ/VQXI8dD
eW4D6efnM7jej4Z+wmWefNy0GOhn+L52j+r5saX201vLcxuwb6Lrbq5OaRoP
/S31OJ8jzwsi/QwPemi7nu+8tT8bK89twH6Wrt9xfjE8Gfq99bg9SZ4LRPoZ
7trmlQb9zO8rlOcz2MY3a15otU7PI4RLfuR5PrbxTeIvNsjIgv4e2j8qlnUH
hJN/VMU2rir/UeJBU/r2AU77uXL8mZyYZcetdciwHhmw85j2f1tLf9O2Ly/t
MK+c6IPv7rjep7bOVbDpsfZxek7X9qvnsvqVPD/Q9lwWz5xPft7C0l0Zdlzq
Lb21X+tndRyWH4r8FuU/yvG2ZpN04LSPLPvJl95antVnlU6Ykwb9rL7A8itJ
Plr5g9Ifn388CTjtt0r+63yj5fl5CN/n6nmH8ti9lJ9I8rnKv5PjXv23dV0D
7UvKeSf1ZS3P6r8qghvoeYfyuqWd0u8j+bHKX5N5erU/0Xn+FM+QefLXFmh5
Vi/m9F4VBf2U51xF+XEkf0f5XzJ+eyIsBDjb5yrq2UjLs/qy8nntgqGf5QNb
fhnJp9A6VLwX/9H+wN9SftAtQdCGJC1P9Whynqqb2Ab6Pb83dx5UfhbJN1P+
UaT0Q7+7jrxo2jfJFf8qc84fkKf6rZkCPzVyJ+Ydlqdq+U0k/6Dyd64Lnps+
1NI2XvlYceyrd7Q81bvJ9dIHR534jliep+UHkfwQ5b/8Jfr5uq8CgR/XcW/n
qw+EAGf1cY5OfwZBP8t7tPwakvdT/ojcn32ySOeRHtPxYXP7PC3P6unM+s9E
QT/L67P8FJKvqvwLud/6ztM6r5LiunL8KZ6r5Vn9nWO2dxz0s/w3y+8g+cvK
X5B+0It7E4Gv1/HGjet/1PKsXs9YkJ0E/TxPTPoRJE/rf/lenvbReXeZOi4X
dLaNlmf1fUEbFqVhfGZxs9ay7p7aZX6BNa7a9MvvsbwwLNOWn2B9V3OPfKDn
kY0q70XOI5PupNjGASuPvmT3JI3vVfFROR9N3aHzlFhdvPl+iMZPqTwH2R9O
3tL5Oaz+veTO2V7Af1H7+7J/bn0sHDirc3fMHaPzVZqrfW0xDly9dr4LcKpn
l/5C632dgP+q9nPriu/6dbMRcKpbl/HkM0/VAz5Z7WP+Kt5jzMc1wDPVAct5
7cQSX+CT1f6d/O4W9OoAnOrQ5Xu8W9gJeLJaF8i89zGd9H4rqzevONEzDPhr
ar9GyBf7bY3R/VnXlRvlX+n9xxl63yR78nK9v8bryh/potdjwXq/wH3mYjJw
Vide4Ziagv5fpuscY+X8SzjFUasof43w+brOLlbOp4RTnLOK8r8IX6vry4rl
/Eg4xSGrK3+KcFPXT7nXiPmOcIoTVlf+EeHrdH3QMjl/EU5xvJrK3yF8vZqP
ZN7LUTEfEU5xtvbKfyGcfjuoezHob4qDXVb+SOXx0Ko7sO53IJziVLeUf0H4
GjX+e6l7CginONI95S9Ufl9Wfrh13j7hFOe5p9b/Nv6teJQcnwmnOMx9tZ63
vV8rHiLHW8IpTnJfrc9t/ceSl+Mn4RSvuK/W27TOY3U/MzYdz8X4yPE1SYNR
b0m40N/YJ0/fv0a4rAfp+k471L8RLr6vsW+E6no2lhe6yatRb9RNsfxM75de
T0L+OsN/fyA+DnnYTE/fwKohyCcmXIxLxvb82oizEC7rl6vv7QUeWJ1TyfTN
fcEDxyc6h4IHwuX6Z6F3CnggXOhPXRkVAh4IvyPWRWd31AcPhMt92GtrwsED
4fK7c5yKAw9M/so/ftHggXAZp+0d1A48EC7eS8nBde3AA7PfnL0oXt+fpeYj
gf+4bE5/8MDxN+/p+3EYfufcrnR9r5bCZV6uIELfq6XwxoI340p1fa+Wwu+6
3b8sm9ld36ul8zOzXRn6fjGGRw9Zr+8zIPyi4PnS4Jrggdlz9cV4fY4qs3/9
yT7JtnPj/SVe2nXCAPDA6ttyXp/gsp0nb8WjNnpN62M7T97CV/eabdjOk/e3
6vHDCwJs58n7y/y0skdjWtvuf7TyLX26/dTDdj+jv+TtdO6Tuv6B8Dri/R6t
Vc923ru1fjB2boyynfdu2en6s3o6eCD/RdbVtkwZCB5YPd/Nlwbq+2WYvO+j
jXPBA+FCv58zPhE8EC7r6Sre1nWehIsJvvivH46VEQ+Ei+ctLD/RWc0LN3cS
LuP2s14LQ10Ww7NP1YhAfRHHs0YEgU/CZV3/3ChdB0K4eF+Rf47qAD7Zcy0y
5hrgk+G/HtuVBT5pH1v2qyn+g8Enq4PctzlF3yPD5b+6ru9TY7hr/90U8Em4
rKMJfzAKfCJvVMjfTWmB+k/C/3S7VyVfbQI+CZd5vBE99b1BDHdf6B4IPhne
+sAZfc8K4eJ7N99oUh11KczOoMP++l4H9lw//p6aCD4ZPjfu0xzwSXF9WY/Q
zTEUfLL60W31wvV9MVz+mUP63jSGT4rdrO9NY3g/H8MAn4SL/pDzbU1dZ0t4
d9H/x0y8jfP4CBf9KuXl1c1s5wxXlf152bFP/W3nDFv4yDupTts5w1XleQix
3/98u4x4Zvb4bukSAJ4Jl3Ur2xf0BM/sub4vrJIKnjkP9xbm2e5HK98p/UR5
PxrhrB73QNFQF49zYb0m71kjnMlvHN9gtO2eNY9+ec8a4SQv8EWhswts969Z
8tb9a4Qz+cWH5+fa7mXzyMt72QgnebkfPWVLiu2+tnJZ52vd10Y4/GmH47kN
Rb1s97iVyzpi6x43wpl84tLhFAe4iXVs4b/e71a+87wY3/77frfyne+K7y7q
v+53K99Z51/vd7Pst+53I5zZk7rcEWW7983ix7r3jXDGz1TTTLTdB2fJW/fB
Ec7kN38xPbtSPRK9X3ZPnMHel+uDvHz0K1bPbU7IHI7+w/BtY6ro+1wIl+vw
LuP0vWYM3/j1o/peM8Llex85OQPvl+EtvpoSj/dIuKyffeq4vneMyTeMizHA
G8MLNj6ZCn6YPebxt7De5vikFUEF4IHVr199K3oEeGD4qfnXNA+Ey323F5KH
gAeG32mX2x88EC7nqebds8EDwyuKg5LBA+Ey3/VKnr4XjMkf+OtOAnhg+J1x
UZnggdnjDJ+B9TbHt3n5DLL1B2vfJOdu55G2/uA5H/vPirG2/uDZZ09tN8zW
Hzz42cABtv7gwQ9Oy7X1Bwuf5PVHmq0/WLjx15gEW3+w8JwntqbY+oOFz714
K9vWHyy84lZ+f1t/sHDX55f1vdjsfIIfX2mmx1WG//pC+TjwwPHwKvreLobv
q+0zEDwwvOJGv77gYbeOE27LWJ8FHhj+fkI78kNv7mR46taGCag/Z/jqlwbo
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
u3yc4fdb8f3KrivjjK3/47uur/xKskeM/4FtgsIxnjM75/jujTBH2Pzu28rv
Jnlmf5m8N+otpZ/NL3OqBbY0lyi/hnChZ6H3ISfiJzTOf6rG+c5KD/M7gs59
EY/xhz1vyZU7cQbZyca3Svcx8fFQ3sdEdrLxpOJsfLpBdvL9uOpb0nAeK4tf
uaf65Ktx77/HBzqPjOHWeaR0fiuLUzVp4TcQ55MyfFqPyTk4L4zhRRnPJJh0
3ivrb8s6tBmC80z5OHA0ry/O6yRcxkmWFafg3DGGW+ui+bY41V0Vp6L6Q9ZP
Vi3sXIi6O4aP/alHPurlGL7uxM1M1LmxOFJgi8uxqDOkfiXHw/Bmw3HuKovb
LEttMhDnijLcvygsF+dmMnxAWcskg86pZP32w3Gv9cA5TYT7i/6zuk5z+InU
b+X5P3nLRuC8V8Ll+V1+dwfjPFOGP/TD1b44r5PhRduT0g06V4VwyecnRm/j
mqqvY3hs2t5OODeK8PrCr7yU0RHnIhFey+G483hiL8yjLB/POoeQ6lHpu5Pr
7dKAUQbVexAu+3nGT8MMquvg+LL1+QbVbxAu66Nl/hvVaTD51jLPjeoxGB4r
89moDoHwmipPjOoNCK+u8sGoroDwB1TeF32nbH9k+sXHR2Cdw/Y1rPmIvke2
7+Dzo3skvke2T1G4r6AQ3yMbnx3b3+6Bcw3YvkDZ7f+MVvsvgRzPPtRquNrf
6cT3F5YtXDsI3yPbL7DWjfNtcacHVNyJvke+L5BWZyzOL2b4ew+/PgLn8zLc
+6FxQ3H+LMNPx1/Ix/mqDLfOW6PvlJ0bdvvbeePwnTK8dUy1UfhOGV6U3cCF
75TjPiUDcX4rw32+adgP3ykbzxPvvpuD75HFT7x7Tx9tqP19jr+35NHhdI4e
cBkHNpoMwffI5L96/bl8fI8s/lPetVse5T/weE7qmX9yKV8CuHyPs5LyjVj1
HbJ9E+vcrVfVfhbLP587MdLfrKL279h4WLztSDvzd7V/R3hnoehSy/8ro/N0
mL+2KeCBNjjXho0/p+MP6/Nl+Djz3W2nQXVQfHxYdrQN6nJR5yrW4fIcITqv
h+Q/V3FpOjeHcC8Vf15p+95lP5HfO9W/8TjkqQfTDOKBxRtLPpqYalxSPDC8
/NxbWcbZyvkhVj5M71VpxrDK+SFSvmDTukwjtXJ+iMR9hzXINehcJLLzV+W3
LrKtq++rdfWi/7FupHUAqz/yHj1e38NIuPS71/QOg17Ctwk94Zt+xX4Pq2/a
fP9YCOYzlj9zNn69PseM4VZ/o/GL5cPEnhiWivGIcDk/ftQzEd8/4WK+Hruj
bwy+T8KvCnxwdid8JzjvVsw7N35shudleSmx29fE4HkJvyD6w/FGep+JcDEv
TPrpuK43YPkz+6ZdjsJzsXVatM+uRDwXO6++7OwiA89FuOB/ytrz+l5FwiuE
/GPXG+K5CPcT/WRxvK5voef7U7zfoFG6ToNw4Wf9GOrlC/tZPkzd70v0/MHy
Xk6vuBSl731T+E0xDtS70xl2Eh4v5k1niRf6MeHiOzX/eFWff072/p+MGxfV
tt3jYNXdvBjXTudlEn5WrGP7R/ihXcLFOmTjIzHoN8CFn+jb9u8Y6Kf2xfpk
4+nGD0I/4ZNs53gTLt57zN8P6nw1lt/y3I2weHz/1E5N2/nVhMv7yJb+oc+v
tue30Htl+MJhC/Q5zAwfcDRI34fF8lUSXi7S92Ex/OuCfH0fFtMzpXPXnvp8
LYVXUeMqztVUeG2B3361HcYXnCsg3m+mj84rZfieP4NiwQ/bH0x85hF9vxXD
0z99LQc8sHVUpXOVGT72YF19jxXb71u16019rjKT/yS1fip4YPnzDasf0ff7
MH9//fAmOh+CxQcWfVzYE89LuLD/wPh+CXhett5zTu6cgedl8pGbHtb3xPF8
laZT9fnGbB1Y5HUow3ZuqiV/aNdr+hwzto/p+OFHfS4xw2f410uBnQwv73Su
D+zkcUifjH42Pq1147FZr2Tb+LTWmWNjM1Nt/FjzUcMVB9Nt/Fhxj9X983Jt
/FjyOeWd8qGfrzNfqqXvUWJ++vmZwTg/mZ+LW/JnjQLbc1n5J37F5/U5rmzc
jr11BvcHcb94Yatd+freT71/dKXXUfDG/d/CdYsKbPfgWPj+dcn6/gjmR7dJ
+VyPD8S37M9Lpg6CHoa7l7TV9ykwP/e9TjPT0K94vMXXV9//RfgNMQ4Pbqnr
ltl6r/B6zhC0y/3f6/f1vZzMn/3u+5AstMv9301GPNpj8uu8snX+E4vzxA55
sgP6E+FHhEHnN9RGPyBczC9XX16p9x2Zv1y4vtsw2M/wVetP6vsUGD454DF9
DyZbr47scFffg8n95Qu7o2AHw7t9OUvXwxB+R/wn9wtdZ8LO7SwMmuOL5yW8
iejPDeb5oh/jfESHo1r35CD0Y8LFvLOv5/XY//K77ef/s3Xvv9xr6Vlv//e9
lhb+L/daevzu/77X0vKv/+VeS0vPv9xrKXHPvZZsXLbwz9z/dn9l+c72/3p/
ZfnO2o5/u7+yfKf3v95fWS7vtfyX+ystv77S/ZVsfmne5ZfhwNk4nD3wiL4X
gI3bpz/OG2bTY42T67bvHmmb7yz80HY/l22+8+QB/r5fj1dsPIzI/EifD8/w
kZk19DnnhMv7WXzXDcZ75H63O1ifc273u8kONq5eLe2XauPB8per1nt3tI0H
Cw+sd0fbQ7iMzyyePdQ2D1ryxS/VK7DNgxaecvW5vhg3eL5HatVU2zxojfOO
yR0ybfOg5b/39mqfa/ePLP01zo+w+0cS7/Di+EK7f2TNd9Ov6XvfGB7x8yh9
XjfrXzk79+Sin7N4b+SN6Wl4LobPOHNU3+PG/P1TNe/pe9y4nivV9bncXM/1
q/n47lie/4sHJuv7mOxxY9w3rccD1+3HekGezY8D5P545fNFrXGixZ4a+rwd
nn9YyM6lZHHgSudSsvxG61xK0s/mwaL7wXp8Z/XU3y9f2gI4G1dunv0gHDzw
/N6CDvpeA7b+CZL7sJX1WOON2e2wPveG5y3w8wxZPK3SeYZs/WOdZ0j62bjl
nDEn2WanNW5FvtwnHd8d61dWvhCNX2y8Xy3zdgjn4/3zl/R5cez9vijzagjn
70vmw9BzsXXFnBp7I8Aji6t/KPMwiR827x+S57CRHpY/aeVDUrssv93KkyGc
5bFYeS+Es3w8K4+lsrynPpGfP2nf1ya9bD0548YdfW4ww638NNLDxhPr/K7K
/ccal6w8Mdv3Lr+X6TJfhfSwfatYfu4cPcdVse7l9zuzuoNJTwXo/Ev7/jXh
7Lsu5udu2fd5K/dnj//Cz5Vi+57W/ibZx75H69wJwnm+qzw/gXAWJ7TOASCc
vRerXrLy+9V1f7Z+LnGrru3/AWE3ABk=
       "], {{{
          RGBColor[0.880722, 0.611041, 0.142051], 
          EdgeForm[None], 
          Specularity[
           GrayLevel[1], 3], 
          StyleBox[
           GraphicsGroup3DBox[
            TagBox[{
              Polygon3DBox[CompressedData["
1:eJxFm3ccT1Ufx3/3d889t9LSoJ2KVEo0REIICQ1JUYREUqGFQqEkJcoebU1a
T9pbQ1tbe6ekNGiv5/Puc57X88f9nc8999zzu/eM7/zcHfoN6XpatVKpvBIq
lVzl5zrJVNaiUhU7qNiLOuEdhfcWrgrvJLyP8F86thXeU+VPOjYT3l7lWh2b
Cm+r8isdhfB2KlfqiMJ1VK7RsYnw1ipz9VlXeF/hP3VsI7yHyp91bC68g8o/
dGwt3EBld7W/QHiK8DHCE4Qv5//1HhvrBV5S3Rb602mqn6vyS13Tpco2Ko/W
tQuFpwr/Kvyt8PUqm+q+r4Vr62iqxs10/rPqf9HxjequU/kf1e8mfJr63FR4
I7V5UfUrqh6/rVTuo7pPhdfR8YzaLdaFcWWlcpDat9O1qsolqj9I118Xflb4
HrUZrzZ1VR6i+h7qZ0fhg4WPFj5O99XWcZXOd1J9R5XHqP7x6DZvqZ9tVN9a
+HDmRLiN8BGMp/CPwreo/EPHD8I3q1yr40vh+Sob6/4m6n+N8O7C+wr/yH26
v6babKnyC+ZeeAv9HKDr3wnvrGO1ztdXuRv1ureFrv2ue7/T+Qaq313lTcFz
11/v+r3ONxRuqLKb6o9S+01UdlO5gY7zda2L7j9H5YVqs7Gu1VD9UtU9r/c9
S/Xrqp+nhQcIr2EedKynNs+ozeHCRwhvqPJNtRumNoXKzjrvovr16E9HIfy4
2q8vHIWfEN6IZ9Nxm87f1PmVuvdGnX9eePxvVtlC/7uF8Ikqb1V5i47NdPRR
+2sYW7UfJfw48y/cXO021fV+KpfoOJp9pv/cgHHTcbOu9VX7a5kjnZ8mfKfw
fcJ36NrtOrbUcarq71D9var/SM+xiequVbmO+sqEH9L1ZTp/kPWttXSw6juq
Pqo8UXUzdO/VuneQ8FzWvPDJwvOEFwj3Er5UeKbwYOH5wjew9oQvEZ4hfITw
GOGLhQ8VPld4gvBhwqOELxI+XHi08EThY4UnCU8Xri3cXLiTcH/h6cJXCZ+Q
e59eKdxYuIfwQOFGwscIDxB+Qe91pPAnepfXhPsJfyfcW20mC89Sm92EjxA+
XngLXdtc7/46fWQeqynsGdX3EK6lsnbwvL2GPFOf17HHVX6i84eElyB7hJsJ
dxReV7iB8AHCo4XvEn5AeAxyQfhB4fOE7xZ+SPh04QXCtwkPE75eeJHw0Nz/
tVD4e/3fR4y75uuF6D4PUF3DwngI8kf4c5WXqc1L0evqENVdoronhJ9VP5cK
LxF+TviQzOuhP2ONvGGtCu+qNn1UnqI2b2deGwj71errQ+a49Bj2VfWpanOh
8IPCTwjX1VjVVdsvVNef9SS8o8o1uvdhtemgstD5P4yJ2uyi43jhwbr3a127
TbiZyj5q01f3bqfyTp3PYz3pf1EKr6k4VnWvCC9jrgrrI+RPbZUjdc+7uneE
yitVzsu8nxer3Sr0ju5bGNweubUIXSA8SvV/qc0Lwt1UnqT6k3Xfzirr62gg
vIpnFt5D+Jsk99B9jVX+R/dshTpUPz/ovI5wI5X3qn5XHl31I3TPQuG7VX+P
6ndB5qj+xcx6BP3xmM5rIU/0P89llrFfVPz81+r+8zQOdwlvqbqq2tZXXW/h
k9XnzsK9hAcJd9B9fwl31/EIY6trY3XvY8LtVbcBa0S4g/CGyCpd7yLcs2od
wR7pjS5FVgr3QuYl3XGY8JbChzIXwlsJHyZ8HPfqubfSf7+juq2DZdLbwscJ
9xLeSuWBOloL/527z8a6t7XufSR4H52NvMqtQ5urfiPhvYTboCuEDxQ+VPjZ
YL22mepq6difNY8uEN5buK3wgfqftcL76vhH9T+rvB0lrHt/UXEHOD3DgWr/
DzJFuJXK+/UcN+na+Rq3vVQO5tmQaZl1wRk6fy+tL/RES7UZobrxyAH1H1T3
mOoO0HG26seqvoXwcOFxwvUYF+GThPcUHih8hvDfnAu3RGaqj1LHmTpfD72r
soXqVwfvwUdUt4+OU4VHqL6GcEvhzugN4VboSeEH9S77oRM11w8JN6U/4b3V
5hTh4WqTqc/fWZ+qa6///FP4KMZO56epHKk2TYSHCJ8jvJ/wUOFzhd/MbLf8
ofNNsdl03JdZNiGj7tf5Nzp/BJmg41Idl2SejzdUTs/839vn/s9+ar+Tnu8n
9rjKDKNCxyS1u6+wXXGWyh107XueU+U/rCkdF+q4Qf3UU32Tqm0n3mWpyjq5
98QJ7N3cerY/cxH97E+rzTmZ9z57/kidP6/6r1hTGp9BqqunciCljpfRZyon
ZLaZxqkcm/byZsk2647dh12kYwp6Jvce7KbzTXPvwaOE7xJuK9wV3ZpZzryP
jMg9d+1Vv5D5Fj4I+axnGye8sZ79XeHxwjWF30eOqd1FWrcfZrZzsHvewh5S
/QTV54Xn7hm1P0HX6rBWdT5A129ij6j/zsIXC18h/ElmGwxb9gPdeznzrHs/
Fn5V7Saqz08L2za1sbky64KXkH2511sH9fNr1XKvqcpvM+uInXQ8XHifjmJO
g9fIZ+h5HbNVf43af1bY/tlC/X8ofAVjHG0/YKtcpzY9hecIX4sdEr0WkPmn
qNyTZ9e1WWrzkcpP1eYp+lH9ILV5SXgWc8+6w0YSPk34DL3bfdiVqju99Dw9
gc1Yev4mqM2ppedprPDQ0nN8ofDg0u88RvgbbHhsNOFJpfVca+HJpfVlO+FH
g+XYcLU9VvXj1c89qj9G+HxsCOEewmOxIYSPE75A+F7hs0vblzcxp8KXY6MI
9xWeIvyA8KHReuUwlX1Uf5nq7xc+XniS8H3C/YSnoteFL0g24m7C5wq/p/qV
7JHSNuii6D7e1DO/o/ecLfyx8GfMBWtDeLXqTtd/1kef6pijc9T5jlXbJ7R5
q+pnfEv4XeErhN8R/qDq93hb+P2qn2s5crfq531F+E3hfsyzjkd1fnVuHbqT
6v9CjuEvYD8Hj//xKkeVtuF+1DOOLG03L0RH6/pQHSuQg4V9vVNUno0s0/G5
zk9L5Wc6rtR9NSr2j76q2FdaDzmiNsNTP12i/39blV9nybbhXM+xLWsyt62I
nbaUPYLuyrxn0FFtMu//NeilzPbEZUmGokdrRPuJ7J0z1Oerqjsd/0z1Vwvv
rfKi3HvxNfU/Mbfcer1qHdA07VH8v5aZ9+dqdG9mm6aM1p/I2+Hqd7nqz1b5
t+oOzmxnvxksx55Tm1x1nTP7VD117/U8v8rPgmXvq2rzabCcf0W4O3tG5zM0
Dxdnlqf4h78h5zLb9LtG26IN8O10XCW8l8r3CvuDs7H9c8uluXqvVtFj/K3q
l2EXq3626pvl1ttjhFdm1lHMATYjfaKza2JDYNMJn5N7TT2l87bRsupn9Xlu
bnn5dLLPWXvfFd4fi1S/WPVnBeu2M1XuqXvnItNVnqljjvDuKmswB1WPUe9o
P6+ZyhtULkjy9jnsPvU5Se32z20LnCfcPLefe77w7rlt+aFV2wTYBgRtGub2
f09H7hJUQWfpOffIbe8Pq1pHoiuvUd3O0Xq8frTNylo7lfWP/BB+TG3PQN4I
Pyx8JjIDO0T4q8I+6Ta6r9B5qFqvs154X+z+75N8+C53/GPvzDGQLDqm0pc4
TGEfdmvVfSG8HD2ktTFQ5c2qv0P9niR8i/CdVcu/54RfTv4I+npZ1fLyaeHn
hccJLxV+kXlh7ehonFmOPqP6F6qW8V2F+1Tt/94qfBftkZHCjwoPz+3vPF61
bH5W+CXhU4nRqL9TguUdMm256s9L8gQ7/usk01ayBpl/9rKOc6Ptog4ql2a2
Pxrq2I29yNrUPTNy666PGfN0HfuEuNT+mf2BZ1SOTP0egi5ReTAyPLNdgo/x
RrDtgS10cW4f6g31OVn4DeG3mbfomA1yb4jav4AeDJZtxH+Qbyt17JdZ9v1R
WK7/Xtj/QWacUNh+aZRsmD91/lTFbb5Kc/SK/mum8IfCn1Ttz/Ae/dSmZ+k5
WxztAyJrkZ8jo22DtfhomfUK//1H5jHdNclmZDX3PKHyscz23MOp/esVzwfz
gm+1T/C9ewTXDUtye1hqsy7tg/tsoHLX4DVbV8/cvbBc/Vvl0YXl6j/4DZn3
MDZTWVjmLC9sq2GzTRYerX4+1vVRwfM8KM31OoX3+DvEb6JjEsi30ZnX7qk6
ttHRJ7NfvTU6LbNthP2HHXgZsQrVXZPZ/ts/7Slk1Phg2TdO5aOFbfC6uu8V
1S3T0QTdoPI1He2E14/WMz1Uzshs62Mrv5VwN+GQ+752GpMfM8s97Pntcl/v
q/oHCtvIO6qfdaJl/NEqT4rWWdj5NXP/55Hs5WCf4QKVO6jsn9k/b57kzA/I
4TSnrIUDo3VrG3RFYfn8m8qDC8vwX1WW6nd+kvP4bcQH8N2aVS3riH8eFG2X
tsfm0X9/wJ5U+UOwjH1d/fwYLD/fKCwzL8/sO2BP8t5Do+fprCRn8HUuTWOL
HY8+xw9dlq5R3zq1YT5aButc/E/GlOutVHdIsL4lfjJTbWen8R+iNieo7BQs
u5HhxJLbB+tPfDrmgLYdgudtRrqXZ5+W5rq1rk3O/F9cn5nadAy2jbmXuBC6
jP97Mjo+2qy0/YyMPz1aX89MugbfjT7x5aZm/j/+C/8HWUTs+67Mccx/YwQ6
emf2JbaMjgsRUx2r/16h+vODfQDWOzHRWqo7NrM/QFy/e+Y9tlF0nPjSwrFd
7JErgv0W7ATsBfwH7puj6wOFX87sS9ZkbWbeS5tHx9SJo7YJtrWIp7A/pqZ3
aRfsR7QNnsPL0pwSX+yZpf+rui1tpueWix8xb+p/DOOrMVyUOV5M/HGa2ryn
Nh9WbT+wVhtG+8bYTsRwiR29lGT74GD5sZfKzzPHhK/WecRvQc7p3nV177XI
tMwxaMaY+Mztafxpj++DjEXW3q/yAR2PVLwvwNg/Jwb7Ryeo7Bo8zviWN1Xd
x7Gqu0R4LO9NrD34fw9jfKqeH3IiC5KcpN1RCWPzEFfBduW5+c+H0jO8Gt3H
5Rqr74PXIGNyRJJ1+LnYvWDe99noeH97tT80eA0Qk7kljfPUiuUHugH/5FU9
24uqG4i+0/ndjKPO76m6xHfoHbwmsUuIsyNXiY0uVtt7U/snq35exoc+Fqd6
ZBQYuxR/ENtzePS6Z/yJl/Ui7pl5DMk1gLdI1+9Kc4Q9ikwj5tsp+nmn6R03
V/3jmfUgOg/dh50wIFh24lO/HB3LPLG0nUCbjqyrYH2CP4Kfcn8a86MKjwlt
8NmxKzjvofYL2SfBeQrwpmlcF6WxJW7waea5HYwPkDnHcXzu92C9fFI4xn6A
6mtFr/3++OzR+50cyleZ54Mx3CqN1wCVv2XWZYzjF5nXPf2+k1lOsT4a5C6R
kWsy26PIqa91voXKeskmfCqzXXhysI3TKNhfps3hPE/+/7VweKqnj67C9ZFn
Kn+pGu9XtZ/9fGZb47vMdhQxaGQvuhMZvaLwnLeMtuuezGzbHR89fn3xFarG
Ryc7ZUlmG69RtLyfqnnsHmwnEPc5Nno/9Up+xE3/219qc2Pm/dgzWKYRu+mR
5ow5wHdCVpHvwDeh/YaZbVJsU+TRT5l1IjKka+5n4xnXZvaj0K1Nc+/d0ar/
ObOds2GaE+YGX65d7udCTsxN1ypp37P/0cu90rvQlljWR5n3Otffz6zD30/n
/B++Iz4kc0A8cGLm+GDD9A7shdnp3Xum8aiR/C/8MDDPGau2FXgX1jXrG99s
ZhpnxntS0tEtk24skr9Dvo727IXpSTYiI3dPfl/jaD2ELEImrVO1XGY8JwT7
QU2Cc8CsEfxHcszIeOzw16L9+yGl34/3JM5FPhWbamjS4T9k1rl7JX+5CbZh
5pgI8Yg/E2ZN/jtOaazGp/VK/d+pf+qJv6LL6fPwwv4UMSLyTI9XHDs6sLBv
SGzqsMK+1b9xp8K+GLGmToVjHcR+8BmxX4kT7y18I7oVe5NYWcXxrjaFfUx8
gbaFfTFiYgcV9kmJfbUr7Jfh/2F/sL9fVN2lSV+3SWPC8xNDHhbtn9JmYrC/
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
AMOlgVcDJxT9C/cSDuZ/AQ00JjQ=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1m3fgV9P/x+/7nnvOO0lG2ZuISJkNmRkZpTIitEOlQSQrpVBCKkLRskdG
9s5o2KvyNVKZGYmsZP2ej8/z/v44fc7zvs65933PPec1nq9X2/cY2HFAnmXZ
SyHLCv09TGBf/f1V7X5de1EXd1e/tvo/piybrfa48HMad3I1y0bFLDtL+Dzh
NZI9qvaE8PPCp0j+gubvJryO5q+UbKTGdxY+U/I/hJ+WfAfhiuQruLfaU8Iv
Sn6q5r8k+YHC60q+o/ArwgcJ1xFuIHyr/q4r3Kyi36z+85I3Eq6l/g+61yI9
r5ZkrwgfrvEv6u85kh+ra+to7OWSnyJ8hp73u8ZX1PaR7GeNG6bx/9P1s4R3
VrtW1x5U+13jxwofIdkYzb9U+Cr1/9Hcc4QbCx8g/I3wY2pPCr8g3Fn3GyH5
ycK9hX+TbGD0+uwv/JXwMv2mjsJP6jmDNX5/yXvqWdvp+jXCe+nvx5L30bW9
1b9C8j7C52v+n5r/rPAvwlXN/57na8zWwv+Uv6eN5Gdo7o66fp3u94XGvSF5
L13bXtee4JsIz9H40yQ/XPgZyXpLdq1wU/2tLfl+uran+tPV2D9f6Z+FGttO
91+Yea0u1fjZwt8Kr5T8E8nv1vg6wj8Kfyp8VvT330t4qfA9kq8nvEp4ifC9
wnWFfxL+TPhz4aP17Crvrvuvq7/thAdrTAs9s4/ut6P6e2v8Mo3/XfKhwgdK
dqDG/yo8RLiVcCvhRzT+G+EfNP5jjf9B8gHC+0q+n+RnRK9f4/L3rJR8IO8v
eTPJH5d8pfCfkn/B3hf+UXit8JfCvYW3Et6tfN9Zmr+R8C/l+z4kXF/4N+Hl
wg8Lbyz8u/Dnwn01v4HwPqV8oeRH6H0De1fPHxR9PltJ/rXkjdUmSz5IuAXn
T/hdyRcL9xF+Xvgd4UXsa+F79R67Ch+kOX+rf4/aLqyX8F/lfm8mfKjwf+o/
p/mvCb+j+b00/3Q9v57wlsKLJOsmvInw9sL/E36kMJ6muX01/rTo99+83C+P
6vrx6B3dv6KxXaLXY2vJF0v+o64N4nxrXHPN769rf2rs1mo/aGw/tZ34XuV6
dY1ev22FP2R9mSfcWuNRcGdKvo26Tcr91EjtJsmOkmyU7v9g4ff5tdw/rwvv
L7yp7vML6ys8mLVBJ6i/QK2F5BtL/jNrI9xSeBPh1bxf4e//d/l9ZqndJfyg
cEc97yH2vPDDwifwfM6I8EPCxws/zBkQfkT4ROFl+ttUz26sdqOesbfk09Qf
putHSP5s4f0SJPtOskKtueS/CV8m+VzJ95J8feFVks0T3lt4A+Gf0FVqc4Tn
635dq/4+a4VvQN9p7Htqh/J9dP1Xjd1B4/aW7HNdu0XXHtG1+9Sfresnaf5M
XdtcuKXG/KH+hlr/Mehf9Y+V/Gl+g/CbGt9d+Bnh+cJvCfcQ/opvxvfS+L2E
7xTWkOzbcn99J3w2513yfSRfIdwPfcLasB4as0D4bY3vKfy95P05T5Lvy/P1
t4dwG/2+KNlvahegv3X9AMkXCR8pWaG/I4Wrul8r4T8lHy78lPBcjX9D9+8m
fLuub4E+15g16j9TWB/l6n+rsTOF1c2+Ls/L7YXt7jflfp8tsKXwX6U9mIZ+
UH9X3W8n9e9Q0xJmK8r9va7awZL9o5uO0PMXS95G8h2C7cubwm2FNxPeWfIu
wrM1fgPNn1xYR7XMrQPQXafq2jT2m8acrv4J0fZhqvq3VW03sB9vYfN0zxMl
f0m4j65PlLwB30v4bclHS36k5M+pf6uu3yr58fp7l+S3q43Vc5vr+bXZWxo7
oernPyw8S+1u9pDwPerXUX+S+nuonSe8m1rDwvcbofvfLXxiYTuJvXxR1y7W
Pd/XvBewdxX/3o6Fn11b129Qf1u1HsIvaPxFkj+ee32+Vjtb+DPhlys+8xPx
HTT+XfX3Q50EnzvOX6zY/uwv+Wj1r1BrJtlg4Q/UP1zjN5T8bHSG8BfCq8vx
DdUfo2sHqH+p5kxV/2O15pK3LHyvf9VGq79fspxx47Ver+rvU8LbVPz7e2jM
k+pvlHvN39Pf59GValdK3lPXntfzni1tOhj7zpxXOPPCj1e8Bo+X+EH2hnB3
9Zfq2isVf4Mbgucw91u1C4XP15jF6p+gOdvgc0l+Nfuh4vXqXPjb1tX1m9Xv
pHZ/xd/4Fl27Rfg09admllf1jjdwD+F62ktJeGJuHYIuqSV8o/BY4frCG3AG
2dvYAGyR8CzhO4R3Yn/rN8zkOfw+4S2xEer31/ULNXYdtUmSX4NOl7y28E3C
16LThdcTvk14ImdKeF3hKXwL4SXCdfBJhScIfyZcV3gqew2bJ7ypnjdd/W56
3hDJ6ugdj2M90ZG6dpPwycLjMu/39TVmmubfKLxF9Hpdr/4DGnOK+n2CbQM2
opHkm6Gzhe8X3l14F/Sjxi7JbC+wQfgK+JzYJnxCfFV8iMfK89VP4z/N/H0b
4Q+V+xWfmDPJ9/tCrWuwjsJ3xedGd9XT8+8TniH8hZ7fQm1WZl0zRbLumnNv
7jX4HFutaw8I3y7cQHhD4TuEpwhvh++ET6T+AM27iG+NTtKzh2c+v/V17X6N
nym8I+tbte3BBu0m3ErzH9T4L9WW43tgQzgb+CjCBxbenzixV/MtsOHCX7E/
1D8h+Xz+wTes2ofDl0NH48ueJnxHxTro1GQfd9fcNgDfF58R3xEfAN+2g9pM
je+g1h59js/PeVZ/UtU+Cb4JPie+Lz5pw9w2FF+1LXpY49uqHav+asn2VNtO
8vuFP9L4HXP7XC8m75GavaJ2cmGfE197+8y+KD4lviU2Cl8UHwpfCh8CX/Si
wr91qdrFhX0ifGt8dnwlfN4WuX1GfGFsMr4fPhi2+gh8YM3tVTh+wGfCd5qj
dhY+rFp39b9XG4lvkYy78V00vi42WXhGuV6jCt/vR3Ss+mvxWyrWua2E/8UP
U/9atYOFf8fP4d7oU+Et1NZUbGNOK2zjamxdiTdR+6NincR6baLf85X6l6l/
k37P0MJr/yn6Tv0hakep/5HaBerXSrYP2IkbNf48/T28Yp2IbrxE7UT8pfKb
b8RvrNgmnqB+bbVf1b+1/L6Ddb+EflF/su7XDX+wYh3QNdnm1di+cn73ZFnH
4P00EF0n2YfYTOxxYX8Xf6577vfi/bD5nOef/n9/oWfK5y0XXl+tZXJcQXyR
qe2u8QcVtoXXCR9SGLP2nCl0/37Cw9X/G/uDvcYnwR5xvtVvpmubqT8K+1kY
862Ys1PuM8hZ/F79cVX7330lu0RtH2y/2oqKbRT2ejfhddS/TNf2Vb+B5g2r
WIftWvj9sU03V+zz90C3qv8X9oJYhOcIv1exvb4o2f/CD8P/+VL9TdU20PgZ
hX04Yh9impmlPvisYp8G3wafjliGmAJfj5iH2GfDzLEzfhP+U9/yPODTEbsQ
A+HrHUgMIdk3al9H7zn23rmZ/YNLJX9DeGBh/YSPzrctdI/rOE+F3yfHpqnf
Wm1Cxdd4VzC+yUS+V+E9wfyFFdvvAbrWQv23ymfgv+yr/utq/QvvefZ+z8z7
a6DaU7l19oroPVGzN8rzuK1+44eSv0cMEG2DscWdNa+dZPNy+27b8Y3x0aP5
oPOD46OthG8WPkW4rXCzaFs3VHgr4SXBsSE+Cb7Q3Ny+3bYV+4N7RNuKQcQl
Gt8k2vacg98OvxHtK5wrvKXwm8F7Hx1/DT5Lbtu8kfA7we/wsvA1we+2MLfv
u5PkY+AcJH+U/aj+NpJ/S3wtWSO17/BP1epXfKYna+4BGj9b44fxHhq/XzQf
MyQ4/lue25Y30fhJwbp+U+HvMsfYvwSflwsq5mewCdiGn7ERVfsI+ApnaVyH
qmMKYosLK+aT0MHoYnxE/Dl8CGxlv2DfAr4NvmSF2m1wB9Hx65nqt5d8lf7u
qfl7qf2k/l25fblNhRcJP6H7NxH+FxvE++nvzsKrsBfsHcmbqv8fNga+K5pP
HBwcL+8TzaedFxwfE1+iS0bo/jtrTsPo+PkMXT8O/o7vXLEPcI/kH+SOXRpU
HJ900PgPha8Pjjfhw3ao2Gc+g/Op87W64hj4VY29qrAu+z5zTP2ucHv1t2Qt
NP/q3L7Jehrzmq61jo5nLw/m/w6LjkdHBvObh0fzKaOC+TZsGrbtzcz++lLh
burvqn4T/APhrsK7sJeF3xZuh28p3FB4gH7v2orf4Tfd+x18GnxH9p3kH6Oj
2J/oSvwZbKDwznxrfGtsmN5hHc1fT/0lal0kbyh5Y8n76v6/SPafrr0Vff6e
Yb8Fx/v4Z8RWddGf6J/o+H5EMB98vPBHwhOC+aNexHjC/+CPEe9Ex2PEZWPR
FdhXfLtgfrYjPobw+OB4vk1yfEec11u4veSLJR8XzCccJ7wI+xQcnw/P7WtX
NWd/vonky7AHwfzYMdF82dXB/AfxCLHKZhq/ufoHR8f7w4P5b/x1YtN6km+s
fk/1T5T8b3RYsN3GfhcV882naP5SyW4K5t/GFvY9f8scw48pHOv9lJljeJVn
sp/U30njL8vNdaaK44W1ev9Runahrq0tzOm0Fz4kM9eDvb2yYh+2Y7KNrbG1
pT+0le7RJfceZi/DGcBNd8rMJWBDa2wp9r4w59NV8g6ZuaC6nLPcv5Hfiv/M
WcSmt0vmPA7NzTnBhRATbYi/EhwrJXyS3BzjM3DBydz6O2pPR8dUG+DbBMda
cFqtc3NWcF1wcqcIH52ZqyOHcAg+cebcAmTLwbl1CrqFmG2U+icFx3JwXh1y
c1pwYQ3wn9hPai9E24Bnc+twbMMVwdwnZ5azi814JrfOxpZE4fHCVwrXjfYX
NsnNkWPvxwZzsewx9tpuyf5jm8L8IzbpackfyWyrsGkv5T5jnDU4ghquoGJ/
tz7nTvIjJZ8TzUF2ys0BwU2SL0C3z1PrV9gGvZbbZmGbLg3m+uYIt4rmLE/O
febgMvGx8LU+ycx/YJMWSP5SZltFTHuF+p2CY11i5GHCHYJj543L/Ej74Nj6
68L5lj2D8xX/qY3JPSeP5uPQLfisRxfm/8iXNA3OL52jsb2EK5I31rV/dW10
7mdAjJ2LHuBeku8hedAzx+X+5rUlz4WvEx4p/LHwX5p/hfBFwmsK/yZyKeS0
+K08k9wWHCS/pZHu2T+3TkY3F7rf9bnXoA7EXGkDLlN3vub+D45Av+VIzatg
jwrv1QbB+S+uXavxl2cey2+qw34I/q1/c34lvxidUjhmhYvoEhzLwgmw104O
5grgRHiXtsFcCTmwo3Jz1OTGyOEdk5vTJreHTiX3xRqja8kZtcnNmZNLglO5
RP3jgrkWOBh+S7tgboZ8GroNTqpd4Rzf0bk5cHJ/cC5wF72DuRhieriV04Nj
fTgauJvTgrkbOINN8N2CuQRieriWnsGxPhwBXEqvYO6ANSSXyJ5ibcnBkYvj
N/9bmAOAS+gbzA2MStYF6AT0KT49vj35NLjOK8v1Q6eiW0NybpEcFvE8OcEp
wT4XucKV0dwbMevByfHHQPWHqDUpnKN5TOOPyJy7qZuci1hTntcPCuc+/hR+
GX4pOdfyB99H+CjNH5E7Z7Wu8PLCXPW/wm9Ec9KPB59/uGo4/hnBPhXc/1Bs
XlHymcKron1hbCy29udoXxvOlFwjOYR5wfELuYV/o3MNcEIncX6Sc3/4gPAR
f0b7unC+R6m/NjpX2lDtb/VPSdalcKB1OO/RviucVKfonOwluXOy5GrblDb6
fPR5Mt9J7L8ONkT9I0sbiA1/Tfj3aG4XTuAw4cMkvzh3zihEc+Kz9D6HZebK
ayfnun4p93dMzk2Qw4O/wAdYXMYn+AY/Bscr76NfODuSj8ydU1w/OqeF343/
/Wi0TV9U6nds/fnRvi05A3IH3aNzJeSY2T9zo2NPOIKdhW+O9h3huDYSPjv6
3uRw+J4flfrheLVanKXo/HZ7tfWT+UD4T/Y8e39NtK8LZ0/u9+yq/Wx+05PC
A4XPLRzvnpWckxlV6kN0yTrJucDVpX3ulGyb4TjgOlJyroOcJ/kDciJ3B9cQ
8L4tq64twF/5QPILqo4DiAe+RLdE1xqQw+D7HC355blzMOsRW0SPhRPeXPIB
VdclMOe56BgGPhe+l9iGnOeg0ka8kpyDJhfNnvwrOgdxW+F8N7kJ8p0/Z/aR
mufmWPDZqA9Ypb83M788o5zVCYV9ZNY7av4dwe8O3wfvNyCaCyWnQm6lf3Ru
BY4MrgwOCc4F/rRnsv1+OFg/Y68PKxyHE483LNfvnNKmvSr8WvRZx+Y3qjqH
T06GM/BHdI0AORDO+E/l/sevxL98PpqDnUJMUTE3e3gwrwe/d7ru/13uuJ74
vn1yTgeOAr7umOTzQIy3rDwfK4JjWnx6fHtiwBm5Y3piQzgoeC74Lrip+4LP
3q7lGg2JfndsDrYHzgzujHzBScn5afbeLuUawnHAQ8BHwM2SAyEXAh/yXjJn
BXcFf9YU2111HMaZ+qTcn/jV+NdPCc8O1r3koLvl1i/zg232h5I/FH320QHE
9+inBcFnkLN4TjWrSeCh09HtnCc4SPiO95PXkLWEU8YfRr8OK334BcJTg20L
NSy75I5Zp+fmOIhle0bvLThguOAe0VwwsS58WK9oLpq990mpX7BN8AJwwdgD
4lTi1cckG111nEK8skz4qqrjNOK1T6PtFbUF6KR5pX0h90k8syB6r2K7mpff
jPw6tgr/HT8e+0ie4Avhh7GnVceRxJOLo/Oj6NrNy3eihoNaDvjEdyQfU3Wc
Rbz1VbRPDE8HX4evDIdM3or8FdwyMSKxIjb4x2jOmDwV+Sq45BnRXA05lY3x
7armbbi2NPob8607op+j8w1d1d+yYv4KnwDfAM7mn+h8URf1t8AGCm+QPJd7
4L+dkczVwUlukfz+c4M5AfTzqRrTv2KOBHvCN+RbEjNtU77PZ8E5Kewz5xEe
FD60bfJ5/zKY00Kfw//DJ8I/wudzpjnbW6l9V+qDpcF8HPYdnYXuwmZgb8kJ
H5u7xopcMfmpzqxVxfkZ4sP2ZXxEvMf+eS+Y02E9eyXnVuCQ4crrE39UHOMR
61GzdWBuzodars1Yg4p9vC/K7/1hcI4I/b5hsm3jfOELw6kcV8azxKdwGO3K
eBNuo57Gn1RxjLik3M9vhJKjS+ZE2uauGYMrQefX1DrhA0RzBt8H55PhEg4R
Hpq7RuCfwjVDxAPUWFFLRM3P2aX/v7KML8mn7JCVtWxV52O2zxxvHiQ8JHdN
wh+FawrOK+MLag32rzpmOUN4brL9mhOcT6aWhxqlwWX8Qe3Snsm6rapru6ey
Jkb97plrZZ7XXAr6egi/r/c7s2pOkpqfdzX+YOELctdM/FW4ZqJPbg6IWgpq
Ivrm5nyolYCja5qbQ4S727NqzgZ+4OXkmozeZfxAfNS0ag4ETuel5Bqqfrk5
K2qrqMk4KzcHRa0GnBb8A3wC8RSc1um5+YjPyngLvoGaOGrj4KBOy81pwU3B
YXXOXeMAtwWHdWpuTgxu6zZsUOYcKvERNYMHlXwAtYT4749VzLEflOzz4vtO
V9tX/X2S++TsUnT8vqCMn+F+kWN7ppXj4Yzml/Ex8T326JjC/Di5Fezlu7lr
KtAne2jOlIpzLsjhtKhVgV+A64Ijg294vbSvcIbURsIJwyWyR9gr3KNJ8v14
1uQS40PgS4wv/csuVXPsczTmrWTOcU7JL8BnnF41Zw4H/2bpb8DNUQNDfIEP
hy9Hzd3PwgujuTRy2KuF50fbCmrUFpb+EnEh8eH5ut/b0boezmPXZD4FfuNZ
5qA/q+Zo4dDfkfzd6Fifmj9q/1aVvlmoeH+/Fx3rH4M+KWxPngnm4BiPf827
w+nslMwJUms0PzNXCCdI7c68zFxhp6rzF/Avb+APJ/s+G+MbEEurvVhxzoba
F3QGuoNrRyfXsJAnIF9A/gd+BT4Hfgi+pLXkF+WuIaxExy9PV1zD0To5JiU2
hb+CTztU+MLcNYn/lXwb/BZ8GvweNg5bxx4m/jw+OI9APqFlud6TKs5x7ZLM
wVKbC4cON0tOgfoB8uXkGuA0qe2Fc4frxOZieyeV3wsOm1pWcjJw23Dm1GrB
acOlo89eDt4T7A04YfLx5Gjgr/DXjisc0xHbweFT60YOAW6fHA+1cOQo9i39
U+qEqNnpnGzzsf2sGfEeOQFq6e7OnCvg+8Cdv1B+j1uj+QdqMOCnblEbV8bQ
y8v9TKyAj42vPSlZt6NT0a3jsVeZdRa6a3pybEpMTmw+MVl3ojPRnTcm6zps
BLZiQrKuQ8eia69P1p3oTHTntOS9QMxK7Hpzsq7HRmArpiZ/e/YMe+emZFuB
TcA23JZsq9gj7JVbk3U7NgxbdkOyLkcHo4tnJHMJxFjEWrcnc8fEfMR+dyXX
1lBjQz6uf9V1oMSAxIJ3qo2WfELu/Nu4ZF2NDkeXz0yO3YiRiZUHVV03CqcB
t0EOivwp+U9yU/Blrwb7I8Sy8MHUoRKjE6vfQ8yU2SfGN0Y//BDMScBN3Jcc
axADEgvem+w7E4MQi9ySbGux4djyycJ9M9tkbPOUZNuMTcQ2jo7mjuDc4N7Q
B8uCORK4khOTYwdqDs5U/4VgXQR/AY9xS3TtDzVB8NWcAWI3bDxnA32GbsJG
YivRX9hKbCq2dV4yd8G94EaIB/PCOShyUScnx3LUOBCvE08OK1zfgf/VO5nr
oX7rgOQ1xfeEk2Stp0TzZ9QwwX9fl2xLsbnYXuLrB/ROrXVtvu47OZp/o6YJ
vn5hsO82obz2QbCvOL5855nR+VVqgODvro7mduFo4WrR3/gm1xeOtYlhnwi2
Ma+V/srKYI4IruijYF97eua6oU+DfVtqCl/O/U3wbdHZfKvPg3077Ct2Fv4D
Xxmbhm37ONi3n1H+xreDfVX4YHjht4J9ycsz87LXJvsS+Bz4HtRvUK9DzQa1
G4OjcxHkOMh1nIdPkDlHQa7i3Ghdjc4mN4GPW8NlFPZ9yf+ydvjcm+rac4Xr
meFo4GpYX9Yan3kz+D3d75jMOQ9yHxdHfytyGOQyLor21fHZyQUNi+ab4fTh
9qnfJzc8V62v+sOjfSt8LHI75M9ZW2KIrQvzPeQa4EjIx5BP5VsQA21Z+Puw
lsRMWxX2ueGuiCnxxQ9JrickJiM2uyqaP4Zzh3tfXcaKcKbkl4iRiE+IGYmd
yL/zLfDx6+na0GjuGo4ZrpkYpCa2K2OT9wuvxyOady62U+NbZea84b4viOam
4cThxvnefHtilvqae2l07oMcCrkUzgDfE86Js0E9D7URnEfOJfwmsT7/J4R8
0f3J+WbWhnpCOFfqjag7got9IHk/s1bUs12dHMsQ4xDrjEhea3QuuveS5FoT
dCa689vo/c85uLjq+ilqL6mJ34b9ofHbZvbZ8d2p31pScQ0VtVTDk315YhRi
ldXR54Vzc0nV9VXUitbkkNmjybETMRex193J9QrsVeoXRyfHjsRYxFrXJPvi
+OD44q9Hc9VPBf9/liuS1wqbgG2gforaJHLKSf2XovmY2eX3uzKZX4BjgWvh
TNwV/E04KyOTY0t8enx7dCK6EQ4GLmYsPlzmGIFY4Sr2c+aYl9h3WHL9ALXp
/VhPfOjMMSuxK/Uv1NdQQ0YtGfVf1OZSo0WtVo9kLoWasX7J+gxujvzbnGT+
kLob6m8GCt8V7QvhE5GPuFv4gcw1m9RXsKasbY0+0PjGkt+WmTOFO6V+Ej1Q
ow+Sry0Ovgdj2XPsvZrzmbzH2Gs151P4gWhfG5+b3CJ8yLvBz9gheg+wF4g3
8MfZY+w15jQv42Vy7dRQvJ08Btnycv/Af1BLxxmgXgmb9lywj46tu5D1yl1z
TH0CHNXkYE4c7gp+lrpl6peH8n5qG+bWIfx/j1+jZdyDe3GmOFs884PkelW4
9VqZ673GRef+0O3k07C5zwbHFNhifHp8e2q8Llb/fuLBzDlfcr/3Red+yfGS
67032pfHpydX+6DwK5lzquRWZ0XHhsSI5Eqph8LmYBPJ5xKf4zNg44nX4Sdf
F76OMx6959n76GR02fjo/B45xppcY3SukZwmuc0JcB6Zc87knqlvpl6anBq5
Nb4p94bz4ltPjc4NkCMg3zYtur6HmlvycdPL/UaNLPlF+PNvgmse+L9d8D34
GugA6mnxAfEF8RmpzeIdyH3CufJuN5XPp4aafDDxCXq8Rp8n+5j4mtR3UwsG
33xmYR+e+Kp5eT4+KfXd1sn2ghp6+DB0Crqle2Z+4E6NvzNzzTf5xjui67mo
MSZfeHt0vRc1w+QTJ0XnU6n5Jj99Q/TasYbkNydG/zZ+I/nUG6Pzl9Sckw+l
HojcDJwr9Y1wMnAz1Hycl/zb0H/4PPAycMRHql8vWJ81S+ZGl5TxDRw8XDw1
hNQTD1ILuWv2qD8iZoGrpraPWKYmf5hZx6BriO+/Ds7JkZtjDGOpBzwnmdsl
NscHpd4R/UUugpru/ZN9fLjcWNqfN6PnRrVzk32or4JzSvhWtQrH3vi45ONb
JHPJ+EhdSn+V3BL1hjsm8/uDCvsU5I+odyE3tnPm/98Apw+3T40o9Spww8T+
xGjUm+J/kxugvnT75JwCuQVqVKmH5Z3hLuA4WAtyhuQOqWmCf6DehlwT+Snq
vYlJjlB/o9Ie8Y68KzWy1Ddtm8ydYwM6ML/c39QsULtwbbR/QsxP7I8NwZaQ
UyS3CL8M10/OktwCXDpcCj4/9UHXRfsf+JrUAuDzwn3A2eELk1+cHuwT8n/p
yN9QS8//3xmS/AxyI2tyP5uYCN0Mh0Ks9H30WHQouvSVaFvEnhpUxgtw7fgo
+CrkNMitkoMl1/F/wg5NIw==
               "]], 
              Polygon3DBox[CompressedData["
1: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
               "]], 
              
              Polygon3DBox[{{1284, 1283, 1734, 963, 964, 1735}, {1423, 840, 
               968, 1738, 1289, 1290}}]}, 
             Annotation[#, "Charting`Private`Tag$1868953#1"]& ]], 
           Lighting -> {{"Ambient", 
              GrayLevel[1]}}]}, {}, {}, {}, {}}, {{
          GrayLevel[0], 
          Line3DBox[CompressedData["
1:eJwt0jksZVEcB+Bj35coJmIfEUR4Bi0R9dAo6VSDDNFMiNDSaKkUCgpRetEo
5NmKyTQY+27CjGqqSYjCd5Mpfvl+5+See//v3ftxYLR3JCmEMCcfkkOI+lJq
CIVcYyU3GGOCHfzBbl6wn384xBe+yoRelBbCLMu5wHqusI1xdnGHb6zz0E05
tJ7kFzk1y5H1GX/ynMfRM3nCS57yimd8TgmhwblzfdgMe3qjJOTaNRf29/WY
bMuNvUt7n/Rb/Uq/4zXvecMH3vKve7e6bkfurKf4VfrNfmDdw212cp0tXGYt
51nKGRayQMb1f2Yc5BP7ot/Jz/zOdm6xiXFWcJUFjJkpn43MYwNzo/+XOVw0
629my5Azu+Z81MeYxWZ73/Rf+jRrnMuM3oterWfoVUxnBY0byuhYKKHbh2Im
//9e3gFNmkgG
           "]]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1185, 740, 1184, 1748, 1372, 1186, 1749, 1373, 1187, 
           1750, 1374, 1188, 1751, 1375, 1189, 1752, 1376, 1190, 1727, 1753, 
           1377, 1537, 1918, 1456, 1565, 1613, 746, 1616, 1614, 1615, 1566, 
           1935, 1378, 1538, 1457, 1754, 1379, 1539, 1458, 1755, 1380, 1191, 
           1756, 1381, 1192, 1757, 1382, 1193, 1758, 1383, 1194}], 
          
          Line3DBox[{1196, 1660, 1824, 1195, 754, 1197, 1759, 1384, 1198, 
           1760, 1385, 1199, 1761, 1386, 1200, 1762, 1387, 1201, 1898, 1459, 
           1388, 1540, 1919, 1460, 1567, 1617, 1661, 1940, 1620, 1618, 1619, 
           1568, 1662, 1899, 1541, 1461, 1763, 1389, 1542, 1462, 1764, 1390, 
           1202, 1765, 1391, 1203, 1766, 1392, 1204, 1767, 1393, 1205}], 
          
          Line3DBox[{1207, 1663, 1825, 1206, 1664, 1826, 1208, 768, 1209, 
           1768, 1394, 1210, 1769, 1395, 1211, 1770, 1396, 1212, 1900, 1463, 
           1397, 1543, 1920, 1464, 1569, 1621, 1639, 1622, 1941, 1544, 1623, 
           1465, 1570, 1665, 1901, 1545, 1466, 774, 1546, 1467, 1771, 1398, 
           1213, 1772, 1399, 1214, 1773, 1400, 1215, 1774, 1401, 1216}], 
          
          Line3DBox[{1218, 1666, 1827, 1217, 1667, 1828, 1219, 1668, 1829, 
           1220, 782, 1221, 1775, 1402, 1222, 1776, 1403, 1223, 1902, 1468, 
           1404, 1547, 1921, 1469, 1571, 1624, 1640, 1903, 1746, 1548, 1625, 
           1470, 1572, 1669, 1904, 1549, 1471, 1670, 1905, 1550, 1472, 788, 
           1224, 1777, 1405, 1225, 1778, 1406, 1226, 1779, 1407, 1227}], 
          
          Line3DBox[{1229, 1671, 1830, 1228, 1672, 1831, 1230, 1673, 1832, 
           1231, 1674, 1833, 1232, 796, 1233, 1780, 1408, 1234, 1906, 1473, 
           1474, 1235, 1944, 1647, 1475, 1648, 1476, 1641, 1092, 1575, 1574, 
           1477, 1573, 1478, 1922, 1236, 1479, 1480, 1923, 1237, 1481, 1834, 
           1728, 1238, 1781, 1409, 1239, 1782, 1410, 1240, 1783, 1411, 1241}], 
          
          Line3DBox[{1243, 1675, 1835, 1242, 1676, 1836, 1244, 1677, 1837, 
           1245, 1678, 1838, 1246, 1679, 1839, 1247, 810, 1248, 1907, 1482, 
           1483, 1249, 1945, 1649, 1484, 1650, 1485, 1642, 1578, 1924, 1579, 
           1577, 1486, 1576, 1487, 1925, 1250, 1488, 1840, 1729, 1251, 1489, 
           1841, 1730, 1252, 1680, 1842, 1253, 1784, 1412, 1254, 1785, 1413, 
           1255}], 
          
          Line3DBox[{1257, 1681, 1843, 1256, 1682, 1844, 1258, 1683, 1845, 
           1259, 1684, 1846, 1260, 1685, 1847, 1261, 1686, 1848, 1262, 957, 
           1490, 1263, 1946, 1651, 1652, 1580, 1585, 1584, 1936, 1264, 1582, 
           1583, 1581, 1849, 1731, 1265, 1491, 1850, 1732, 1266, 1492, 1851, 
           1733, 1267, 1687, 1852, 1268, 1688, 1853, 1269, 1689, 1854, 1270}], 
          
          Line3DBox[{1274, 1786, 1414, 1272, 1787, 1415, 1276, 1788, 1416, 
           1278, 1789, 1417, 1280, 1790, 1418, 1282, 1791, 1419, 1284, 1735, 
           1792, 1420, 1551, 1926, 1494, 1591, 1626, 837, 1629, 1627, 1628, 
           1592, 1938, 1421, 1552, 1496, 1793, 1422, 1553, 1498, 1794, 1423, 
           1290, 1795, 1424, 1292, 1796, 1425, 1294, 1797, 1426, 1296}], 
          
          Line3DBox[{1295, 1867, 1698, 1293, 1866, 1697, 1291, 1865, 1696, 
           1289, 1738, 1864, 1497, 1288, 1737, 1863, 1495, 1287, 1736, 1862, 
           1587, 1589, 1588, 1286, 1745, 1937, 1590, 1586, 1653, 1170, 1285, 
           1493, 1861, 1734, 1283, 1860, 1695, 1281, 1859, 1694, 1279, 1858, 
           1693, 1277, 1857, 1692, 1275, 1856, 1691, 1271, 1855, 1690, 1273}], 
          
          Line3DBox[{1298, 1699, 1868, 1297, 1798, 1427, 1299, 1799, 1428, 
           1300, 1800, 1429, 1301, 1801, 1430, 1302, 1802, 1431, 1303, 1908, 
           1499, 1432, 1554, 1927, 1500, 1593, 1630, 1700, 1942, 1633, 1631, 
           1632, 1594, 851, 1555, 1501, 1803, 1433, 1556, 1502, 1804, 1434, 
           1304, 1805, 1435, 1305, 1806, 1436, 1306, 1807, 1437, 1307}], 
          
          Line3DBox[{1309, 1701, 1869, 1308, 1702, 1870, 1310, 859, 1311, 
           1808, 1438, 1312, 1809, 1439, 1313, 1810, 1440, 1314, 1909, 1503, 
           1441, 1557, 1928, 1504, 1595, 1634, 1643, 1635, 1943, 1558, 1636, 
           1505, 1596, 1703, 1910, 1559, 1506, 865, 1560, 1507, 1811, 1442, 
           1315, 1812, 1443, 1316, 1813, 1444, 1317, 1814, 1445, 1318}], 
          
          Line3DBox[{1320, 1704, 1871, 1319, 1705, 1872, 1321, 1706, 1873, 
           1322, 873, 1323, 1815, 1446, 1324, 1816, 1447, 1325, 1911, 1508, 
           1448, 1561, 1929, 1509, 1597, 1637, 1644, 1912, 1747, 1562, 1638, 
           1510, 1598, 1707, 1913, 1563, 1511, 1708, 1914, 1564, 1512, 879, 
           1326, 1817, 1449, 1327, 1818, 1450, 1328, 1819, 1451, 1329}], 
          
          Line3DBox[{1331, 1709, 1874, 1330, 1710, 1875, 1332, 1711, 1876, 
           1333, 1712, 1877, 1334, 1713, 1878, 1335, 1820, 1452, 1336, 1915, 
           1513, 1514, 1337, 1947, 1654, 1515, 1655, 1516, 1645, 1601, 1930, 
           1602, 1600, 1517, 1599, 1518, 1931, 1338, 1519, 1520, 1932, 1339, 
           1521, 1879, 1739, 1340, 893, 1341, 1821, 1453, 1342, 1822, 1454, 
           1343}], 
          
          Line3DBox[{1345, 1714, 1880, 1344, 1715, 1881, 1346, 1716, 1882, 
           1347, 1717, 1883, 1348, 1718, 1884, 1349, 901, 1350, 1916, 1522, 
           1523, 1351, 1948, 1656, 1524, 1657, 1525, 1646, 1605, 1933, 1606, 
           1604, 1526, 1603, 1527, 1934, 1352, 1528, 1885, 1740, 1353, 1529, 
           1886, 1741, 1354, 1719, 1887, 1355, 907, 1356, 1823, 1455, 1357}], 
          
          Line3DBox[{1371, 1536, 1006, 1370, 1897, 1726, 1369, 1896, 1725, 
           1368, 1744, 1895, 1535, 1367, 1743, 1894, 1534, 1366, 1742, 1893, 
           1608, 1610, 1609, 1365, 1939, 1611, 1612, 1607, 1659, 1658, 1949, 
           1364, 1533, 1000, 1363, 1892, 1724, 1362, 1891, 1723, 1361, 1890, 
           1722, 1360, 1889, 1721, 1359, 1888, 1720, 1358, 1917, 1531, 1530, 
           1532}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{534, 740, 535, 1824, 753, 560, 1825, 766, 574, 1827, 779,
            588, 1830, 792, 602, 1835, 805, 616, 1843, 818, 630, 1855, 831, 
           1786, 644, 1868, 844, 658, 1869, 857, 672, 1871, 870, 686, 1874, 
           883, 700, 1880, 896, 714, 999, 1917, 909, 728}], 
          
          Line3DBox[{536, 741, 1748, 537, 754, 561, 1826, 767, 575, 1828, 780,
            589, 1831, 793, 603, 1836, 806, 617, 1844, 819, 631, 1856, 832, 
           1787, 645, 845, 1798, 659, 1870, 858, 673, 1872, 871, 687, 1875, 
           884, 701, 1881, 897, 715, 1888, 910, 729}], 
          
          Line3DBox[{538, 742, 1749, 539, 755, 1759, 562, 768, 576, 1829, 781,
            590, 1832, 794, 604, 1837, 807, 618, 1845, 820, 632, 1857, 833, 
           1788, 646, 846, 1799, 660, 859, 674, 1873, 872, 688, 1876, 885, 
           702, 1882, 898, 716, 1889, 911, 730}], 
          
          Line3DBox[{540, 743, 1750, 541, 756, 1760, 563, 769, 1768, 577, 782,
            591, 1833, 795, 605, 1838, 808, 619, 1846, 821, 633, 1858, 834, 
           1789, 647, 847, 1800, 661, 860, 1808, 675, 873, 689, 1877, 886, 
           703, 1883, 899, 717, 1890, 912, 731}], 
          
          Line3DBox[{542, 744, 1751, 543, 757, 1761, 564, 770, 1769, 578, 783,
            1775, 592, 796, 606, 1839, 809, 620, 1847, 822, 634, 1859, 835, 
           1790, 648, 848, 1801, 662, 861, 1809, 676, 874, 1815, 690, 1878, 
           887, 704, 1884, 900, 718, 1891, 913, 732}], 
          
          Line3DBox[{544, 745, 1752, 545, 758, 1762, 565, 771, 1770, 579, 784,
            1776, 593, 797, 1780, 607, 810, 621, 1848, 823, 635, 1860, 836, 
           1791, 649, 849, 1802, 663, 862, 1810, 677, 875, 1816, 691, 888, 
           1820, 705, 901, 719, 1892, 914, 733}], 
          
          Line3DBox[{546, 921, 922, 1753, 547, 927, 1898, 928, 566, 933, 1900,
            934, 580, 939, 1902, 940, 594, 945, 1906, 946, 608, 951, 1907, 
           952, 622, 957, 958, 636, 1861, 963, 964, 1792, 650, 969, 1908, 970,
            664, 975, 1909, 976, 678, 981, 1911, 982, 692, 987, 1915, 988, 
           706, 993, 1916, 994, 720, 1000, 1001, 1002}], 
          Line3DBox[CompressedData["
1:eJwVzyszhGEYh/F7HcYIgiAIws4QiGtGEARBEIQNGwRhg2KGb8AqzsfFOqxd
I0mbJEmSJEna5BMIgmDG7w7XXM//esP7PMXqRnm9EBEVjPdETPZFTOG7N2Jz
IKLJM/YOdvFjb+mPPGvvYR+/dk1/4jn7AIf4s7f1Ds/bR7ixj7mAZ32BT3Cr
n3I/XvRFPsOdfs6DeNWXuI4LDOXdfH/Ty86XuMJw3ld/1yvODVxjJO+sf+jL
eZf8L0bzHfqnvpL/RDPfz2Po6lW+T/QWF/Glr3IbLf2BJzCNEtbwD7M+LZ8=

           "]], 
          
          Line3DBox[{552, 926, 749, 1755, 553, 932, 762, 1764, 570, 938, 775, 
           1771, 584, 944, 788, 598, 1834, 950, 801, 612, 1841, 956, 814, 626,
            1851, 962, 827, 640, 1864, 968, 840, 1794, 654, 974, 853, 1804, 
           668, 980, 866, 1811, 682, 986, 879, 696, 1879, 992, 892, 710, 1886,
            998, 905, 724, 1895, 1005, 918, 737}], 
          
          Line3DBox[{554, 750, 1756, 555, 763, 1765, 571, 776, 1772, 585, 789,
            1777, 599, 802, 1781, 613, 1842, 815, 627, 1852, 828, 641, 1865, 
           841, 1795, 655, 854, 1805, 669, 867, 1812, 683, 880, 1817, 697, 
           893, 711, 1887, 906, 725, 1896, 919, 738}], 
          
          Line3DBox[{556, 751, 1757, 557, 764, 1766, 572, 777, 1773, 586, 790,
            1778, 600, 803, 1782, 614, 816, 1784, 628, 1853, 829, 642, 1866, 
           842, 1796, 656, 855, 1806, 670, 868, 1813, 684, 881, 1818, 698, 
           894, 1821, 712, 907, 726, 1897, 920, 739}], 
          
          Line3DBox[{558, 752, 1758, 559, 765, 1767, 573, 778, 1774, 587, 791,
            1779, 601, 804, 1783, 615, 817, 1785, 629, 1854, 830, 643, 1867, 
           843, 1797, 657, 856, 1807, 671, 869, 1814, 685, 882, 1819, 699, 
           895, 1822, 713, 908, 1823, 727, 1006, 1007, 1008}], 
          Line3DBox[CompressedData["
1:eJwV0MkqRmEcBvDXEGWhWFhYKIoNsiGEEELIHELmUB+feZ6nBSky5QpcgStw
BW7ABVhaUBbyO4tf//97nuc9nU7uZLxnMSGEsM9HYgh3SSGUJodQTAFzzHOX
GsKs+a5zoXNuPyOPaa7lM+YUbzrbOqf2E3IY51JnwhzjVSemc2w/YkuWbY4w
yjAvOmM6h/Yn+YGZxSBDDPCs06PzKN933iOTPvrp5UqnSWfXvkM6XXTTyW10
V6dCZzv6FtJop4MbeZsZ1ynU2bRvkEJL9B/krWYzEzo5Ouv2NRJppImG6Hvk
GfJV+0r0Tnf/nOvs9dRGXZ1kz5btD/Il89e52qyhinKdH+7lcedFvnUqzMoo
J1/+yYI9xpe8yCyjkBL+AVr1NXQ=
           "]], 
          
          Line3DBox[{735, 916, 1070, 1063, 1003, 1893, 722, 903, 1059, 1934, 
           996, 708, 890, 1055, 1931, 990, 694, 877, 1913, 1051, 984, 680, 
           864, 1910, 1047, 978, 666, 851, 1043, 972, 652, 1938, 838, 1039, 
           966, 1862, 638, 825, 1035, 960, 1849, 624, 812, 1031, 1925, 954, 
           610, 799, 1027, 1922, 948, 596, 786, 1904, 1023, 942, 582, 773, 
           1901, 1019, 936, 568, 760, 1899, 1015, 930, 550, 1935, 747, 1011, 
           1073, 1072, 1130}], 
          
          Line3DBox[{736, 917, 1064, 1004, 1894, 723, 904, 1060, 997, 1885, 
           709, 891, 1056, 1932, 991, 695, 878, 1914, 1052, 985, 681, 865, 
           1048, 979, 667, 1803, 852, 1044, 973, 653, 1793, 839, 1040, 967, 
           1863, 639, 826, 1036, 961, 1850, 625, 813, 1032, 955, 1840, 611, 
           800, 1028, 1923, 949, 597, 787, 1905, 1024, 943, 583, 774, 1020, 
           937, 569, 1763, 761, 1016, 931, 551, 1754, 748, 1012, 924, 
           925}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
4n6cpLbNRPWIPILvGr3lUPxPZL0/x8/T29DxPL0u14dqOXRxutax4lYfQccX
zOlarzKc4e057euEXsoR+xooc4/lNhVN7zjA0v/lzriBRJ4/izsfy0DzMGLf
BEu3+CuzDeOrwI1AVbsgeXKdUFj7nZbhKw7Idd84ZNKraJHrjeEMZ3jX+ef4
/HCBz3XaUnx+SIDmB36vy8vf/FF/ZtO7ZxwwTztD/jknjuCrPvhrr0Tur/Hi
TkEzMt8YVgHWYqvD2e+reHLE/izK132B+3dhkH9HV7v4ve90rUt7O++qn9Vb
OdN/usYNkh0zNuRVAmVVf53s1dU8OWp/H3d9+MNG0frL3P9Rnd+o2ilUPgBi
nztt7WK4YPxByvbNbnad1wMojirHFPenalI6+lMoee56KRVfL8HzVfVg8Ziv
BuH2JVvE9kVc9bP+G+8x3uad+wmKH3/oe9e1NANI7jm3qj6egxl7yhnKBZHt
mmA66SvtHVlIeVelkYonqjmYISf8iNzw0yB0+8L1MteikPJGl53iYk9ysLGW
b85XyGYCdXWXPbOfhyPl6eKGRtVHY/61Bwb2SY6HnsYC3a+sh9a9QM//0Pkz
LOj8mU7yFR3fc8TK7Pieo07y0Pt6WND70TrJ08XhOK0BDzvYt/VOlqIZmccx
Kd/EzcWvjjY9nHMLlT/8lpQPD2tdEOV/TOh6KCsNCSsYyyb00HjWN3tNGLpd
VDlVPchOczRPbiDlrZewzUMUzghdD1S5OtQfVGnuD/DznUX48x1U3vLNUUFL
b0/IJ3iojrP9CasnYqc3FF9RkqDRdxxZ3+O5Us/T56Gf6+2/FDk080278dI3
yeL0O/T4RelzdbRlRHa7cvQiPjVqaRT9ehjmKVM91vcZlU+M08OTx5nlrKDv
/sL7oHV57IOG9/n64/t8e8r+XxSf1Wb3CT37QXZfXOrZW/jHEifxx4JPm9gX
psLcGOpvyjz6mxM0T9rymCfTvjtSrv89Kf9z8jjnxOJ8sdMP/Jya1zqzD2R/
dXjY34RIr03lK0n5uWrBzgO86Fvn0MWp6uE7tqze1TVkPGPKhKDx1cU9fx83
VT2sa0l67qNN3s/knSFzHpeKX961qDiuH0KfjH66xhOh9Vg4zeux7uLn8bhx
rErHuHF310eh7EDejXbjPR+zyJv1yz5C/tRRD3mjpstg8vp1chdCOVgwuL8i
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

        "]], {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGrids -> None, 
    FaceGridsStyle -> Automatic, ImageSize -> {360., 338.9892226395929}, 
    Lighting -> {{"Ambient", 
       GrayLevel[0.5]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{0, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 0, 2}]}}, 
    PlotRange -> {{-17.131353009265872`, 
      19.93298299665301}, {-19.10270174963855, 19.88619303959196}, Automatic},
     PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.42769327351158737`, 
    ViewPoint -> {0.9701100773531636, -3.0941658841085737`, 
     0.9669663486577222}, 
    ViewVertical -> {0.03370251247771652, -0.13750083990909487`, 
     0.9899281083376624}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"training\"", "\"validation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[425]=",ExpressionUUID->"b43bb519-97b2-4c46-a4eb-bc880f3da5ec"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d07896c2-14e3-4c20-b4dc-a42e3c1a310e"],

Cell["Deeper Networks", "Chapter",ExpressionUUID->"6e76729e-08b9-41b8-ba97-f60bafeb7f73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"108ac2fd-8035-424a-96d5-4dae9f3f544a"],

Cell[CellGroupData[{

Cell["Nonlinear regression", "Section",ExpressionUUID->"2622ec79-c94b-4d5f-9771-e5b753d9f32a"],

Cell["\<\
It is not always possible to solve a regression problem with a linear model \
or to know in advance a non-linear encoding of the data that turns the \
problem into a linear one.\[LineSeparator]The real power of neural networks \
is to build a function approximator stacking a sequence of linear \
transformation followed by a non-linear function.\
\>", "Text",ExpressionUUID->"2f43c278-7e6a-4cdb-9871-a1e3c33cdbb1"],

Cell[TextData[{
 "The non-linear part, often called ",
 StyleBox["transfer function",
  FontSlant->"Italic"],
 ", ",
 StyleBox["activation function",
  FontSlant->"Italic"],
 " or simply ",
 StyleBox["non-linearity",
  FontSlant->"Italic"],
 ", is an essential element, without it a sequence of linear model is just a \
more elaborate way to specify a single linear model."
}], "Text",ExpressionUUID->"518a00c5-4be0-45de-8aa6-4bb436264470"],

Cell["\<\
Linear and elementwise operation are so popular that they can be specified in \
a compact form\
\>", "Item",ExpressionUUID->"db2d6636-f26e-4733-93ec-65930eda5a5e"],

Cell[CellGroupData[{

Cell[TextData[{
 "The network internally works on tensor data, you can use an extra layer \
like ",
 StyleBox["SummationLayer", "Input"],
 " to collapse it into a scalar"
}], "Item",ExpressionUUID->"bb4e1bbd-26cd-4a4a-a7f4-0ea04f4ca488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", 
    RowBox[{"10", ",", "Tanh", ",", "10", ",", "Tanh", ",", "1", ",", 
     RowBox[{"SummationLayer", "[", "]"}]}], "}"}], "]"}]}]], "Input",
 CellLabel->
  "In[443]:=",ExpressionUUID->"e81f6ab2-5d0c-4c4f-b1da-82e536614eeb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Summation", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SummationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[443]=",ExpressionUUID->"bf36b04b-0759-4d3e-bcd7-fc8fdce58e74"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "In this case we use a linear transformation that recombines the \
2-dimensional input in a higher dimensional space (10), making hopefully easy \
for the model the task of finding the proper coefficients. This type of \
non-trainable settings are called ",
 StyleBox["hyper-parameters",
  FontSlant->"Italic"],
 " and in general are not easy to optimize."
}], "Text",ExpressionUUID->"c068aef1-0558-4bf3-ab8e-32cc93ee576f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], {
         {GrayLevel[0.852534817175651], LineBox[{{6, -0.75}, {12, -6.75}}]}, 
         {GrayLevel[0.7909701563658564], LineBox[{{6, -0.75}, {12, -5.25}}]}, 
         {GrayLevel[0.4283418591404009], LineBox[{{6, -0.75}, {12, -3.75}}]}, 
         {GrayLevel[0.6370202847105166], LineBox[{{6, -0.75}, {12, -2.25}}]}, 
         {GrayLevel[0.37916149051612513`], 
          LineBox[{{6, -0.75}, {12, -0.75}}]}, 
         {GrayLevel[0.6582546209748312], LineBox[{{6, -0.75}, {12, 0.75}}]}, 
         {GrayLevel[0.5136454356660742], LineBox[{{6, -0.75}, {12, 2.25}}]}, 
         {GrayLevel[0.5924414293187978], LineBox[{{6, -0.75}, {12, 3.75}}]}, 
         {GrayLevel[0.6728357129335172], LineBox[{{6, -0.75}, {12, 5.25}}]}, 
         {GrayLevel[0.3468421263157113], LineBox[{{6, -0.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.47704468025976765`], LineBox[{{6, 0.75}, {12, -6.75}}]}, 
         {GrayLevel[0.7496206263391598], LineBox[{{6, 0.75}, {12, -5.25}}]}, 
         {GrayLevel[0.3149233086282861], LineBox[{{6, 0.75}, {12, -3.75}}]}, 
         {GrayLevel[0.5804899285652778], LineBox[{{6, 0.75}, {12, -2.25}}]}, 
         {GrayLevel[0.48244042772102436`], LineBox[{{6, 0.75}, {12, -0.75}}]}, 
         {GrayLevel[0.737314903918429], LineBox[{{6, 0.75}, {12, 0.75}}]}, 
         {GrayLevel[0.2553071861720315], LineBox[{{6, 0.75}, {12, 2.25}}]}, 
         {GrayLevel[0.4684747244456213], LineBox[{{6, 0.75}, {12, 3.75}}]}, 
         {GrayLevel[0.18640898981005793`], LineBox[{{6, 0.75}, {12, 5.25}}]}, 
         {GrayLevel[0.44345684316914813`], 
          LineBox[{{6, 0.75}, {12, 6.75}}]}}}, 
       {EdgeForm[RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, 0.75}, 0.33]}, 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -0.75}, 0.33]}, 
        {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, -6.75}, 0.33], 
         DiskBox[{12, -5.25}, 0.33], DiskBox[{12, -3.75}, 0.33], 
         DiskBox[{12, -2.25}, 0.33], DiskBox[{12, -0.75}, 0.33], 
         DiskBox[{12, 0.75}, 0.33], DiskBox[{12, 2.25}, 0.33], 
         DiskBox[{12, 3.75}, 0.33], DiskBox[{12, 5.25}, 0.33], 
         DiskBox[{12, 6.75}, 0.33]}}},
      ImageSize->Small], ",", 
     GraphicsBox[{
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        LineBox[{{6, -6.75}, {12, -6.75}}], 
        LineBox[{{6, -5.25}, {12, -5.25}}], 
        LineBox[{{6, -3.75}, {12, -3.75}}], 
        LineBox[{{6, -2.25}, {12, -2.25}}], 
        LineBox[{{6, -0.75}, {12, -0.75}}], LineBox[{{6, 0.75}, {12, 0.75}}], 
        LineBox[{{6, 2.25}, {12, 2.25}}], LineBox[{{6, 3.75}, {12, 3.75}}], 
        LineBox[{{6, 5.25}, {12, 5.25}}], LineBox[{{6, 6.75}, {12, 6.75}}]}, 
       {EdgeForm[RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -6.75}, 0.33], 
         DiskBox[{6, -5.25}, 0.33], DiskBox[{6, -3.75}, 0.33], 
         DiskBox[{6, -2.25}, 0.33], DiskBox[{6, -0.75}, 0.33], 
         DiskBox[{6, 0.75}, 0.33], DiskBox[{6, 2.25}, 0.33], 
         DiskBox[{6, 3.75}, 0.33], DiskBox[{6, 5.25}, 0.33], 
         DiskBox[{6, 6.75}, 0.33]}, 
        {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, -6.75}, 0.33], 
         DiskBox[{12, -5.25}, 0.33], DiskBox[{12, -3.75}, 0.33], 
         DiskBox[{12, -2.25}, 0.33], DiskBox[{12, -0.75}, 0.33], 
         DiskBox[{12, 0.75}, 0.33], DiskBox[{12, 2.25}, 0.33], 
         DiskBox[{12, 3.75}, 0.33], DiskBox[{12, 5.25}, 0.33], 
         DiskBox[{12, 6.75}, 0.33]}, 
        {EdgeForm[{GrayLevel[0], Thickness[Tiny]}], FaceForm[GrayLevel[
         0.95]], {RectangleBox[{8, -7.35}, {10, -6.15}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -6.75}]}, {
          RectangleBox[{8, -5.85}, {10, -4.65}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -5.25}]}, {
          RectangleBox[{8, -4.35}, {10, -3.15}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -3.75}]}, {
          RectangleBox[{8, -2.85}, {10, -1.65}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -2.25}]}, {
          RectangleBox[{8, -1.35}, {10, -0.15000000000000002}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -0.75}]}, {
          RectangleBox[{8, 0.15000000000000002}, {10, 1.35}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 0.75}]}, {RectangleBox[{8, 1.65}, {10, 2.85}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 2.25}]}, {RectangleBox[{8, 3.15}, {10, 4.35}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 3.75}]}, {RectangleBox[{8, 4.65}, {10, 5.85}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 5.25}]}, {RectangleBox[{8, 6.15}, {10, 7.35}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 6.75}]}}}},
      ImageSize->{104.42456452061994`, Automatic}], ",", 
     GraphicsBox[{
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], {
         {GrayLevel[0.7311806959149787], LineBox[{{6, -6.75}, {12, -6.75}}]}, 
         {GrayLevel[0.580538152267799], LineBox[{{6, -6.75}, {12, -5.25}}]}, 
         {GrayLevel[0.15560275761524445`], 
          LineBox[{{6, -6.75}, {12, -3.75}}]}, 
         {GrayLevel[0.3600190863298587], LineBox[{{6, -6.75}, {12, -2.25}}]}, 
         {GrayLevel[0.20462581871461305`], 
          LineBox[{{6, -6.75}, {12, -0.75}}]}, 
         {GrayLevel[0.2921361721368477], LineBox[{{6, -6.75}, {12, 0.75}}]}, 
         {GrayLevel[0.3829457025435741], LineBox[{{6, -6.75}, {12, 2.25}}]}, 
         {GrayLevel[0.15583074897896165`], LineBox[{{6, -6.75}, {12, 3.75}}]}, 
         {GrayLevel[0.37936785278335705`], LineBox[{{6, -6.75}, {12, 5.25}}]}, 
         {GrayLevel[0.14724284976045765`], 
          LineBox[{{6, -6.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.7872679914942917], LineBox[{{6, -5.25}, {12, -6.75}}]}, 
         {GrayLevel[0.3985907995974898], LineBox[{{6, -5.25}, {12, -5.25}}]}, 
         {GrayLevel[0.6243582485538197], LineBox[{{6, -5.25}, {12, -3.75}}]}, 
         {GrayLevel[0.4411485185623314], LineBox[{{6, -5.25}, {12, -2.25}}]}, 
         {GrayLevel[0.24000057250602036`], 
          LineBox[{{6, -5.25}, {12, -0.75}}]}, 
         {GrayLevel[0.1318382931575206], LineBox[{{6, -5.25}, {12, 0.75}}]}, 
         {GrayLevel[0.7074955017032396], LineBox[{{6, -5.25}, {12, 2.25}}]}, 
         {GrayLevel[0.7358096464930055], LineBox[{{6, -5.25}, {12, 3.75}}]}, 
         {GrayLevel[0.24779827307550406`], LineBox[{{6, -5.25}, {12, 5.25}}]}, 
         {GrayLevel[0.6112524963590085], LineBox[{{6, -5.25}, {12, 6.75}}]}}, {
         {GrayLevel[0.2128964158200901], LineBox[{{6, -3.75}, {12, -6.75}}]}, 
         {GrayLevel[0.43557049734291553`], 
          LineBox[{{6, -3.75}, {12, -5.25}}]}, 
         {GrayLevel[0.8225296704533163], LineBox[{{6, -3.75}, {12, -3.75}}]}, 
         {GrayLevel[0.4587580398849669], LineBox[{{6, -3.75}, {12, -2.25}}]}, 
         {GrayLevel[0.3694023236550278], LineBox[{{6, -3.75}, {12, -0.75}}]}, 
         {GrayLevel[0.29327859162883585`], LineBox[{{6, -3.75}, {12, 0.75}}]}, 
         {GrayLevel[0.8625248602627182], LineBox[{{6, -3.75}, {12, 2.25}}]}, 
         {GrayLevel[0.7206386050987095], LineBox[{{6, -3.75}, {12, 3.75}}]}, 
         {GrayLevel[0.432903453961885], LineBox[{{6, -3.75}, {12, 5.25}}]}, 
         {GrayLevel[0.21050654543506053`], 
          LineBox[{{6, -3.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.3505224073288429], LineBox[{{6, -2.25}, {12, -6.75}}]}, 
         {GrayLevel[0.6475260500188769], LineBox[{{6, -2.25}, {12, -5.25}}]}, 
         {GrayLevel[0.19358364324227129`], 
          LineBox[{{6, -2.25}, {12, -3.75}}]}, 
         {GrayLevel[0.20139926237292283`], 
          LineBox[{{6, -2.25}, {12, -2.25}}]}, 
         {GrayLevel[0.8653603004756496], LineBox[{{6, -2.25}, {12, -0.75}}]}, 
         {GrayLevel[0.572827128795268], LineBox[{{6, -2.25}, {12, 0.75}}]}, 
         {GrayLevel[0.20449051801980866`], LineBox[{{6, -2.25}, {12, 2.25}}]}, 
         {GrayLevel[0.2656521710547578], LineBox[{{6, -2.25}, {12, 3.75}}]}, 
         {GrayLevel[0.6327787312832946], LineBox[{{6, -2.25}, {12, 5.25}}]}, 
         {GrayLevel[0.848953353785848], LineBox[{{6, -2.25}, {12, 6.75}}]}}, {
         {GrayLevel[0.17723067892831568`], 
          LineBox[{{6, -0.75}, {12, -6.75}}]}, 
         {GrayLevel[0.46830807670999275`], 
          LineBox[{{6, -0.75}, {12, -5.25}}]}, 
         {GrayLevel[0.6845766355969327], LineBox[{{6, -0.75}, {12, -3.75}}]}, 
         {GrayLevel[0.56752474535516], LineBox[{{6, -0.75}, {12, -2.25}}]}, 
         {GrayLevel[0.49284152505422973`], 
          LineBox[{{6, -0.75}, {12, -0.75}}]}, 
         {GrayLevel[0.4192999126756298], LineBox[{{6, -0.75}, {12, 0.75}}]}, 
         {GrayLevel[0.20038070372352923`], LineBox[{{6, -0.75}, {12, 2.25}}]}, 
         {GrayLevel[0.8078536096502804], LineBox[{{6, -0.75}, {12, 3.75}}]}, 
         {GrayLevel[0.33475438270794666`], LineBox[{{6, -0.75}, {12, 5.25}}]}, 
         {GrayLevel[0.46061340278501506`], 
          LineBox[{{6, -0.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.7153784734787287], LineBox[{{6, 0.75}, {12, -6.75}}]}, 
         {GrayLevel[0.15183918212729042`], LineBox[{{6, 0.75}, {12, -5.25}}]}, 
         {GrayLevel[0.6263270808594918], LineBox[{{6, 0.75}, {12, -3.75}}]}, 
         {GrayLevel[0.5063375001047592], LineBox[{{6, 0.75}, {12, -2.25}}]}, 
         {GrayLevel[0.5300248771492695], LineBox[{{6, 0.75}, {12, -0.75}}]}, 
         {GrayLevel[0.19312571357999175`], LineBox[{{6, 0.75}, {12, 0.75}}]}, 
         {GrayLevel[0.8621149561289685], LineBox[{{6, 0.75}, {12, 2.25}}]}, 
         {GrayLevel[0.5241906094508526], LineBox[{{6, 0.75}, {12, 3.75}}]}, 
         {GrayLevel[0.46616678568428527`], LineBox[{{6, 0.75}, {12, 5.25}}]}, 
         {GrayLevel[0.7626340513542229], LineBox[{{6, 0.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.683952311813969], LineBox[{{6, 2.25}, {12, -6.75}}]}, 
         {GrayLevel[0.20920390911372322`], LineBox[{{6, 2.25}, {12, -5.25}}]}, 
         {GrayLevel[0.6998615865755884], LineBox[{{6, 2.25}, {12, -3.75}}]}, 
         {GrayLevel[0.20622320458074772`], LineBox[{{6, 2.25}, {12, -2.25}}]}, 
         {GrayLevel[0.6537068393695868], LineBox[{{6, 2.25}, {12, -0.75}}]}, 
         {GrayLevel[0.8397021474804678], LineBox[{{6, 2.25}, {12, 0.75}}]}, 
         {GrayLevel[0.4426605363174878], LineBox[{{6, 2.25}, {12, 2.25}}]}, 
         {GrayLevel[0.5029252823150752], LineBox[{{6, 2.25}, {12, 3.75}}]}, 
         {GrayLevel[0.3443596276661549], LineBox[{{6, 2.25}, {12, 5.25}}]}, 
         {GrayLevel[0.35833145751186724`], 
          LineBox[{{6, 2.25}, {12, 6.75}}]}}, {
         {GrayLevel[0.7730885540809054], LineBox[{{6, 3.75}, {12, -6.75}}]}, 
         {GrayLevel[0.5947128395336674], LineBox[{{6, 3.75}, {12, -5.25}}]}, 
         {GrayLevel[0.5967725245136042], LineBox[{{6, 3.75}, {12, -3.75}}]}, 
         {GrayLevel[0.7858333836151155], LineBox[{{6, 3.75}, {12, -2.25}}]}, 
         {GrayLevel[0.19462365507455048`], LineBox[{{6, 3.75}, {12, -0.75}}]}, 
         {GrayLevel[0.33401910072630325`], LineBox[{{6, 3.75}, {12, 0.75}}]}, 
         {GrayLevel[0.6625618525474934], LineBox[{{6, 3.75}, {12, 2.25}}]}, 
         {GrayLevel[0.3105283728701884], LineBox[{{6, 3.75}, {12, 3.75}}]}, 
         {GrayLevel[0.18204775780499205`], LineBox[{{6, 3.75}, {12, 5.25}}]}, 
         {GrayLevel[0.6824061578627583], LineBox[{{6, 3.75}, {12, 6.75}}]}}, {
         {GrayLevel[0.2999211991625145], LineBox[{{6, 5.25}, {12, -6.75}}]}, 
         {GrayLevel[0.6706744924080745], LineBox[{{6, 5.25}, {12, -5.25}}]}, 
         {GrayLevel[0.45943813452775006`], LineBox[{{6, 5.25}, {12, -3.75}}]}, 
         {GrayLevel[0.8478008137677162], LineBox[{{6, 5.25}, {12, -2.25}}]}, 
         {GrayLevel[0.7312356008240415], LineBox[{{6, 5.25}, {12, -0.75}}]}, 
         {GrayLevel[0.7906064419349872], LineBox[{{6, 5.25}, {12, 0.75}}]}, 
         {GrayLevel[0.5576620978892226], LineBox[{{6, 5.25}, {12, 2.25}}]}, 
         {GrayLevel[0.24819138063077317`], LineBox[{{6, 5.25}, {12, 3.75}}]}, 
         {GrayLevel[0.4913775587574831], LineBox[{{6, 5.25}, {12, 5.25}}]}, 
         {GrayLevel[0.7318403602801982], LineBox[{{6, 5.25}, {12, 6.75}}]}}, {
         {GrayLevel[0.45611042605859775`], LineBox[{{6, 6.75}, {12, -6.75}}]}, 
         {GrayLevel[0.6367003643057361], LineBox[{{6, 6.75}, {12, -5.25}}]}, 
         {GrayLevel[0.43686167575864676`], LineBox[{{6, 6.75}, {12, -3.75}}]}, 
         {GrayLevel[0.424254057058292], LineBox[{{6, 6.75}, {12, -2.25}}]}, 
         {GrayLevel[0.8671846851908342], LineBox[{{6, 6.75}, {12, -0.75}}]}, 
         {GrayLevel[0.5883911772105601], LineBox[{{6, 6.75}, {12, 0.75}}]}, 
         {GrayLevel[0.8325778770022629], LineBox[{{6, 6.75}, {12, 2.25}}]}, 
         {GrayLevel[0.6550757998039034], LineBox[{{6, 6.75}, {12, 3.75}}]}, 
         {GrayLevel[0.5007231912787249], LineBox[{{6, 6.75}, {12, 5.25}}]}, 
         {GrayLevel[0.2901207226204371], LineBox[{{6, 6.75}, {12, 6.75}}]}}}, 
       {EdgeForm[RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -5.25}, 0.33], 
         DiskBox[{6, -3.75}, 0.33], DiskBox[{6, -2.25}, 0.33], 
         DiskBox[{6, -0.75}, 0.33], DiskBox[{6, 0.75}, 0.33], 
         DiskBox[{6, 2.25}, 0.33], DiskBox[{6, 3.75}, 0.33], 
         DiskBox[{6, 5.25}, 0.33], DiskBox[{6, 6.75}, 0.33]}, 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -6.75}, 0.33]}, 
        {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, -6.75}, 0.33], 
         DiskBox[{12, -5.25}, 0.33], DiskBox[{12, -3.75}, 0.33], 
         DiskBox[{12, -2.25}, 0.33], DiskBox[{12, -0.75}, 0.33], 
         DiskBox[{12, 0.75}, 0.33], DiskBox[{12, 2.25}, 0.33], 
         DiskBox[{12, 3.75}, 0.33], DiskBox[{12, 5.25}, 0.33], 
         DiskBox[{12, 6.75}, 0.33]}}},
      ImageSize->Small], ",", 
     GraphicsBox[{
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        LineBox[{{6, -6.75}, {12, -6.75}}], 
        LineBox[{{6, -5.25}, {12, -5.25}}], 
        LineBox[{{6, -3.75}, {12, -3.75}}], 
        LineBox[{{6, -2.25}, {12, -2.25}}], 
        LineBox[{{6, -0.75}, {12, -0.75}}], LineBox[{{6, 0.75}, {12, 0.75}}], 
        LineBox[{{6, 2.25}, {12, 2.25}}], LineBox[{{6, 3.75}, {12, 3.75}}], 
        LineBox[{{6, 5.25}, {12, 5.25}}], LineBox[{{6, 6.75}, {12, 6.75}}]}, 
       {EdgeForm[RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -6.75}, 0.33], 
         DiskBox[{6, -5.25}, 0.33], DiskBox[{6, -3.75}, 0.33], 
         DiskBox[{6, -2.25}, 0.33], DiskBox[{6, -0.75}, 0.33], 
         DiskBox[{6, 0.75}, 0.33], DiskBox[{6, 2.25}, 0.33], 
         DiskBox[{6, 3.75}, 0.33], DiskBox[{6, 5.25}, 0.33], 
         DiskBox[{6, 6.75}, 0.33]}, 
        {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, -6.75}, 0.33], 
         DiskBox[{12, -5.25}, 0.33], DiskBox[{12, -3.75}, 0.33], 
         DiskBox[{12, -2.25}, 0.33], DiskBox[{12, -0.75}, 0.33], 
         DiskBox[{12, 0.75}, 0.33], DiskBox[{12, 2.25}, 0.33], 
         DiskBox[{12, 3.75}, 0.33], DiskBox[{12, 5.25}, 0.33], 
         DiskBox[{12, 6.75}, 0.33]}, 
        {EdgeForm[{GrayLevel[0], Thickness[Tiny]}], FaceForm[GrayLevel[
         0.95]], {RectangleBox[{8, -7.35}, {10, -6.15}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -6.75}]}, {
          RectangleBox[{8, -5.85}, {10, -4.65}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -5.25}]}, {
          RectangleBox[{8, -4.35}, {10, -3.15}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -3.75}]}, {
          RectangleBox[{8, -2.85}, {10, -1.65}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -2.25}]}, {
          RectangleBox[{8, -1.35}, {10, -0.15000000000000002}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, -0.75}]}, {
          RectangleBox[{8, 0.15000000000000002}, {10, 1.35}], InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 0.75}]}, {RectangleBox[{8, 1.65}, {10, 2.85}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 2.25}]}, {RectangleBox[{8, 3.15}, {10, 4.35}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 3.75}]}, {RectangleBox[{8, 4.65}, {10, 5.85}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 5.25}]}, {RectangleBox[{8, 6.15}, {10, 7.35}], 
          InsetBox[
           StyleBox["\<\"\\!\\(TraditionalForm\\`f\\)\"\>",
            StripOnInput->False,
            FontSize->11], {9, 6.75}]}}}},
      ImageSize->{104.42456452061994`, Automatic}], ",", 
     GraphicsBox[{
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        {GrayLevel[0.586820276239163], LineBox[{{6, -6.75}, {12, 0.}}]}, 
        {GrayLevel[0.6086790440918417], LineBox[{{6, -5.25}, {12, 0.}}]}, 
        {GrayLevel[0.2968347567140657], LineBox[{{6, -3.75}, {12, 0.}}]}, 
        {GrayLevel[0.8586382472970877], LineBox[{{6, -2.25}, {12, 0.}}]}, 
        {GrayLevel[0.30163998478827336`], LineBox[{{6, -0.75}, {12, 0.}}]}, 
        {GrayLevel[0.5293454638754738], LineBox[{{6, 0.75}, {12, 0.}}]}, 
        {GrayLevel[0.3521188387096702], LineBox[{{6, 2.25}, {12, 0.}}]}, 
        {GrayLevel[0.7335454311601359], LineBox[{{6, 3.75}, {12, 0.}}]}, 
        {GrayLevel[0.6912684681096297], LineBox[{{6, 5.25}, {12, 0.}}]}, 
        {GrayLevel[0.2377942821999086], LineBox[{{6, 6.75}, {12, 0.}}]}}, 
       {EdgeForm[RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -5.25}, 0.33], 
         DiskBox[{6, -3.75}, 0.33], DiskBox[{6, -2.25}, 0.33], 
         DiskBox[{6, -0.75}, 0.33], DiskBox[{6, 0.75}, 0.33], 
         DiskBox[{6, 2.25}, 0.33], DiskBox[{6, 3.75}, 0.33], 
         DiskBox[{6, 5.25}, 0.33], DiskBox[{6, 6.75}, 0.33]}, 
        {FaceForm[RGBColor[1, 0.5, 0]], DiskBox[{6, -6.75}, 0.33]}, 
        {FaceForm[RGBColor[0, 0.9, 0]], DiskBox[{12, 0.}, 0.33]}}},
      ImageSize->Small]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "20", "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[457]:=",ExpressionUUID->"cf5704ab-ff5c-4f03-8e98-754ba9128ccb"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{20}, "Spacer1"], 
   GraphicsBox[{{
      RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], {{
        GrayLevel[0.852534817175651], 
        LineBox[{{6, -0.75}, {12, -6.75}}]}, {
        GrayLevel[0.7909701563658564], 
        LineBox[{{6, -0.75}, {12, -5.25}}]}, {
        GrayLevel[0.4283418591404009], 
        LineBox[{{6, -0.75}, {12, -3.75}}]}, {
        GrayLevel[0.6370202847105166], 
        LineBox[{{6, -0.75}, {12, -2.25}}]}, {
        GrayLevel[0.37916149051612513`], 
        LineBox[{{6, -0.75}, {12, -0.75}}]}, {
        GrayLevel[0.6582546209748312], 
        LineBox[{{6, -0.75}, {12, 0.75}}]}, {
        GrayLevel[0.5136454356660742], 
        LineBox[{{6, -0.75}, {12, 2.25}}]}, {
        GrayLevel[0.5924414293187978], 
        LineBox[{{6, -0.75}, {12, 3.75}}]}, {
        GrayLevel[0.6728357129335172], 
        LineBox[{{6, -0.75}, {12, 5.25}}]}, {
        GrayLevel[0.3468421263157113], 
        LineBox[{{6, -0.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.47704468025976765`], 
        LineBox[{{6, 0.75}, {12, -6.75}}]}, {
        GrayLevel[0.7496206263391598], 
        LineBox[{{6, 0.75}, {12, -5.25}}]}, {
        GrayLevel[0.3149233086282861], 
        LineBox[{{6, 0.75}, {12, -3.75}}]}, {
        GrayLevel[0.5804899285652778], 
        LineBox[{{6, 0.75}, {12, -2.25}}]}, {
        GrayLevel[0.48244042772102436`], 
        LineBox[{{6, 0.75}, {12, -0.75}}]}, {
        GrayLevel[0.737314903918429], 
        LineBox[{{6, 0.75}, {12, 0.75}}]}, {
        GrayLevel[0.2553071861720315], 
        LineBox[{{6, 0.75}, {12, 2.25}}]}, {
        GrayLevel[0.4684747244456213], 
        LineBox[{{6, 0.75}, {12, 3.75}}]}, {
        GrayLevel[0.18640898981005793`], 
        LineBox[{{6, 0.75}, {12, 5.25}}]}, {
        GrayLevel[0.44345684316914813`], 
        LineBox[{{6, 0.75}, {12, 6.75}}]}}}, {
      EdgeForm[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, 0.75}, 0.33]}, {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -0.75}, 0.33]}, {
       FaceForm[
        RGBColor[0, 0.9, 0]], 
       DiskBox[{12, -6.75}, 0.33], 
       DiskBox[{12, -5.25}, 0.33], 
       DiskBox[{12, -3.75}, 0.33], 
       DiskBox[{12, -2.25}, 0.33], 
       DiskBox[{12, -0.75}, 0.33], 
       DiskBox[{12, 0.75}, 0.33], 
       DiskBox[{12, 2.25}, 0.33], 
       DiskBox[{12, 3.75}, 0.33], 
       DiskBox[{12, 5.25}, 0.33], 
       DiskBox[{12, 6.75}, 0.33]}}}, ImageSize -> Small], 
   GraphicsBox[{{
      RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
      LineBox[{{6, -6.75}, {12, -6.75}}], 
      LineBox[{{6, -5.25}, {12, -5.25}}], 
      LineBox[{{6, -3.75}, {12, -3.75}}], 
      LineBox[{{6, -2.25}, {12, -2.25}}], 
      LineBox[{{6, -0.75}, {12, -0.75}}], 
      LineBox[{{6, 0.75}, {12, 0.75}}], 
      LineBox[{{6, 2.25}, {12, 2.25}}], 
      LineBox[{{6, 3.75}, {12, 3.75}}], 
      LineBox[{{6, 5.25}, {12, 5.25}}], 
      LineBox[{{6, 6.75}, {12, 6.75}}]}, {
      EdgeForm[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -6.75}, 0.33], 
       DiskBox[{6, -5.25}, 0.33], 
       DiskBox[{6, -3.75}, 0.33], 
       DiskBox[{6, -2.25}, 0.33], 
       DiskBox[{6, -0.75}, 0.33], 
       DiskBox[{6, 0.75}, 0.33], 
       DiskBox[{6, 2.25}, 0.33], 
       DiskBox[{6, 3.75}, 0.33], 
       DiskBox[{6, 5.25}, 0.33], 
       DiskBox[{6, 6.75}, 0.33]}, {
       FaceForm[
        RGBColor[0, 0.9, 0]], 
       DiskBox[{12, -6.75}, 0.33], 
       DiskBox[{12, -5.25}, 0.33], 
       DiskBox[{12, -3.75}, 0.33], 
       DiskBox[{12, -2.25}, 0.33], 
       DiskBox[{12, -0.75}, 0.33], 
       DiskBox[{12, 0.75}, 0.33], 
       DiskBox[{12, 2.25}, 0.33], 
       DiskBox[{12, 3.75}, 0.33], 
       DiskBox[{12, 5.25}, 0.33], 
       DiskBox[{12, 6.75}, 0.33]}, {
       EdgeForm[{
         GrayLevel[0], 
         Thickness[Tiny]}], 
       FaceForm[
        GrayLevel[0.95]], {
        RectangleBox[{8, -7.35}, {10, -6.15}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -6.75}]}, {
        RectangleBox[{8, -5.85}, {10, -4.65}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -5.25}]}, {
        RectangleBox[{8, -4.35}, {10, -3.15}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -3.75}]}, {
        RectangleBox[{8, -2.85}, {10, -1.65}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -2.25}]}, {
        RectangleBox[{8, -1.35}, {10, -0.15000000000000002`}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -0.75}]}, {
        RectangleBox[{8, 0.15000000000000002`}, {10, 1.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 0.75}]}, {
        RectangleBox[{8, 1.65}, {10, 2.85}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 2.25}]}, {
        RectangleBox[{8, 3.15}, {10, 4.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 3.75}]}, {
        RectangleBox[{8, 4.65}, {10, 5.85}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 5.25}]}, {
        RectangleBox[{8, 6.15}, {10, 7.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 6.75}]}}}}, 
    ImageSize -> {104.42456452061994`, Automatic}], 
   GraphicsBox[{{
      RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], {{
        GrayLevel[0.7311806959149787], 
        LineBox[{{6, -6.75}, {12, -6.75}}]}, {
        GrayLevel[0.580538152267799], 
        LineBox[{{6, -6.75}, {12, -5.25}}]}, {
        GrayLevel[0.15560275761524445`], 
        LineBox[{{6, -6.75}, {12, -3.75}}]}, {
        GrayLevel[0.3600190863298587], 
        LineBox[{{6, -6.75}, {12, -2.25}}]}, {
        GrayLevel[0.20462581871461305`], 
        LineBox[{{6, -6.75}, {12, -0.75}}]}, {
        GrayLevel[0.2921361721368477], 
        LineBox[{{6, -6.75}, {12, 0.75}}]}, {
        GrayLevel[0.3829457025435741], 
        LineBox[{{6, -6.75}, {12, 2.25}}]}, {
        GrayLevel[0.15583074897896165`], 
        LineBox[{{6, -6.75}, {12, 3.75}}]}, {
        GrayLevel[0.37936785278335705`], 
        LineBox[{{6, -6.75}, {12, 5.25}}]}, {
        GrayLevel[0.14724284976045765`], 
        LineBox[{{6, -6.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.7872679914942917], 
        LineBox[{{6, -5.25}, {12, -6.75}}]}, {
        GrayLevel[0.3985907995974898], 
        LineBox[{{6, -5.25}, {12, -5.25}}]}, {
        GrayLevel[0.6243582485538197], 
        LineBox[{{6, -5.25}, {12, -3.75}}]}, {
        GrayLevel[0.4411485185623314], 
        LineBox[{{6, -5.25}, {12, -2.25}}]}, {
        GrayLevel[0.24000057250602036`], 
        LineBox[{{6, -5.25}, {12, -0.75}}]}, {
        GrayLevel[0.1318382931575206], 
        LineBox[{{6, -5.25}, {12, 0.75}}]}, {
        GrayLevel[0.7074955017032396], 
        LineBox[{{6, -5.25}, {12, 2.25}}]}, {
        GrayLevel[0.7358096464930055], 
        LineBox[{{6, -5.25}, {12, 3.75}}]}, {
        GrayLevel[0.24779827307550406`], 
        LineBox[{{6, -5.25}, {12, 5.25}}]}, {
        GrayLevel[0.6112524963590085], 
        LineBox[{{6, -5.25}, {12, 6.75}}]}}, {{
        GrayLevel[0.2128964158200901], 
        LineBox[{{6, -3.75}, {12, -6.75}}]}, {
        GrayLevel[0.43557049734291553`], 
        LineBox[{{6, -3.75}, {12, -5.25}}]}, {
        GrayLevel[0.8225296704533163], 
        LineBox[{{6, -3.75}, {12, -3.75}}]}, {
        GrayLevel[0.4587580398849669], 
        LineBox[{{6, -3.75}, {12, -2.25}}]}, {
        GrayLevel[0.3694023236550278], 
        LineBox[{{6, -3.75}, {12, -0.75}}]}, {
        GrayLevel[0.29327859162883585`], 
        LineBox[{{6, -3.75}, {12, 0.75}}]}, {
        GrayLevel[0.8625248602627182], 
        LineBox[{{6, -3.75}, {12, 2.25}}]}, {
        GrayLevel[0.7206386050987095], 
        LineBox[{{6, -3.75}, {12, 3.75}}]}, {
        GrayLevel[0.432903453961885], 
        LineBox[{{6, -3.75}, {12, 5.25}}]}, {
        GrayLevel[0.21050654543506053`], 
        LineBox[{{6, -3.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.3505224073288429], 
        LineBox[{{6, -2.25}, {12, -6.75}}]}, {
        GrayLevel[0.6475260500188769], 
        LineBox[{{6, -2.25}, {12, -5.25}}]}, {
        GrayLevel[0.19358364324227129`], 
        LineBox[{{6, -2.25}, {12, -3.75}}]}, {
        GrayLevel[0.20139926237292283`], 
        LineBox[{{6, -2.25}, {12, -2.25}}]}, {
        GrayLevel[0.8653603004756496], 
        LineBox[{{6, -2.25}, {12, -0.75}}]}, {
        GrayLevel[0.572827128795268], 
        LineBox[{{6, -2.25}, {12, 0.75}}]}, {
        GrayLevel[0.20449051801980866`], 
        LineBox[{{6, -2.25}, {12, 2.25}}]}, {
        GrayLevel[0.2656521710547578], 
        LineBox[{{6, -2.25}, {12, 3.75}}]}, {
        GrayLevel[0.6327787312832946], 
        LineBox[{{6, -2.25}, {12, 5.25}}]}, {
        GrayLevel[0.848953353785848], 
        LineBox[{{6, -2.25}, {12, 6.75}}]}}, {{
        GrayLevel[0.17723067892831568`], 
        LineBox[{{6, -0.75}, {12, -6.75}}]}, {
        GrayLevel[0.46830807670999275`], 
        LineBox[{{6, -0.75}, {12, -5.25}}]}, {
        GrayLevel[0.6845766355969327], 
        LineBox[{{6, -0.75}, {12, -3.75}}]}, {
        GrayLevel[0.56752474535516], 
        LineBox[{{6, -0.75}, {12, -2.25}}]}, {
        GrayLevel[0.49284152505422973`], 
        LineBox[{{6, -0.75}, {12, -0.75}}]}, {
        GrayLevel[0.4192999126756298], 
        LineBox[{{6, -0.75}, {12, 0.75}}]}, {
        GrayLevel[0.20038070372352923`], 
        LineBox[{{6, -0.75}, {12, 2.25}}]}, {
        GrayLevel[0.8078536096502804], 
        LineBox[{{6, -0.75}, {12, 3.75}}]}, {
        GrayLevel[0.33475438270794666`], 
        LineBox[{{6, -0.75}, {12, 5.25}}]}, {
        GrayLevel[0.46061340278501506`], 
        LineBox[{{6, -0.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.7153784734787287], 
        LineBox[{{6, 0.75}, {12, -6.75}}]}, {
        GrayLevel[0.15183918212729042`], 
        LineBox[{{6, 0.75}, {12, -5.25}}]}, {
        GrayLevel[0.6263270808594918], 
        LineBox[{{6, 0.75}, {12, -3.75}}]}, {
        GrayLevel[0.5063375001047592], 
        LineBox[{{6, 0.75}, {12, -2.25}}]}, {
        GrayLevel[0.5300248771492695], 
        LineBox[{{6, 0.75}, {12, -0.75}}]}, {
        GrayLevel[0.19312571357999175`], 
        LineBox[{{6, 0.75}, {12, 0.75}}]}, {
        GrayLevel[0.8621149561289685], 
        LineBox[{{6, 0.75}, {12, 2.25}}]}, {
        GrayLevel[0.5241906094508526], 
        LineBox[{{6, 0.75}, {12, 3.75}}]}, {
        GrayLevel[0.46616678568428527`], 
        LineBox[{{6, 0.75}, {12, 5.25}}]}, {
        GrayLevel[0.7626340513542229], 
        LineBox[{{6, 0.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.683952311813969], 
        LineBox[{{6, 2.25}, {12, -6.75}}]}, {
        GrayLevel[0.20920390911372322`], 
        LineBox[{{6, 2.25}, {12, -5.25}}]}, {
        GrayLevel[0.6998615865755884], 
        LineBox[{{6, 2.25}, {12, -3.75}}]}, {
        GrayLevel[0.20622320458074772`], 
        LineBox[{{6, 2.25}, {12, -2.25}}]}, {
        GrayLevel[0.6537068393695868], 
        LineBox[{{6, 2.25}, {12, -0.75}}]}, {
        GrayLevel[0.8397021474804678], 
        LineBox[{{6, 2.25}, {12, 0.75}}]}, {
        GrayLevel[0.4426605363174878], 
        LineBox[{{6, 2.25}, {12, 2.25}}]}, {
        GrayLevel[0.5029252823150752], 
        LineBox[{{6, 2.25}, {12, 3.75}}]}, {
        GrayLevel[0.3443596276661549], 
        LineBox[{{6, 2.25}, {12, 5.25}}]}, {
        GrayLevel[0.35833145751186724`], 
        LineBox[{{6, 2.25}, {12, 6.75}}]}}, {{
        GrayLevel[0.7730885540809054], 
        LineBox[{{6, 3.75}, {12, -6.75}}]}, {
        GrayLevel[0.5947128395336674], 
        LineBox[{{6, 3.75}, {12, -5.25}}]}, {
        GrayLevel[0.5967725245136042], 
        LineBox[{{6, 3.75}, {12, -3.75}}]}, {
        GrayLevel[0.7858333836151155], 
        LineBox[{{6, 3.75}, {12, -2.25}}]}, {
        GrayLevel[0.19462365507455048`], 
        LineBox[{{6, 3.75}, {12, -0.75}}]}, {
        GrayLevel[0.33401910072630325`], 
        LineBox[{{6, 3.75}, {12, 0.75}}]}, {
        GrayLevel[0.6625618525474934], 
        LineBox[{{6, 3.75}, {12, 2.25}}]}, {
        GrayLevel[0.3105283728701884], 
        LineBox[{{6, 3.75}, {12, 3.75}}]}, {
        GrayLevel[0.18204775780499205`], 
        LineBox[{{6, 3.75}, {12, 5.25}}]}, {
        GrayLevel[0.6824061578627583], 
        LineBox[{{6, 3.75}, {12, 6.75}}]}}, {{
        GrayLevel[0.2999211991625145], 
        LineBox[{{6, 5.25}, {12, -6.75}}]}, {
        GrayLevel[0.6706744924080745], 
        LineBox[{{6, 5.25}, {12, -5.25}}]}, {
        GrayLevel[0.45943813452775006`], 
        LineBox[{{6, 5.25}, {12, -3.75}}]}, {
        GrayLevel[0.8478008137677162], 
        LineBox[{{6, 5.25}, {12, -2.25}}]}, {
        GrayLevel[0.7312356008240415], 
        LineBox[{{6, 5.25}, {12, -0.75}}]}, {
        GrayLevel[0.7906064419349872], 
        LineBox[{{6, 5.25}, {12, 0.75}}]}, {
        GrayLevel[0.5576620978892226], 
        LineBox[{{6, 5.25}, {12, 2.25}}]}, {
        GrayLevel[0.24819138063077317`], 
        LineBox[{{6, 5.25}, {12, 3.75}}]}, {
        GrayLevel[0.4913775587574831], 
        LineBox[{{6, 5.25}, {12, 5.25}}]}, {
        GrayLevel[0.7318403602801982], 
        LineBox[{{6, 5.25}, {12, 6.75}}]}}, {{
        GrayLevel[0.45611042605859775`], 
        LineBox[{{6, 6.75}, {12, -6.75}}]}, {
        GrayLevel[0.6367003643057361], 
        LineBox[{{6, 6.75}, {12, -5.25}}]}, {
        GrayLevel[0.43686167575864676`], 
        LineBox[{{6, 6.75}, {12, -3.75}}]}, {
        GrayLevel[0.424254057058292], 
        LineBox[{{6, 6.75}, {12, -2.25}}]}, {
        GrayLevel[0.8671846851908342], 
        LineBox[{{6, 6.75}, {12, -0.75}}]}, {
        GrayLevel[0.5883911772105601], 
        LineBox[{{6, 6.75}, {12, 0.75}}]}, {
        GrayLevel[0.8325778770022629], 
        LineBox[{{6, 6.75}, {12, 2.25}}]}, {
        GrayLevel[0.6550757998039034], 
        LineBox[{{6, 6.75}, {12, 3.75}}]}, {
        GrayLevel[0.5007231912787249], 
        LineBox[{{6, 6.75}, {12, 5.25}}]}, {
        GrayLevel[0.2901207226204371], 
        LineBox[{{6, 6.75}, {12, 6.75}}]}}}, {
      EdgeForm[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -5.25}, 0.33], 
       DiskBox[{6, -3.75}, 0.33], 
       DiskBox[{6, -2.25}, 0.33], 
       DiskBox[{6, -0.75}, 0.33], 
       DiskBox[{6, 0.75}, 0.33], 
       DiskBox[{6, 2.25}, 0.33], 
       DiskBox[{6, 3.75}, 0.33], 
       DiskBox[{6, 5.25}, 0.33], 
       DiskBox[{6, 6.75}, 0.33]}, {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -6.75}, 0.33]}, {
       FaceForm[
        RGBColor[0, 0.9, 0]], 
       DiskBox[{12, -6.75}, 0.33], 
       DiskBox[{12, -5.25}, 0.33], 
       DiskBox[{12, -3.75}, 0.33], 
       DiskBox[{12, -2.25}, 0.33], 
       DiskBox[{12, -0.75}, 0.33], 
       DiskBox[{12, 0.75}, 0.33], 
       DiskBox[{12, 2.25}, 0.33], 
       DiskBox[{12, 3.75}, 0.33], 
       DiskBox[{12, 5.25}, 0.33], 
       DiskBox[{12, 6.75}, 0.33]}}}, ImageSize -> Small], 
   GraphicsBox[{{
      RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
      LineBox[{{6, -6.75}, {12, -6.75}}], 
      LineBox[{{6, -5.25}, {12, -5.25}}], 
      LineBox[{{6, -3.75}, {12, -3.75}}], 
      LineBox[{{6, -2.25}, {12, -2.25}}], 
      LineBox[{{6, -0.75}, {12, -0.75}}], 
      LineBox[{{6, 0.75}, {12, 0.75}}], 
      LineBox[{{6, 2.25}, {12, 2.25}}], 
      LineBox[{{6, 3.75}, {12, 3.75}}], 
      LineBox[{{6, 5.25}, {12, 5.25}}], 
      LineBox[{{6, 6.75}, {12, 6.75}}]}, {
      EdgeForm[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -6.75}, 0.33], 
       DiskBox[{6, -5.25}, 0.33], 
       DiskBox[{6, -3.75}, 0.33], 
       DiskBox[{6, -2.25}, 0.33], 
       DiskBox[{6, -0.75}, 0.33], 
       DiskBox[{6, 0.75}, 0.33], 
       DiskBox[{6, 2.25}, 0.33], 
       DiskBox[{6, 3.75}, 0.33], 
       DiskBox[{6, 5.25}, 0.33], 
       DiskBox[{6, 6.75}, 0.33]}, {
       FaceForm[
        RGBColor[0, 0.9, 0]], 
       DiskBox[{12, -6.75}, 0.33], 
       DiskBox[{12, -5.25}, 0.33], 
       DiskBox[{12, -3.75}, 0.33], 
       DiskBox[{12, -2.25}, 0.33], 
       DiskBox[{12, -0.75}, 0.33], 
       DiskBox[{12, 0.75}, 0.33], 
       DiskBox[{12, 2.25}, 0.33], 
       DiskBox[{12, 3.75}, 0.33], 
       DiskBox[{12, 5.25}, 0.33], 
       DiskBox[{12, 6.75}, 0.33]}, {
       EdgeForm[{
         GrayLevel[0], 
         Thickness[Tiny]}], 
       FaceForm[
        GrayLevel[0.95]], {
        RectangleBox[{8, -7.35}, {10, -6.15}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -6.75}]}, {
        RectangleBox[{8, -5.85}, {10, -4.65}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -5.25}]}, {
        RectangleBox[{8, -4.35}, {10, -3.15}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -3.75}]}, {
        RectangleBox[{8, -2.85}, {10, -1.65}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -2.25}]}, {
        RectangleBox[{8, -1.35}, {10, -0.15000000000000002`}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, -0.75}]}, {
        RectangleBox[{8, 0.15000000000000002`}, {10, 1.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 0.75}]}, {
        RectangleBox[{8, 1.65}, {10, 2.85}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 2.25}]}, {
        RectangleBox[{8, 3.15}, {10, 4.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 3.75}]}, {
        RectangleBox[{8, 4.65}, {10, 5.85}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 5.25}]}, {
        RectangleBox[{8, 6.15}, {10, 7.35}], 
        InsetBox[
         BoxData[
          FormBox[
           StyleBox[
           "\"\\!\\(TraditionalForm\\`f\\)\"", FontSize -> 11, StripOnInput -> 
            False], TraditionalForm]], {9, 6.75}]}}}}, 
    ImageSize -> {104.42456452061994`, Automatic}], 
   GraphicsBox[{{
      RGBColor[
      0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], {
       GrayLevel[0.586820276239163], 
       LineBox[{{6, -6.75}, {12, 0.}}]}, {
       GrayLevel[0.6086790440918417], 
       LineBox[{{6, -5.25}, {12, 0.}}]}, {
       GrayLevel[0.2968347567140657], 
       LineBox[{{6, -3.75}, {12, 0.}}]}, {
       GrayLevel[0.8586382472970877], 
       LineBox[{{6, -2.25}, {12, 0.}}]}, {
       GrayLevel[0.30163998478827336`], 
       LineBox[{{6, -0.75}, {12, 0.}}]}, {
       GrayLevel[0.5293454638754738], 
       LineBox[{{6, 0.75}, {12, 0.}}]}, {
       GrayLevel[0.3521188387096702], 
       LineBox[{{6, 2.25}, {12, 0.}}]}, {
       GrayLevel[0.7335454311601359], 
       LineBox[{{6, 3.75}, {12, 0.}}]}, {
       GrayLevel[0.6912684681096297], 
       LineBox[{{6, 5.25}, {12, 0.}}]}, {
       GrayLevel[0.2377942821999086], 
       LineBox[{{6, 6.75}, {12, 0.}}]}}, {
      EdgeForm[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -5.25}, 0.33], 
       DiskBox[{6, -3.75}, 0.33], 
       DiskBox[{6, -2.25}, 0.33], 
       DiskBox[{6, -0.75}, 0.33], 
       DiskBox[{6, 0.75}, 0.33], 
       DiskBox[{6, 2.25}, 0.33], 
       DiskBox[{6, 3.75}, 0.33], 
       DiskBox[{6, 5.25}, 0.33], 
       DiskBox[{6, 6.75}, 0.33]}, {
       FaceForm[
        RGBColor[1, 0.5, 0]], 
       DiskBox[{6, -6.75}, 0.33]}, {
       FaceForm[
        RGBColor[0, 0.9, 0]], 
       DiskBox[{12, 0.}, 0.33]}}}, ImageSize -> Small]},
  "RowWithSeparator"]], "Output",
 CellLabel->
  "Out[457]=",ExpressionUUID->"63cfb923-8c34-4812-9770-5a1813905843"]
}, Open  ]],

Cell["\<\
Each linear layer is a generalization of a simple linear transformation.\
\>", "Text",ExpressionUUID->"6e6e446a-bc62-4c2a-b8c7-1a9502af7ded"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"in", "=", "5"}], ",", 
     RowBox[{"out", "=", "10"}]}], "}"}], ",", 
   RowBox[{"TableForm", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatrixForm", " ", "@", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "out", "]"}], ",", 
              RowBox[{"Style", "[", 
               StyleBox[
                RowBox[{"\[FilledCircle]", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                   Appearance->None,
                   BaseStyle->{},
                   BaselinePosition->Baseline,
                   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                   DefaultBaseStyle->{},
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  RGBColor[1, 0.5, 0],
                  Editable->False,
                  Selectable->False]}],
                FontColor->GrayLevel[0]], 
               StyleBox["]",
                FontColor->GrayLevel[0]]}], 
              StyleBox[",",
               FontColor->GrayLevel[0]], 
              StyleBox[
               RowBox[{"Spacer", "[", "out", "]"}],
               FontColor->GrayLevel[0]]}], "}"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "in"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Spacer", "[", "1", "]"}], ",", 
        RowBox[{"Spacer", "[", "1", "]"}], ",", 
        RowBox[{"Spacer", "[", "1", "]"}], ",", 
        RowBox[{"Spacer", "[", "1", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", "\n", "  ", 
       RowBox[{
        RowBox[{"MatrixForm", " ", "@", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Indexed", "[", 
            RowBox[{
             RowBox[{"HoldForm", "[", "\[Alpha]", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "k"}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "out"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "in"}], "}"}]}], "]"}]}], ",", "\"\<+\>\"",
         ",", "\[IndentingNewLine]", 
        RowBox[{"MatrixForm", " ", "@", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            StyleBox["Indexed",
             FontColor->GrayLevel[0]], 
            StyleBox["[",
             FontColor->GrayLevel[0]], 
            RowBox[{
             RowBox[{
              StyleBox["HoldForm",
               FontColor->GrayLevel[0]], 
              StyleBox["[",
               FontColor->GrayLevel[0]], 
              StyleBox["\[Beta]",
               FontColor->GrayLevel[0]], "]"}], ",", " ", 
             RowBox[{"{", "j", "}"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "out"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1"}], "}"}]}], "]"}]}], ",", 
        "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"MatrixForm", " ", "@", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\[FilledCircle]", ",", 
             StyleBox[
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[0, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  FrameStyle->RGBColor[0., 0.6000000000000001, 0.],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.9`", ",", "0"}], "]"}], NumberMarks -> 
                  False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.9, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[0, 0.9, 0],
               Editable->False,
               Selectable->False],
              FontColor->GrayLevel[0]]}], 
            StyleBox["]",
             FontColor->GrayLevel[0]]}], 
           StyleBox[",",
            FontColor->GrayLevel[0]], " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "out"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1"}], "}"}]}], "]"}]}]}], "\n", "}"}]}], 
     "}"}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[524]:=",ExpressionUUID->"06f69807-33c8-4d73-99be-4e982c4b0317"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          TemplateBox[{
            TemplateBox[{10}, "Spacer1"], 
            StyleBox["\[FilledCircle]", 
             RGBColor[1, 0.5, 0], StripOnInput -> False], 
            TemplateBox[{10}, "Spacer1"]},
           "RowDefault"], 
          TemplateBox[{
            TemplateBox[{10}, "Spacer1"], 
            StyleBox["\[FilledCircle]", 
             RGBColor[1, 0.5, 0], StripOnInput -> False], 
            TemplateBox[{10}, "Spacer1"]},
           "RowDefault"], 
          TemplateBox[{
            TemplateBox[{10}, "Spacer1"], 
            StyleBox["\[FilledCircle]", 
             RGBColor[1, 0.5, 0], StripOnInput -> False], 
            TemplateBox[{10}, "Spacer1"]},
           "RowDefault"], 
          TemplateBox[{
            TemplateBox[{10}, "Spacer1"], 
            StyleBox["\[FilledCircle]", 
             RGBColor[1, 0.5, 0], StripOnInput -> False], 
            TemplateBox[{10}, "Spacer1"]},
           "RowDefault"], 
          TemplateBox[{
            TemplateBox[{10}, "Spacer1"], 
            StyleBox["\[FilledCircle]", 
             RGBColor[1, 0.5, 0], StripOnInput -> False], 
            TemplateBox[{10}, "Spacer1"]},
           "RowDefault"]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], 
     TemplateBox[{1},
      "Spacer1"], 
     TemplateBox[{1},
      "Spacer1"], 
     TemplateBox[{1},
      "Spacer1"], 
     TemplateBox[{1},
      "Spacer1"]},
    {
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "1", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "1", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "1", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "1", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "1", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "2", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "2", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "2", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "2", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "2", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "3", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "3", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "3", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "3", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "3", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "4", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "4", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "4", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "4", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "4", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "5", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "5", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "5", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "5", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "5", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "6", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "6", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "6", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "6", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "6", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "7", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "7", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "7", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "7", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "7", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "8", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "8", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "8", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "8", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "8", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "9", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "9", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "9", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "9", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "9", "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "10", "1"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "10", "2"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "10", "3"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "10", "4"},
           "IndexedDefault"], 
          TemplateBox[{
            TagBox["\[Alpha]", HoldForm], "10", "5"},
           "IndexedDefault"]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], "\<\"+\"\>", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "1"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "2"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "3"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "4"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "5"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "6"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "7"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "8"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "9"},
           "IndexedDefault"]},
         {
          TemplateBox[{
            TagBox["\[Beta]", HoldForm], "10"},
           "IndexedDefault"]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], "\<\" = \"\>", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]},
         {
          StyleBox["\[FilledCircle]",
           StripOnInput->False,
           LineColor->RGBColor[0, 0.9, 0],
           FrontFaceColor->RGBColor[0, 0.9, 0],
           BackFaceColor->RGBColor[0, 0.9, 0],
           GraphicsColor->RGBColor[0, 0.9, 0],
           FontColor->RGBColor[0, 0.9, 0]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[524]//TableForm=",ExpressionUUID->"13333111-6992-4042-946d-\
63ef54ba3018"]
}, {2}]],

Cell[CellGroupData[{

Cell[TextData[{
 "You can use ",
 StyleBox["NetTrain[network, data, All, \[Ellipsis]]", "Code"],
 " to get a ",
 StyleBox["NetTrainResultsObject", "Code"],
 " that contains much information about the training (including the trained \
model)"
}], "Item",ExpressionUUID->"e91cdc3d-03dd-4e8c-a155-248158592cb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfitTraining", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Rule", "@@@", "training"}], ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Rule", "@@@", "validation"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[445]:=",ExpressionUUID->"e645b9da-cb09-452c-b45c-8ddae96c17c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "20000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "10000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["37s"], 
                  TextCell["37s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "35403"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "100"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "50"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1280000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"2.51\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], ShowStringCharacters -> 
                    False], 0.25098731717795886`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"9.09\"", "\[Times]", 
                    SuperscriptBox["10", "\"2\""]}], ShowStringCharacters -> 
                    False], 908.8399077565223, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
5+P/AfmQkmY=
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1: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
4H/lqE+O
                    "]]}, {}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  GridLines->{{2000., 4000., 6000., 8000., 10000.}, {{-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}, {3., 
                    GrayLevel[0.3001]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  PlotRange->{{0, 10000.25}, {-0.8460000000000001, 3.846}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{-2, -2}, {2000., 3.846}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{-2, -2}, {4000., 3.846}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    Offset[{-2, -2}, {6000., 3.846}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{-2, -2}, {8000., 3.846}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., 3.846}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 3.}], 
                    ImageScaled[{0, 0.}]]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> 
         ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellLabel->
  "Out[445]=",ExpressionUUID->"424d6b55-a367-4f08-b700-0d1e29915b66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfitTraining", "[", "\"\<ValidationLoss\>\"", 
  "]"}]], "Input",
 CellLabel->
  "In[446]:=",ExpressionUUID->"cde6f1c2-b4ba-451e-9075-1438beec6c00"],

Cell[BoxData["908.8399077565223`"], "Output",
 CellLabel->
  "Out[446]=",ExpressionUUID->"962908ec-5b68-4176-b686-7f7cb666c218"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The effect of the specific activation function used is very visible in the \
extrapolation region.\
\>", "Text",ExpressionUUID->"5fb963af-3f07-4bcf-aba7-9280de4fd3a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfit", "=", 
  RowBox[{"nonlinearfitTraining", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[447]:=",ExpressionUUID->"455889a3-e1fa-4f16-ab57-96219bc2a7b7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Summation", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SummationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[447]=",ExpressionUUID->"27288c7f-29fe-4dfb-a0c1-ddcb72cd4ef0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"nonlinearfit", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
     RowBox[{"Lighting", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"1.5", 
       RowBox[{"MinMax", "@", 
        RowBox[{"validation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Append", "@@@", "training"}], ",", 
       RowBox[{"Append", "@@@", "validation"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<training\>\"", ",", "\"\<validation\>\""}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "->", "10"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[448]:=",ExpressionUUID->"9e637e10-c50b-4243-9053-550c6b85d731"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{
      GraphicsComplex3DBox[CompressedData["
1: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
42fGtfK+8eCj1ttNTha8kKjj3sS52eCHcO2DFQXgh3CPZ5MN/DAdy3qbt7bx
M+PWRrnx4IfprDzYC/zsNt4j8NxTL+RgHONvVWRr6mfC3a9HZQW/SyuNcOut
v2SBf8I9Y4tTwD/h3kS7yJPxOh3j8V6MJ7/VC+9FuCUjPhLy7Ws8J4DbV+Vg
HOHlbzTO0dTPhGu7X5L3YvynUZl4L6bf7wfhn8eHbYsC/4R7PzoYAT7VPNXp
HKqZCz4JL3/tkPDJ47fdlYP5Q7jnkUgNciZcWzq/B/gk3PvjoXDwyfQvHOuB
edLWkEeATu/6dswTwsub32IHPzy+6HisV8mTcPfHc/pAnoRbnkluA/4J93pH
tQX/PP6v3K7gn8cf39QD84RwT9GSnpjHnxn8Bvh5cJEdcibc89FOB+YD4ZY2
1ibgn8d7OjeCfJQ8dGV63e/vqOcS7h3zjgPPJdy67Pa+mqJPuLa4Q5ym3otw
y8AbFugdxa+Od5ki34tw9xNjHeCHcOvkGn3BD9M57y7B/CDcs/2vEvBJePnD
92SDH/V7/bmTxjjAD+Hej/cUgR/CtXFPl4Afxj/x28OKH6b/kN+uU3Jh+q2n
pII/xt+uZ9PUfCPcsj/Soan5xuO9d9nxXurv9Od+06gv3otwz6WlJXgvxuv4
/Sn1M+GWARvkuYR73b2cmprnPP6Jf4Qf9XeB8aNLwA/h5YV3iNwIt7yV78Jz
mc7JLfJcHj9yghPzkPGZQx3gR/2d/r3WDZDnEu5em+ICHcKtHzznxHj1e11u
Ce1doM/77De1xS8j3HfBkYX5w3jlBxKnZjoXtS54LucHl/3TFOuc7YH8jzID
+kC3l9geKPLlYT1zPnT5l4VYP/zclptlPMf5jjtlPOdJp0bkA2f74fM2kidl
Pvvfk451QvTdm0plv+C445UNNviTTOeSQ+Y95/UGTZF9kPOtB/ql4XuHfJdt
SRhP/LsbdUzGeH7fjDdSMA8YzzuRAPuV6JcPLojF92O7aHpz2U/Zjnr6rzh8
d7aX7prTGd+dcMtvs+S78/h/R0m+lfDysiP5+L5sX9muy/difqZ4k/C9OL47
bI/EF5if7p/Id+HxEWdTIR/mMza3J+TJ47NSesIeYj5XFKRDPmx33RgYDfmw
vdf+Kw3y4fGdinIgH7YbG9XORTyOx99SLQPznOPZnqOS9+fx9a4kQA5sd5WO
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
Ut9S7YlofA+uZ7Aeb43vwfi29c0gL14vF4YUI57AcebuTSVOy/euHlgSDv3I
97e2X3AF/iz3izhxpjrmFccfro5MgT7kPsZJJ2pCv7A+aXdZ7rUi3PLV8Jbw
23k/3dymCHEYrpuq307iMFzvtNJvXyn7meMnXzSQ+xfYX+7bymbqz2PYz1f8
+jP0/uUA7j38tdi3fP79mw7FpvtxjPxL4i6xxzguXS2nWOrwKU5e57j0c6a8
sPvQS1bkQdmPvnx/LfgvvH+Fab2hP3m/u3tePOTJcb8PH2sFeXIfxfP3NgHO
5+4bRjlMfeYD8fDyngOkvojr9O4ozMN78T2/nzrC8V68vr55ug3ei/P1lXO7
YjyvL+1KU8SXWd8+Gyv3D3Kec0GrVuCT405Nz11HPpTxh7f9hvgn96Xp0qQI
cW/WM2eS+gFnO39BgxJt9OFmm25kpHgP/NpqX0Hj3oH5c9gt65fvC641NBU4
n7s8vCIDeofjjetnZELOXNfRaZjImdd17x/awh/gdT2gnuTHKe5k7dlA7tXm
+r3qtZIgf87Lr+lqvtfM6F8dX7cIepb3i/CWRZAP7Tuetbn9TP2yjHuCPLfK
fVV8z0vBYOm7FWLnDxI/hf2XYlce9hXOE/V+Vu7v43qe3v1knrOdduFSc+Cs
D6+eaACc45OPF+Xhfen7Vm58KxPy5Xtkuj8v34Pvs258Mk17fknDn29sjOXx
UzY/GQWcz9sWJCdCvxFe+twk6dPKdT4XL7fxFgZ+vgV4FYtldsX0ZOCKjh8P
6z/OWN8Wy3Eb33fTy5vnHWiM5/O/Yb/sK/C6gnEKhd/w/+/J9TneGYH37cZ1
R8ef/ywLuBp//caN3osyM/Bdib7vcN0k7xhDzkxntSsuyavkT3omvOYP2ZAz
65/vJ2ZBnhxvb9ZB09R7ET6l2JeH91K4/7V++Gx8Fp5Ler7yq/cl/0V42Vtd
c/Bcwkubts7Gcwm3vv9UNp6rcP9zDze9S4PcCL+RtSvVWxK0N8z3+Cg+Kf65
8HFLLvjkuGjZT8In4Uvzp+RgXqEuw//cbQPOZCj+afzxwpaZ4F/h/uHD9Pol
xT/hP8y6Ox78E95BPwetvjvRj350agTei/zEile+lfPRfK/um1/mQs4cv/2p
fQr4VLh/Ht44uDgBfCpc5z/n2XDwab4vWPHD8dIrTe14Lvuhp+f1xnMV7n/u
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
vZmh9aUGPqF7vClu2Up/r0CdtqLT8SZ6g84VBuLhpngU+gAoOZNeCtv3cz5w
qqetOLm/APON1l3p1b+l/of99w0L/vc5dO4799ibLbVQu8I4nz5nXqHJfgjE
Gysfe0/Oc50xxQmVHMz3J4bWPxjnuNMz8jDf+B6Tdqt6Ig5GcbmKJ/4Su53y
NdYX6sm5HrIfrKfaq37dx//rXkI1nvtuLRohcTbzfYIKV33+9O+o38dXSOtH
9691ORzd1APz/2fJ44QdqIgE3iW4L+t925b8KXFUdb5Aj0/q9+uFnl9rotcN
zlvujZT+A8H6dr1+1XIk2lQfHthnS0827G3qt2OcF/hPQhfIjfyX6Ae/k7oj
8q99XTfKvmm+Dy60Lk7igaH+puGP/5skfTP4XrMRXc11axLXUvs47Zul056S
fpvk71TO+rHEFD80+tUv+7jE9F5GH6ozZ/rdNF8Teu+b0Z/2mxbOm8aXlL/B
/U596zLAD/s1T5wV+4T92Rd6ZQMn+986+16Z/4SXfp8m/RDYj/inQnA63+cN
byt0uG6h21CJO3H/9tXdtmYonONabzQ8udFk1xnr6Iz0I+V+MndkSr0ux53G
fyFxy7bBeqHqfvzZV+UcE53TWbjqSkfow3OyvxRsGhHOfq9F3fdRURmGeAv3
kR56rCpwvq+5wwdWjnuCzro9u2GHm++xUuPp78L++F3Oa3N/0c03nKbzJka+
b/YOwckuWv38ealforyPd9d3Us+g8g7mvoh87qlOSU3oAcoja/dPbw6c6q+8
D9klL8jnAi6ul7gE2WnlnR4XnPKVlvvekzgz1RX4bs9ujnnC9y5ZJ7T0Kjmb
71cKjbcb9QltVuZjnnD859qiROAUR/IesSbhuezX1ztXGzjHe5e2awg9r3Bd
39Z1JQFX6063TxZNFlx9Nz2e3+50Evin55bd+UgOvhffl/TPoEjQUetO78v6
akwCcJUX0/XPgL8Tgatzvrrdmz9ScLXedf28orbQUfpBt4d3vCO4igPofkHb
qvHAlR2hP7d3jzh8L/N9Rko/KPx6sL5RjVfnXnU6+n1ASj5878/0c3LuiOso
Hk6+kEH7NNZp+NfZprxPYL+72H9+X1O/voC/Zh39ZYmpn4ZRr765eT9TPw3j
vgNve7O/0123Dzvo99eE1nsHxnsPPZMKu1T9q8+T7D0S9w7GZwJ5n97rck31
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
as+jeejLyLivnnvcwJ8wXmVWscafsB+3u2MK7jXOy9dvycP3onvHucx/z8q5
a1JvO1rj67ify/UxOg7POP/aXWlYB8alPJOYDtw7+3FLXs9AnQj7a0cr05G3
Yr/syKp01F1yPnHwH1ItqbcFz5l//CuP9eA+GYF9q/qeFCS0adKXVMnv+M/L
5pb/9Zr1gG3sesBgcapgca1g8SgzfhVixK8Yp/enz/JgL3E8JzY3DXkTxsu9
FGfhXPD4hNYpiMMwr0iHdRnIL7D+nHo7Cnk3Wc97DQ3evXWtUXdA8Z/lbdO+
9sp7cZwzp7wT8Mbsl2260g77mfV/VcJWr+A2eZ8UL+6C+Cr7438sCwFOhus4
BrcYBH+N/fSYZyzwS7LfPeinDORPuS7v67aZ2Oc8z9rWmfgunO9Y1MuF78Lx
q6hcF/fjET3syH8x1ZK+BbQ/A3wX3Yzx6t4Z4R8v8XDSe84L59zoM8F4+EtF
I9FnwpTHBZHLvcl+QWlXzTPA9sPNEjf65nL+eucXbuxDxilten8k+A3Jb/Lu
d+k6XK6fPRMLnAnbIdtGHchGP2A6RwF+DKkf5PN1sdNw2P+mfyH+IOvbnX8Z
Cf4N1p+vV+TDnmd9+9L6HMR52C8IrXSjjobk7r1X9PzsF/zLr1cl3sX4onbP
pyG/yTiiU4cs4JCZP8F5Ixn2JPMMRFVmAy/HefDc38WBR5vsls7+5cbzM3/O
9JgMfBe25096IxA3Y7tr8cIon/QpITvhwKwIN+w6krvbf6l5J0hvrOifqO1n
0jMHZo+MQP9j2lePxp1xo/8x11Mr/1Hyeuw3LY0finuTfjfMeTAW/bzpdwuv
5Q3CvUDyuofro9G33rQTZL8xfuPf7nz0V+Z7tiwjC3h1zjs/vyEb94joh9s2
/4x5r9XZ95roT9oPvnln7niFF4/8msgf5j6JOCHjvff9pP1iPi9zfumGXcR+
9+G+I6H3aJ2LDr8ajj4u7N99VeuE/cP1U56xicDzsx/69826PxZ/l+1H+jTj
7Ul3NPL2mPaA4vlR9oDY24y7Ozg2E8/P8e3ThZF4frZ/Xn5W92Pme2HBQBfs
HI5zzop0WcKjx37BxhvVXom3sD6paIc6ZZY7pz8E/pNmeYE9Qfab3Hf0Xt1v
zLZwr5G8KGpzMtaT7Y0T4Ql4f3qvA09G67wb4xbefGQ44gb8/OM7DkcdE+vD
AY8NR/04yYtGzfDAnuH18Y7TdSKsb71+PS/7luPe2R1cWB/GH5bccNl6tU2T
uKWKo/rs70j3kfNsfL7tXzfHmUv/GNYDCgcrdgLjTr3TPfgu9PzHpxV5gPdg
PMbTz/UDbwyfo+j6jkHxcsFwcaY+qbf1id3PsklctN+zuh8N4x7XfOPC96X9
s+TQd4OD8gaIfma5ivOb/F0hdp7O5Olq6Wjk6bJxpFy/4Fu5VONkOP916IE8
8IRQ/8qqm7el/2NfxCuUfRKfpv0WuqdWHHs3DzytJt7Ja8RDFN5GxUNqjTxj
CzvPeMvIayg7SuU1pC8X88yoft/y3Rm/sT45GXLaP590KhgKOeeP1qYMQb2w
7J9HHI39XkUPM1/TvsUjMA/Hc45nCi5I5zvu2PkO6Y/F+DTVF0bWmfESqm+L
9H2ke/xan6pk67hhJyu5spPN/RBi7weJe9O9cH7l5oHN7oXHHY33guxbes7C
6L9qPBbFAwM8+bI+bF8tyQoDDorWbVdDgeYdpfGRG1olwB9n/NXFLjGoc+A4
8D+7doO+YP08ZpH2T0g/O0tHaTuV+YLatI3Bvif5imnjehn95RvxTqcSPXge
jueo8yXz07kb4lhmYZ6fqzdkHcy6Uflb5lPnUeET0K/Efi41/kSk7mMlchUf
/ikxHPOa9eOyjmzHqrrpYLg1eU+R/+jfhzl3umF+ij/4FC6Cv5+t34YkDXA1
4UGw5dt+P8/F50rkYTsH5XKcNyD3n9OePctaNIkv2OdiK8fluI7j21/p9TTr
KeR3GQ9zzz9e5iH5kt0TdL8t0p+F20vTMb9ZNyHvS+ei9/YifS5IXj1vsn5O
sz5C5qF1qjmyT/fbJb097r2u1FeL4gZKn8vzcdxj9OeaF4/r/sLSND8YfYfs
j0P08zAPzPlPdR8ZrhNP+VLHwem7HQuZ5sF6cV1n5CLdR8zkD5F5Ra7ORZj/
epT9R3wdJePy9L1r8mbI/ye+gR3Flbr/C+MQthzXfoKJf5B14/tlfInmQaM4
+XKFE2D/1rY3vIun3gcvnsnDJu/DuOV3Wup9a97LMt6sT5Hf47iuqjdv2r8s
8F2qj387DO/Lecy9xZr/i+y6efdjk/G9SV4Q48zEenK8t99b+fh+dF5K6id6
MD993/2jr2fg+cy6V3l+5he9+4bmdef9fPJWTpPvZOuZmueu5+F36V5YGNNB
47bJLw7c1/K7nB+/8LnuE2rW6chzm3U68l5mXZusC/PMzPpe14HTex3Yur9J
HZ3D5n3dtuxKFPYDx3MOF2o9w/yKiicHfRj1/M43a3W/P7a3Ff5fxpt2mjyH
yZsq6yxytX++f1vzNbBfc+MHvd/kdxR+5v5byXhf036T92K8hOKLkHWg71/Z
ozZD972y39c/f4ziDZP56X4venxyZlB8hXwvvpdUH20ZT/JAv2z5PXrfY6t8
un8Q3ZNFRzs78T04XnT5uyy2Ix02D7A35/KPyO+y3aL6+sn70/PU5E/U9gnJ
ixITtJ1D5/SNDt/oftlkn0xRfDvyPeR5FS59UnbfZnlwFde9Olbj0Sm+EeCX
lr+57kPZzzLezCOL3MyHsn0jftZXpzTvKn3fXSvLdd0g+8UbP9D6ir6Le2Fx
utFvqzGuwv22RF7hf9+jlRXA83Ge4qGByc3s7QccTftSMU/vP0p1Pym+38eH
PsznFu+r+gHJvCbeXsaZvL4iN3luRU7fJRCHlN/lOHlldT7ktK/qZsS7m9Uv
OOz6BRnHvDqq3l/mofGRre5qvleO/6g+47K+ZD+UTKrQfGeMW85oPxz7kvmH
/3xsmPV/sosUJw==
       "], {{{
          RGBColor[0.880722, 0.611041, 0.142051], 
          EdgeForm[None], 
          Specularity[
           GrayLevel[1], 3], 
          StyleBox[
           GraphicsGroup3DBox[
            TagBox[{
              Polygon3DBox[CompressedData["
1:eJxFnXX8FcX3xu/nbtzNa6Ni0IqN3QK2gAgKqKBYiN3dYmB3YKKI3YUtBnZ3
dxc2tvJ73jzzff3+uHdmZ2dnZ2dnZ04855xu2++16Z7NRqNxYN1oREq3KRqN
OZQ+kzYaR2SNxoUdjcZVrUbjcx3vpvIzlD4S67wqt/NG42jV30rlo8tG43LV
nU2/PXS8txpNO3xuU9XvpvpX6Pg0/RL9Rqn80qTRmKHyg3T8lfLbK91A5Ufr
fv8o7a70bl37Gx3TuRWVX0G//ZSvVXaI0l30O0b1dlJ6sNI7dP4xnZupSyaq
rK3f7sofqfYH69z5Ov5M9f5W+qnSw/QMfyn/ifJHtdyH/ZQ+1fR96Ec3PePf
SruqfEvVP1flE5W/Qr9S+aWVbqy2z1M+0+9SHY/jWWlHfcmVH6Prr1Yf5tPx
6Tyn6q+v3xnKj1RZV/1W0D03V/tHquwUXTta911H4z1EaVPv4jCVn6Dyc/SL
lV9M6Tpq4zjl99FvN72Du1U2pN1ozKn6T6nscR2vWelZ1fbCSjurzgXqy2FK
R+vaV3Tfu1XvJeVfU35e3X+s8jvq97jKO6neiap/mfowQL8xeoZ3VWdulR+m
8p2UrqB7XaC6V+pes+vcJcpfrfyZqr+r6uygOjfrugPUhxVV9wvmjY4/U7oT
46DyabpmXtU7SfV3Vzqfficrv6fS4dTX+VPVZqX8EcqfpPxC6u9c+h2j42fV
xvFKm/qdrXOR0kWVnqb6q+semyl9Xb/Ruu9rSn9RWug3XOee1LV7qv5fut+d
KrtDv846Xkptf6BzDyq/v/IHKP1XdWo9w0PK36/2d1Fb66rObCrbR319UGU9
NP5X6/zs+u3L/M89x4/jvalOD6WrtT1n1+B5NU4n6J7j9duEOa3jXip/TelQ
HQ9hbPj2dP50/Ubp+EylpyWu10tzpKd+nyifKv1Bz7SI+rSG6q3OnFT5Hzpe
VflV9Nta9/9MZZXSp3Wyq879qfx2ut+cKn9c6XOp14PtlY7R8fzKP6t0B/06
Kf+00kwVtuYb129vXf+TyudXupTa/Fn5zoyF+tJdvy1U5xvV/07lC+k3SecK
lS3Jtx55PeFbml3js6XOH8W9dPyr8kvot4n6sZGOF1R+V13zrdK5mANqe3dd
O0zn3tB9RyvdS+UtjfmPqjOf8j31fINVPjfjo/IflM6r8udVf1PGW/nFVN6f
Z1E+Uf571emk/AyN8Wq6/hrGUn3aVMfPMG+V76Y6L6tfm6nP6yi/j8oeUn8W
CN/yAOU30u8sXbsw31bk732Y6m/KN6j6v+n84oy/jg/KvIZcpvuer/tsqd8K
Ks90vz+UdlF5n9xrW0/lByj/KOuL0tmULqF2dtf1y+j4d9VZWHUmZJ7bhyt/
ntobqd9urIvqw+IqW13z8MjIaxpr1lU6/2dYo/bR+V/UzgJK71Xb3fX7Qsc7
Fn6HLyrdhr2Bb0Lp/To/SNd9qeOl9VxLsY7o+PKW18AllNa67wD2G137nc5/
y/qu4/cz7xnLKh2lOgMZD9XZWb/ujLPSKVq/FlTfllE6WHWOVHsbqv9ntfzd
92Lty70enE6Z2p6D9Zy5ovqH0nel8+h3uPK7KF1XbW2h+45RGuld3qz8CP1u
V/5u1flA7fyq4+H63aXjG1R+ndJXVL6jrtlS5ato73xCbV2v8hnq57L63Uqb
epaVare3stKFNbZ7MCd0PLueY2ele6h//6l8T5UP0fH3+g3V71rmucr76re5
jh9VW7co3UHpGrp2U+UvVp3v1IfNlH9S919edZdLfDyi8Lc2D2uh6k9t+htZ
Kvd3uITSb/U7XvW/YY0sPc6M9yJ6xlNUPoJ5q359pfrf6NyCsb8XvpP+udem
ndX+Mqq7dOL+r6x0Jf2GKT8X87nhPamP2r1BZduobILO7xTm6ijmY9Nz8lzK
Qvm2Lc+12ZReo/5crvzvurZWfkPVOU7HjyjdlXs2PLfHKr8860Xm7+aX8F1w
rxV1vGTm9HSlh6idVcKefpDyKyl/vsrPydyfpZWeoPLhDX8ny2T+xv/KPQfp
57o6Xi12/bWVv1h19lC+T+Z9CcJqWMPrAOVDlR+o8lHK36rxeFTpLvotpvI/
S+dfVvqann9geL/s2+QvUn5ZXTtA+fOV/0332ED5yerjg7rmHJX9wNqs8onQ
X+w5uu8mqnOZjntrfC7R9YN1/Kba37jpeufE7s/Tyt+rth5X+qWet12bJqiV
/q7zI/V7jPmk9i9V+rDqpJp7g1T+iO6/CHtR4uMXde5J3WOa0r/4RpXfTukc
La8brB+bt7yPsJ8Mb3nvKnnXausV5R9T+Vm698vKT1N+ffVtCf3mY6x13EP5
/krf0D0H6Lei7rGcrp2LPUvlV9WmY6FnT1Kf/9P5L9T+lapzr8pvKfxt843f
pPxI/UaozS2VzqV0A7XZZj1S/dlVZ1v2RpXPod8NkenlZ1X+oMofUPvbqG4P
pedr3NdUvlA+1vi9pLrz6N5/q73FlO+rc72VrqV0ispX0PXb69xbui7TNbep
7Db161wdr6E6ucq2UDsv6Jo5VPZr5DUfenSqzm2rOj2VXht7H19L15+l/Ceq
E+m4l87Nq/QntbmEnuV2XXed7nly7v2iQ+ePhZ5T/kf24pZpkB2Z86p/J2ue
6p8a5snyOvdj5P2ob6Mxi7jg2z1M9V/JvWe9rPShyHtaP/32bXkfX0jpoNx7
woHK91P7y0L/VN6v1tJvN93rX/36sP6pfE2Nc1fOKd249p7L3vuXfl2UHwtt
rt/S1Ff6j37LsI7p2gPUh11Zo1hjW6abdlc6Qu38qH5sob3j19y01M9KO+vd
HsMarV8f9W2a2rlL7V2t/CPQhoW/Db6Ru5Xvp3rnaVyu0X26aRwyjc+3zCnl
t1K+i9JF1G5L+W/YQ3W8tfJdlZ6RmXbak/rM6Q7vo0vpXncovV7t9668xs2p
9M9Ag0GLrZmbttsCPiY3rfC70pXVj69V/334KbX/jtIX6K/OZ+rnBzpeSe13
VjvPFf4uB0AL6Hhm0/v3QB2vpjoLq+wl1ble1+2rdns13T/6WXJOf5sp/wfr
lcatt8r2g0dkLJreI3aO3D73GQofo9/J6ssqumYB1X9e7b/Ausp70blR0IQq
31Lp7ipfV+Wjlf8ydrvsPU1ok7CXdYm9Pw1Xfn5oDZU/r7bHhrVlJ7V5lN51
J92zt9LOGsfJrEWq86SOb1V+V+W/0rV7Rd7vnis9/1+F12mZZlxUfZmnNg35
isr3znzPF1nvdd0DoT//Nk0nbaD8dL2PBdTu2kq/VJ2NO7yO0AZr1Bj17cTE
/WYf3VzHta59Q+fuUbqeytTdRq/K82N2pdNj00xb6twZOh7J+CtdWtcupd/3
Oree+r+qrntL/Vy0aX6WfW6PlnmFxdTn+yJ/E3wzPaHBIrf5Qulv5A3oWPbq
Dr/X3qqzbYf3yFdql6+rugen3ns30jO+WJoPuEH9ObNper+vyt5O/V0fpvSW
0vz6RqXvv2voww26/nFds6/69nfp9WFDpSNb5nvW0Pkk0DCb8+xNv6u1VOfl
zGXX5ubZxzB/dc0BLY8Da85CqXkJ+IhD1M7BHe7HQdC/zH2le6md9VX2jNJf
Y/N7Y3X8PvSG6hyjdP3Sbb+t8Sl0/rGm6/ys+t9H5j2+b3kv2ow9MPde8bfa
PEXXvqSyvvrYPmdtVZ1BSruqTh/2Y+XPUDunx5ZNdFf5skoH89507YZK12p7
H/u5w2tQT5VvoPL1Vb6n6r+pe3VW2q8yHdlN6Z56X0+ypin9tDJN8LHSA0vT
VMcp3V3n+ujaNVT+uX6Hqs5nSps8g+rcr2cfEJkOaOj3Xmy6F7nJurm/x3X1
jP80/S0wjmdlfk/rK/1D1z6u3958f+rLFYllQ+/Gpo07q86h8Cwq+1j3/Krl
fWaI0g/1W5p1SukGkWn1P3V8e2a6eAH2Pv2+Yd7C06nt5/RbUsc/sed3eI+/
sjDdPkHP2y8yTf+Dzt2j8idUfqPG4MjSdU5DXqHye5SfrPzQyOs263h33StX
Ol33+jj3XvGh0gsYs8h7wNXKT4y9796sskrpTN1rkcz0yy/ssZH3iFS/L3X9
CqyRKl9Q930fOZHSy2PTFXPqt6qO31P5vEqviL3vs2enuuZ19fNRvaOjc+9H
RypdX/UWV9l6SmdveY3fE7q+Mn/G2j636m6vfqzJ96PyvkpX1PNuXJh+6Kl2
9k28PkP/nx1ogIX1HM+WptmeKkyfQafNaHnNZp9gj/hdf2urbh/d/PrS9PwL
hdfDL/T7SsdnsH/ouvVUZz7GLHY/NtN974F2V79Ozbwm7qH0utjrKvvR2Zlp
/sWV3lh5P12bd5h7z3pN5WunlgNeo3tc27I8sI/SoWqjEVsmeYuO54IWQ56m
ebCdTo1XP4fo/Ilq52Kda7G+qk/b6Leo8qXSVXXv5XLLeZZF5pCZ31yO96tr
n9e1F+n4Jh1fr/RGpTfrN6fyyys9Seev7bC8bHRumdF1yGT066Z8P+RXqrM6
71rHtyamCW9Xfo7EdOYdyo/JTU+Wuv+cuenKO3Tts+rD203TnMvree5S+Z3Q
7SpP9OvE/GeNVboy9Il+87FfQJMklms9zLfGvEssB3sfWoXvTvkekWV6yP5i
6BOlq+rae3LL9OaANswtR3yUsW1abnaUxnfzQNNC7y6fWb5yveq8iDwkMo+X
qs2FVb4m/IGOX1W+K3uw6kyIzGvcr351h+ZU+cuq15s1SekFOv8G9+0wrwxP
BT81Xfd6QfmnVOdwlb+u/OkqPzo2f/WRjofr/c6m336x+XXW1WdVfozy4/T7
VPnj1M5bSp+Hrtb55xhL+hqZ//6ywzKC68Lac0GQD1yl/Nsq/07n3+J7R56k
/Hidm0/3fFvXL67jd5BJKV2vZbksstzjVeePzLz1/Epn6Petyt9sef2Dr4On
u0L3uBEeUekluu9Nyl+DTCLz+rmg0rnhY1V/DV17Uen6Vxfm45fS72P2S2S9
yAqUn5Z7vXwPmZjyZ0HnwFukluUiF94n95g/wxwoPb++VJvTU8t1Jyp9hzWx
w/Psxg7PvUN07iP2jg6/73ebps2YTz/rmgsZN6Wv69s8ROc+UNv76j1cBa+p
Ov/peKrSvZX2Ub1lUtN8M5H5qM6HSu/T+YU6LMv+sOl2eP5/S993L6XL6bpl
9eumaw/TetKL/UPpvTruot+3uua3IP9BDvSq+nBx4Km3V/5CaALmma7ZT2Xv
QO/As0Jva6w+Kv1dJzr/cOm5/Atjrus+bvoZWvAbyo9S/e70Rb8cGb9+16n8
M9Yp5KjKv8JaozFZROlJSt9UnTcCz7+r0i+VPqFzy7DWwuNDG6m9VVPznD+o
7Iim5xn6nln8stLVVf/ncK+jK8/HDdT+30EmhmysVvsfdnhurKDj5WlXbR6o
OXCCzh0ATajjm+ArVae/2pwR8nsxvyLTN+Mq00IDofnZSyMfv5RYFvcb31pl
GmlJjdk1la9bWvn5dc89E587tnJfNlI/G4FHQ57R1nieov4cov7Mqfwtav8/
je27um6gfrPrHtuqbCGlK+n6b0uPx7aspbHPrUz7oc8n6D4LNy1HZwtZvjSP
8KTaXqE0vfqM8q8nlq3ETcvnV1P9FLpfbfTrMJ8+ojWrq42xqeUhyOq5di5d
t0PYl7eLLLdPGpa3w+MsEuh46PmddN1NKh8SaJSE9ULlj6jNyYXliKerX0+X
phvPV9rRMs1zn+r80mF5yJ3Kr6CbTI68plD+azh3sMb0RLX9s65dX3U6lH9K
5beq7mxN8y3vJD5GZrJh4nFuh3OzBb7mmNzj/QO0k+rcjv5Gx99Xvhdr41Uq
+y3Mkx6V15zldf8rlf+H/aX2/Pm3w/z5jYXlsjzXz5XlVM8o/11pOvoK6AvV
v63p6w/OPac+Uh+OVdkM5e/X9SvWzl+o+n9qLG5FRqT0hcQ0Jf3ZUO2fBP1W
+tuZrrJJ9CHzPN8e+SS0t8rPU51VdF0V+3im2noIuYHSSSq7E7kQ91f9U0hV
/wZdf73yozPLUFdMvE/wbsczJsgGmu4DdOMEtXOC0p9Y//Q8R6v9HfV8++i6
U5umU8+LvLay5/Wpvd/9qjG7T3W6Jt7jTiq9vx2hvhxSWr74s+o82bL8Fjnu
NJU/z3xUnX10zd6x117o1qJpmd3GutfxvF/VfUttH8e7hU5MTMvyvAN1/clK
f1X5p4lp2U7QlLxHXR+r/w9n7v9vqnOCjierznilN9eef6spfVvpxbFp64ti
09ll03OzGeYn3z15ZH0fsbYknm+3Nz2fE9a/3N/o19AnOv9pkJshp2V+TC+9
b7wU9o5vSvM9k5R+VppnuZixUd39WX8a1hGiK0TPsV/m8nHMeb37ESo7UemE
puXDe/PNN61rhrdcFllEh/UCFyFfCueuQ64fW0ezXmz9zCF6rmtUfmHTeqVr
E+uXz1SeBWNc0Dcdr/SlpnVLQzX+H6pPg0VvD859v43RBaj+3Kq3FHtG0zoj
+P3X9GxHQROh21Td/1TncGid2O33Ud0nI8u30U+Pqq3r3AP+RW0eEVl3e3/s
/HKqt3JqHfd2jEXLsvMjkdXAryi/ifpzm+rPqfpLqv6ViflGnvmIluXuJ9H3
pnXB6NJOblm+HmXGCBzImt2y3JLv/T6dW1f5VWJjED7OPE63qp1DkPWzh6bW
G5+o3xYN65Qp552hozwplJ/Xcor+fenaNO13et4DMtc5V+W5yteDPkW+VJpn
vay0Puf9yPPmCx3/ofTS0rodvheONwp7Jbw2eiS+Ka5fUv3r3DQPOY/e43iV
7a/77lcYN1GonSUq67/2VdkW8PPIiPWub9NzHqd2P9Vxh84N0jiMVNn1iecW
+r8ma07T+krezznhHW2r8n3ht3R8Qcv62QmMrY5P0W+kjvupvTX0O5Y6Tfdt
84b5p1NDnaOUf7HpOjNzfwMDkZm3/K0cq+dbsjKeYVOlExPjPJDXxJVp/MNL
60Og59GJ8H3ynSLzXk9jviPzROn28IGqc3ll+pa1nTWe9YhxHhRZHr5MoEEu
Cd8y3zRyb2gMaI11dc0OavMipfvq+Dld94TSbXR8i8q3U3qn6q/Mu1b5FNZ9
5Ucof4fyKym/QmW5bp9AyyR6H731zJXKUuWXQTeCnqFteRmysQMKz8NOqj9X
22M0srTMC9kX+rl7dW5DPffo2msB3we6W+YE4z+k9twAF/G36h6h/ATlX4U3
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
2D2APWe/fLph2hDbf3S97J9nh3rYNp0T6owKeXwrgM+iP8goSC8P+Q9CHtoI
H5Dofpi7fLP4dEPeje8e5E/464B/7RPkWsioycPPov/hWnDVr1amc0uN5y+V
9/CHC2NILovtdwj7wUti02zzFM7jQ2OOws+OLwjKLg11uJ52fq3sa+Gq2LQO
tmIcg595N7U8Brui71rGz+O/AYwDuAd0+cgwkGWAsYOfuDvIBsHfUQ7P8l3i
coRW8CnISWfZPTWtm0QugZ9JcKen5pZtUo6OqXNsnwX4KwB3d01smg1sD3l8
QcDfXx/q/FZ5vT+ktp8DrmXvwybsltg6oHGhD/B09GNK6OcyIU8/sStkTBgf
sP/nx9Yvov+HHgIDgL8IysEGQB9NCGPC+F0dxhCa6szYvkqQlYLTQ3ZJCm6P
9Xe9kOc8ND20PTov2mSceU/wZ7eFsYI2uSNc+1nie82iU/VOb4/t12/fMCbI
PRZOPf+Ye2+mXnfxPbOIyhaNrVfC/wPH//M/g14fGTVrJnnW8AVTH5NHV7VI
uBYfQmBee4c9qFf4rmmnV6h/nPrZKbbcD50XfieRjSwcroNW7Rr7GFwFOqKe
oR30Rux17G3od7jX8HBt15BHj9Mttp7ywcp70dxaYx+pvCazNufqw7DYuCyw
UcND/qHKci/wMhem5tHvzu0XYmTs9Rq70KNpB9u6xNjFO3Xt2Yn9+6AnRa7P
+LC/rJXblhkfPP1j23aBhdgu7CPsJ9PCnsXehXwFOQu2fs3Scvqb0U1U9t9T
6VmeTz23sYnHBg9bPGRE2PDhoxU7vn9z5/GlOTTguMBzYQtGfXSsyJSQMaFT
wKcqtNG7mc+vGtrEN+YSsX0T3VKZ3rm5suycucT74LkXj60rPidxfb7Z33hf
sXG5fOPoodEb56XHYMvatpnYGYJRwdZwhbDuQT8gPzgNfiJgHcE8grNhXiC7
w98Tfp9m+XWNTePyjZ+U+HquQZdHHWR8rAGdQ53vcufBXnLPFcN9WXvJg1+A
XqZN/KgMKM3L4nvpv9zvcZjS/wqPCWODf9qVYuOZexeeV9AJ2Hph84WPKfgU
8Mz9eZ7S/v96t/1t4l8Jeg4dDfOeOd+tZRwyfpjA8qCrB6exS2Xfqn3Vdk/k
ULqmR2H+d//Evlmh/fD9Qr3dKpf1U/25W8af7qH7nV7ZvyU0Kt/1AqlpI77X
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
MA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtnXncFuMXxufZn2eWVyVLqh8qlUQUpSSkBWVrsyTtC1Fkz5YQsu97JVFU
soRQFKFIklTIWiLKUmRLftfXNX/M573P3MvcM8/MfZ9zneucd88BI7uNyAZB
MKsYBHn93VQJghsKQdBI5Q91bn/JW3NB8JcqZ6i8ZxgE36l+g456Kr8VB8Gp
qpudCYJRKvcuB8HjGvAe9flJ5et07iuV39B4+0caU2MskjxI8jqNX13nEvV9
rBQExaogWKL2p2u8F3XuItXN0vlZKk/SmL003o7q/4H6P69zNVQep/ZfSF6g
8R5X+0/V/kfVxRqjk8rTdEyS/JD6d1P/xZI/lLxO8mEqP6N7eEV9e+vvEF2/
pDZtVDdBRw+VF2r8kzXWs+qzRuM/L/lQyVdK7iV5ueTBkutIniv5GPW5h7F1
7haN/5nmeKae1Uk696zqjkt0X5L31DWPVXkX1a/Q/K+V/Jbaf6B51FP5XD2b
nprP07TR2HNUV5I8VO37aewFOldd43XkN5F8kuQPJA/QMVPXelfXWKM+X6v+
QpVraMyBGrOm5OW63oc6dlI51PEGv6/qK6n8uuROkteo/deaz1iVH1C5oa7/
uu73JF3vGV3vY93vOapvr/rrda3qqp+v+l6qf1LyFs39fzq6Sx6gNnVVfk5H
Y+aq+lDtn6WN5KLGKUv+RfO/X9e/UH3eUZsTVH+p5n+U+p+vNl0lny95D8mH
qnyozn2v9nUlt1V5s+Z/m+r3kny2+v/D81B9Hz2Tl1T+V/WPqL6n6r/UPQ3X
fOeqvpnkberfUPXrJH+jo5HKWR2zVa6h/g3Uf08dp6s8W8cZKmdU/5zq+0l+
VfLTGm8/zX2w7ulvPZ9ddK6b6tryzDWfs1X/qsr763r/6Hrj1P9Rtf9M8iLN
5zTd08Oa30Xq31vl7aqfJHmM5J4qD1X/Oeq/u9r/pf6rNeYjfLf8HirPVp+N
afl/ep5nqP3Lar+f2vyt9s9IbqbrbZWc1fz+1fyeUX1fzXFumZdAv4nk6pLr
S35W7Vuo/fE6X0PjrdK5C1XfXE2b8D7rfHPVd5T8qeY/W+3b5P1O8G78qfp7
Nf+zNKffVV6mPiPVvzbzKbn+HtUfKPkPrs17r2vvy/NT+Tedu0P1LVW/UvIX
Gv8CjV/W2LtpPgt0LlL7f9W+oPHqpb/P/WqzkbVA8t263lLVb1L5WI13gOrO
lnyZ6lfr3EWqP0jj36XyNh0zJJ+mMV6krOtsV9sbVN5D11unPtskP6P6wTr3
nObTSuOdoXPH6HlerfEn5P2bXqvy32ozXeN9rPEXaq4zK15L/9bxlMrT1Ked
+i5V3Z4af7HOnaj77SK5v4691L+/rvWCxsjxrercRxqrl/6WNJfn9PdFyes1
xja+0bT9yWq/WfX5ivserzEXqXyp2uyt+mG8Iyr/rfk/q7l01hjn6V7/UZ+9
VD+K91VjnSb5CLXdU+fOVPuhOnZR2xN0bojqZmr+WySv1vl6mn8Nnfte8pHc
E9+b5MbqO5T1XOVRRY9fO+/9ZYiO3SUfwnqq+h3V5xjJ70l+W3JXHc0yXuMv
0/y/0HG27qW7+p2s+R6n+gMy3mPqq+5lzedI9a/SOPU1n5fV7k3NZ7PaZNQ2
1vkjVD9H8gust/peFqt+L/U9XO2nSN5BfQ6UPFDyJrWpqP1NOibr3Gb1f0DX
Wq3+16hcjTVYda9Lfk1tr6r43ZuvMfdUeSfeOdWvUv27qp+qsY+XvFJtflX5
K537XXWf8U3z/uue5qrvjvrbW9e/TuemqG3NrN+nnfnmVF6hcw9LPlb991f/
EXomX0q+XfI4yfepTVe1fVHXGKfyXzr3r8rzdNwg+TkdedYjtZnD76Prv6ty
Q70PGZU7a6wddP17JW9nfdCc7lE50Lye1LXu0ninqM1UnavG/q+qZnr2tfi9
Ve6r+nNUbqk2VewXOldH5aaR57uHypHG/05tsrr+jawx/NY6/7Oud5jaf6K5
HiZ5F9VtkDxM9afqOCzjc+1Ud1DFe/1k1ddSuZXGX6fy++qbaPzT9XtO03xv
U5+XNNcf1b9K15ula3RT+U2+F5XXaozH1P9i9euntntLXqXyI+pTUfk+jbmb
xt6uPg3V/1z1Ga5yRs9jusYfqPq1tNe5e9V/d5Xbqe5mHcNUd5vGPkbzmZzW
r2CNU7mDzu+RT78ZzSXWNfKqv1N1BbWfpL/3SH5A7U9Q/Vod1/At6JoTVPew
5pdX/53U5nP1vUDnBrEW8P6p3Entb1XfDWozreLfE0VvB66hcgfV36L6ERrz
fZVHaN5dVPetmlVT/+bsgWp/nuTvVHer+vyitgdIPlzXmyS5qPqd1WeA5BZq
X5J8p+p3VXmu+lyP7qMjx/enQ82C9mrfR+UDJbRV+VB+R91vO+5PbVcX/A20
V30f1d9a9vv4gsa7VvVP69iu8j46PzTrPYb9o4fmM5b9VWP/ot9+neqvlXw3
6w9rvfoMU/vbs95PmpYtV8t5/S+p/zTJfVTeR9frrzGeLlj/66vyirLXxu58
c7rG8rLfhfq6p8Yq52LrvyXNvYn6P8XzCvwt5CRH+vu86luzn6vcW/U3q39N
yf11r6dJvlXyq5K3S26mMc9S+4mawzbdXy/V36D6h1T/vOr3Vv1g1Z+Wsb7z
lc5dJrmNzjfW9Vpxz5JfU/3Lqm9f8drL93QGcyn6ec/S8Y/Kh7BmqX6t6v9U
faLjBdV15P5VvjC2/r0x1QcH65k8r7ndiH6p8lM6P0btp+v4Q+W2uv6VKrdX
n5kqN9IxUPLxGm+QxntJbU6V3FxyIPk6yRgk92atn12vYyTfG2u8yhfruZ4j
+TON0yD9fWbp+ueoez+VZxZ9vSd1/M79qN0VKi9Xmx3U9ya1Wau5vKP2N6rc
W/fbTfc7Xuce1PXLan+I2jeU/LTkjjp+ztqm+ETl9SXPdWvWOsHp6DBZP6Oz
JLfW8/9b5fEq76/5PVH02sQY1+ncZTpWqvwzNpbmc5D6f4y+rjncr7kcir6l
a++ha9SJbBdhH9HncvW9vuxrP6Y2z2jsDqrfJPmbVKfuGvrevlb9sSrXjj3+
Feq3X5X3SPbKq3X971Q+RH0+Zy3SuSnoKjq3RXNpig3C9WLrL3+VvT9erb/r
1X6hrvdI0e/HN2rbIeP7f0L9f1H/hoH1hyNUv0HtW2mMJ7ANdRyo8nK1H1f2
/tOZd509tuw9kL3wlKJtsqtK1v0Xq/48np/ms0r1I3hWms90nWsn+anAv/cM
yYdJfgH9WPJE7CaN/37W3/8+7PlZr6msrTvq+AHdnz0I3bbstldqjHHsP7Hn
/pnal7H11D6Q3EBttpX8fvYKPObF6vtk2br+gzrXWuUbVH8Sz0L1l/D+q8/S
rPfoO1QeqzE/xX7R/Rym+6lX8r2OUv0YldvquDqwzYbttpvk+dge/GZlz38e
trHan6ly05KvxR7DXrSfjo9Smb3nrpLnwxwuUP/HdDTT2ItVf63Kz6u+CXuB
fsOHKr4H7uUbtR+rcm0df6hth5zt2d91TMlZp0G34f24LbCOhK50Vdm29k06
dzB4QGhb8A6N3aXK7zDvMjYrv9cctXk1sM2G7XZa6HfhdB0N1GdW2b/1NNX/
qfIuJdvSr0guqv78ou2dHnq/P1J5VeK14TnVHa/rNUC/U925Oldf5To6SpLP
kNxTv0Utjflpxvf0h8qPaow7VDdB8lbJH+u4mDo9nzHoriXvha/pXBn9vOS2
a3jnVF7F9w3+oHO/qe+vZZcb65qPq//OJduyL+lcAV1d9fMC2yDYItzvkTmv
aaxtu5aMD8zTuZLab+QdC2zjYOugD4KFfJ6zjrVUcn1d/3bJ35WtL7+O7Su5
nup/0Lk7c/5G+f1vRYfWvV2lPg+r7ZPovJJPZw1S/Sl6Rjeq/XqVD+b3K/td
YA9h725ecj0YCljKt2Vfu7bud3LR871L8ssab0LR31uPwHv0uvT5gj2Mkfwl
64XGu0jye5KrsTfp9/ox72dwSORvlG8VzOULldeoz2jeDbW5RvIBkgsZn2PP
mKoxvlVdN517r2w9AX0BjAisaPfY7zrv/OWRMSywLNZY1quH2C8DfyOPlr3n
s/ezJtzMGon9mzPGUU/9M2XbmrPYY3TtN3WN4SofpfFqqG6D5EXYnjp3OdgL
+pvKA3UMl9xJ43VP7fHNGu+GiscaqTEvV9sekttKPlxHr4rtuWtVdxvrpn6f
LdgceduE2IYnlHwtdG5074U611fjvxfYHlikY2TevxH2clQ2tgfGN6hivG+J
6u7QczgSPEj1fXJ+Z9Efdigbm+qPTQz2VfG9XJw1hnQs+JHa/4LurP4jVX+e
6vfQ+zFF9Zti4yXgJh1Vf7bqR6h+u+qbaS3oXjH29pLO3cz3xh6s8ZYE1i9v
qrhuk9o3DC13411J24NLgU+dr2u0UN/3JF+c956GPQfO0SJ9vldqPj+hY7MW
6hiruvaa3+G63k+qr6/y0Tp6pvjQFvCwivEJbDRstSfU/zG17cE3pLq+Onrm
/Qx3wNZR/cS8MQOwg7fVZ0DO+tfJqjuZdVJ1f6Fzc+863uV7Z/2pGD/aOWsb
EVvxqqJteWz6GyVfoaPAfpe2v1Fj9lP90WCG6XjUoaMfVvY7xLuEjfG15O4l
3zs2E7bTiapvmTeGAJZwk861y/sdBJ8arKN3ik++qro7wbQkV8vYfviINUXX
H8dvoLZ1Y+sf6CHr9W0/xHqes06GbjZVczgoXf/QJb9EZ1T/8bxT2FQll38F
I1D5AdZTtT9VxwJ0Tx1r0J3Up2XZeMJteWM435Rsf4P/3qxzoyvGT/lt0SHQ
JcCLRmSMcYF1PYyOoroT1Gd/xke/Yn1TXTvWQ43XKGcdEl2yZWx5ssotVN9c
f0cEvseJZetc6F7MsU3J+lKDjPdk9mb0O9YSdCZ0p5FF43/d9X4vA5/X+HUl
j1WbfVR+QG1qST5C19ivbPsPbLioc7eXjdmB3ZX4hsvGKMAqeCbgK2BirFfV
VX8vuprGrK/yfTr3XGQbG312tNqPYr9Vm/NVtxNtWCvL7otNha11HphT3jZh
e439TGL8+kGd76DnMYRvArxEY8xF146ta4Pjd1L9BarfIPl6tblQ5aOx8QNj
1MeofK3a7aLy/7CJyv5N+G12QwdT+Zay8Qzmg63HM+HZVOncnWXrU5tZ+yTf
xp6m6zfO2b/wme63jeS90Sclvyj50pL7NtF4QdmYBtjGDZrfRRXPgbncr/rj
eHdj/9787nuB55Q8t2aqz/I+RtYnPlG5lervRkfNGpMEm5ylMbdr7A7s6ZKX
ST5Jv/3h7E/8/lrjsvo7K7C9dbPG76/ynen+/YHan6L2R+rcFao/XM//p8C6
UlbXW4pNWbAOcyG4V9lrYz32N/U/vux7yajN0xXbL8PU9v6M7ZEDdP180Tob
9ng97F3sc/a0yO8D2C3fEO/Tvrr+nhprPPgA/hqduyRnDPWaktdc1l4wWvBk
njHPGsx5dMl7HvWX5fw8Guh6W1Q/TU0f1Vya4k/Q+Efr3D4qH6xzSbpnt1L5
Zd1DHdWPC4z/4Y/qI7msMRPeJ/UpFo3x/Mn3JHmg6i/knlVeH7rvw2rzDbqk
xng5tY/7gW+ofnHB7yzrW7vE+h3fajc979uwSfhtdKxX+ZzEvpqmkhvpedxY
9FrfNW88iXeSd7MneBrvk9q3VfsZ6NiRv2m+bWyYjiq/W/Ha8J3kd1Temz1E
5etTTGmlzvUveE9ib1qt8S5Q/cf00/xOZQ78VthGkm9R/eCCdbCbE7+fYCWs
Eeg2I3RuEXstmJ76ni35bXRbtX9Ez2K45Dclfw6mpOc5KvRadULF/oSzVP+W
6t/VuYvV/5PEz3oNWI7qu+nc5aqLK/Yv7Z1Yl3wLvEDjXax5HqPiBZLHYmtW
bNseyPVUPrXiZ4kNiC34SMX21hT1maTyNRpjjeTnJO+ray0o2bbFB/Uzuqmu
d1XB+NYc1V+l9p9g+6j9PpF1OHQ53rGF4Cmh9Wts65OqrP+MlfxmxvpcK7UZ
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
Qpf6LjS2PFFj1ary9/Wp2g8qGLvleW4PzLGGa70uNPYGBjdO8ollc+0Gq83N
ReuMB6Vtrkv8vs3VeDer/g32l9DY0n2q37XK3x84M3jzx4n9z/CVeEe+Ri8N
jd2P1vWPV/0YHX8U7CPCV3QJGLPkabq/rbH9D4dnjSm0Vvmf2LY/mBDYEDxX
+K5XBvaf8A7frfmNCfxu448Fi0HGH/eM7v+ArNe4Hir/QfxGxpg32Dc+ZmwJ
bIqLJS+Q/I/KU1N7pa/G31Vjfpexfng6NjO4Ucbr29s6Moyl+W+MrUN8g42c
tW5xsuSfNb8Wuv5Jie3H+Rr/fLX/XO0TtW2PLReYrzY0dOwCMQzESxATQWwE
MRTEUjys+jHYM0Xj08XIzxYdFV11NffD3HSuG79v4jKcxhtC44Nw735nfVZ5
FZzNgmMIeL/55vn24cRNw1cZui2/Gb/dKSXztw/X0VvlXtxvxZgx2PEKtb8W
/Fj3cIbKPXVuHHhdxfrpZYmfTT/VX6ryMN3Hurx9wG+VrR/317hHafz34XaF
5l/Dwz6pZP7nJVljzA+hC6t9E9X10DFd5ScTl7F3Xg/t38IXz57YKnZ8C/xA
eILtNfeJideybmo/Dd2wyjzr7ul4LVL/ED6DDTq3TOfOzfpbgQ8Cx4zvnO8d
7tlD6ttacpui/SfEj4zKWsdaoPI7rEFZ96HvVMnHq9wrtL6MjgkPHj48uufi
dO1VVTBQ5b74vwLrpI8l5mzD3Q7RXxJzKvl9V2Oj6nq7wB9TeabO3aG+Xcrm
Gp4j+VYN+kXiOBneuf6q/5I1U/KOkptrrFqxxyIm6U7VL1H9hVn7lvHvzlV9
x6Ix40np779XYJsE22Sy6o9S+eii57dzaDsJe+lByW8lxmLgduXBP/T3jhTf
vKTo++ddapfuP+PC1JbSb3Zk4v3pOJ4d+oLK9+g4uGh99lr058S+Gjju4xPr
k8QyzA+M5WGDzCjZh4BtMlPyybxrOl5S/62J13XW95dV/i2xTwv9/SXmnhgz
HMR4Kp9ZdqwMOtxrReOlcE3hkNVR+ffEHAH4xQvYixPjhuCHC1X+JzGH/TXw
IpUD9rzQ8Q8zWDt13F30+/h6YvsGbvCf4C0pvgz3GHwILHJuaFulRtH8T/Bl
uPBghGCFjMnYxFjMUds3eAcCf1O3s19E5pPO5HuLrIOhizXGXlb9N6F1ubho
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

               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XtM1mUYxvEfrwph0DRmy46r1A5bqzy3TBJy0cE8UJqgpniclY5a6awx
mE5tslBJs6UltdrMPKKSEoKm5AnwFKCYmoKbWtaqdXBu9Xn29sfF+1zf33Xf
9/M7clfezBEzYlEUTaUOdCQ1iq5eF0XfJUfRM0BlxygalxJFpe2i6DJ+icby
Q6jaujoxihrUPRf89Wo0S8MrkqLoFT5bv0J9LujXRqf4J/F+aprUZmFHsdvV
F6rrT8WO3cYn0Rh+DfUzPz3sw342JJD+vWmH2pm034wUx45jJfqfpi5yH+i/
gr6XmYet1vsPcz/BGrFy+pNfS8PtfY/Mv+Ysdvxe/X7Vt0BmNz7E8S72UmPG
6/wwfL4ZS/juVMFX4oPlOslVYfn8HPyyPt31K8Cexw5ZN5g5ls/Qoy/Ww9wS
dTOwbOxxrERurfU67Cuq1usEvgnbyJfJH8Q20S/6ldEex+r12icX4x/W42W5
/TJF9I+9PIiVOsfj/Dnrn+TS+MOu85tqB9M1fVrNOE975NphOfp0kK/UYwo2
i7ry6fhC5z2bX8EPtJ6k30Q6hi21l4F6r5UbR/uwF/T70XqjTIJ+XbE7sWPm
7jfzCfom1Oq3DlvP96Lt2EdYR3vu5XcLths7GRSeW+xRx1b63W5uhr2kmlMp
963MASrg+yTFn5GTMoexC1hPrDPWjNVhW7BaPQfZX//Q3/5mtrd/udGOxfgr
5iz1XH1m5k2ys7Hp6tP0GSkzKrxPag+nxO/NLrXT5Br4YTTFdTkgk0F/qbuG
1ZjRnm+jl/gvqBPWL9wj9YvkhmK5ajvIrA575+fSKewOuazwXMrVmp3l+NM0
3bU4ip2QmyFzC9XZ0xysEDupdhb2lNpuWLVzK8cSsCr19eF5kZttL3Uyv2Pj
+TrZyXrfz0/FB/Dvy/YJ73h4j9SP5HfKXtVvUXj2Q0/+DOVbH1D3lr5nw/nT
eOw9uSmubTVfrk+r2h74Jdm9+nU25yHrFVTsPMbwH3aMP8c3ypXju+Ta1L+t
9xtYJlaFrZL9W82t9ryeMmVa1c4zb6W5fa0XyG0O9ynsRV26HhV8itr7+Llh
z3oM5ZvwV+VuplI9GsM3TH2umsnYMkrka0LP8Jzx9fa5zJxaOmRmHolHeXyO
nsvDDOxZLJffEt5ffgMVud4XsYTwjuj1SHL82sb4jfSzzMe0w/5ek1ui52Ka
aP0lNsnvu3zMwJ6h3qyv1R3Bjqo7h6WZO41vxpv43v+/d+H92xCuq3UJTZcr
CueAfepabkqKf6NazJifGq8Jtc16nOD3Wh/EXvRry9EEv03hfXN8Kw1wbsux
EeoX6lUgmymXzW+Vi2GVWC22Tq4RD//IFmAPOHYD3xDeV3s5S4WGjHA/Lspe
Cdc4PNfe6bzwzaa+alqT4/+rVjlWgnWTy7AeRD/w2ygxfGvw4+ZWhHsUvkVq
3sHucay9uZux3/jPKdm1LTN3Gw20LpY5Yz/D+eZwPWTysQmu1WC1LdilxPj3
Pnz3J2PbsVFYjt/RdFr/83iB831Mr0OyReGe6pmuJie8f85lDX9Qvl7taMwy
muTPGtm71V4Nc2ln+Ganxr+Z4dvZoraF/w9rMiOD
               "]]}, Annotation[#, "Charting`Private`Tag$1884463#1"]& ]], 
           Lighting -> {{"Ambient", 
              GrayLevel[1]}}]}, {}, {}, {}, {}}, {{
          GrayLevel[0], 
          Line3DBox[CompressedData["
1:eJwl00tszFEUBvCjdKovFaUJ0TYS27KwIEJYVKQ6pbESTaSZpKVDKhbCxEKs
iCBsSIhiUWlqiz0dr+hCUNSr0xYLJDYaLITfZXHne5zv3PO/N3eW5fZv758V
EXetqTkRiS+Aq5Huqoj5dAfeizfjX2dH5PEVeJ4/I7seb+B3VkcUeEfwLK9V
7TTdhR/Tk4dn4TmrgF+BJ+ATmav4BXyN3in6Gn2dPlAbMVoecQtvU4uyiGFY
RA+qjavV8DbBZ7yLZlbTdzIRz9O54BgcgS9gnVqb7Ev8suy3CmfkZXmveEW5
cXgPvoaNvqOkVi/TAe/z36S7whfxtsIHvLe8abyB95B+Ry9OvDJiG/89/RF+
N28Jf4J+JFeCP3hLeZ3qk/Sk78rRRbOf0lX4bXwE/+1ubuA38ZXO36JnED+q
56T7L6W7dD/neQV6lD6OD9RElMsM6D1MD/FPyZ2h++jl+CVexn476VVmHlJr
x/fBdXCheV/s0YJvsPcO+c90E72WztJ99qmj/+hvp/udcR69Bf8kW5vOoLaZ
fjw3Yre8T4tfvF3uoZVvq9irz9jo4m3k9chVpjl+6tOb432Ae+RsE836e/GK
9F5hj5VJeblBPdOyjhZNcmjkFNNz6s78e1LxU2Nj2f//wF8aVGEq
           "]]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{2656, 2865, 3209, 1738, 2655, 3493, 3494, 3684, 2757, 
           2657, 3551, 2758, 2658, 2866, 3552, 2759, 2867, 3086, 2155, 3019, 
           2760, 3471, 3549, 3553, 3484, 2761, 2659, 1879, 2762, 2868, 3596, 
           3241, 3242, 2869, 3240, 1741, 3449, 3318, 3319, 2984, 3617, 2763, 
           2660, 2809, 2871, 3597, 2764, 2870, 3087, 3109, 3088, 2873, 3632, 
           3063, 3152, 2765, 2872, 3089, 2158, 2986, 2766, 2985, 3518, 3554, 
           2767, 2661, 1809, 3211, 2768, 2874}], 
          
          Line3DBox[{2662, 2810, 3175, 1363, 3666, 3390, 3389, 3404, 1745, 
           2663, 3405, 3406, 3669, 2769, 2664, 2875, 3349, 2770, 2987, 768, 
           3555, 3020, 2771, 3413, 2538, 3485, 2772, 2665, 3598, 2876, 3021, 
           1049, 1416, 2540, 1050, 1193, 1051, 2541, 1417, 1052, 3213, 1748, 
           3210, 1054, 1056, 2372, 654, 770, 702, 774, 2193, 655, 2878, 1419, 
           2647, 1617, 1616, 3495, 1813, 3214, 2773, 3212, 3649, 1003, 1061, 
           656, 2879}], 
          Line3DBox[CompressedData["
1:eJwVzrkyg2EYxfEnkZnYzZBWQWGZcQuGRIhCZQapVRIJV6HWuAvJh5tQiSWF
7ToUWWy/rzjzP895lvddOD7fP8tExAHVxyOGVJuM2JiKeBiLOOG/Zae4KctO
RxSxrv6RN7FjriRrpDMTEZfYowtZH1uyZWzkIx75V3tHelW3DvGK3mRV/HKr
aOaJrtNdKvEzZpf4df6ZelQZjdjCtvzX/g0mNGK261ZZb1a9Qn/6XfW9PKff
519oTi/SG7Qofze3zc/7awU/1DtYMLemn+FX+QHe4hB3ac+/79RZPqFPewVv
/QO7Bi/V
           "]], 
          
          Line3DBox[{2668, 359, 1922, 373, 253, 1077, 371, 252, 1920, 370, 
           1919, 354, 1512, 2593, 251, 962, 2313, 250, 366, 1916, 365, 2049, 
           555, 364, 2551, 1430, 1369, 2514, 1370, 363, 2048, 554, 249, 959, 
           2312, 248, 1008, 2351, 247, 2667, 3600, 360, 362}], 
          Line3DBox[CompressedData["
1:eJwV0MsuQ2EUxfEtVPUmoVGmTcTAfSbxBOpSdRqCGnXuHHeJBzD2JhJUH8OA
x/AEROJ3Bv+svdba33cuzX6WpCMRcYz7ckSvEnGK+mTEHV8z76OKguxW1qhG
VPgVulCMmKE38k4tYohvPMnKdq7lv+YtZ9v8g26PLssSfPAbul3ZD79D1+kS
rpyd1r2YhyjpTuxP0Hf+AG39nGzNPMCR7guH+CtFXLqja04wZfeCf8vP8p94
9P6r/Kw7GijKMn48/24+sz9vJ5UVZCm/6Z6x/D/pR+kZ7eFcl3jmq91t+TNa
WOQ79B/ZaiSQ
           "]], 
          
          Line3DBox[{1286, 904, 2908, 2833, 3590, 2687, 2832, 2905, 1021, 
           2686, 1020, 2904, 3629, 724, 2685, 723, 3567, 2903, 722, 902, 721, 
           3566, 3031, 2831, 2684, 3643, 2830, 3030, 720, 901, 2276, 719, 
           1090, 900, 2481, 1283, 894, 1212, 1210, 3657, 2683, 2900, 2993, 
           1930, 2682, 1098, 3029, 3633, 799, 899, 795, 1208, 897, 1280, 791, 
           3565, 2992, 1093, 2681, 1017, 3184, 1016, 2680, 3620, 890, 1081, 
           1080, 1092}], 
          Line3DBox[CompressedData["
1:eJwVzbkuhHEUhvEzSlulsQ0uwVLodRRijK0YkdETtSX2ncQyMzQodRJLMnaX
oHQZltb2m+LJ8/7Pec/3tWQnUxOJiBjHQnnERVXEO+bl0YqIjHyKc5xg0bxY
aSffckbnQ07LtdzPSzqHnMMBCshj2XyIvzGMseqIS/cz7qaxYp/nrHmBc+jC
qnkfzuQHd0luxJpZj25CLsOe3RMeUWO+bn8kH2MKnzpFbJS+xym8+f8rd+qP
6GzaNXk3Y9/7i1/4GVt2rdyLthJurtx3yHV67byt88Oz3r98bX/P9d53vGPf
7e5PnjML3OgMejfIA7yr8w8wvjel
           "]], 
          Line3DBox[CompressedData["
1:eJwVzzkzg2EUxfFrEMbWWFsNejO2Uq0KQ6VgEkuKKCytpUApnQIfI9Ezk4aO
wuRN7FL4Cgq/t/jPOfec596ZZ3R9J1tsiYgVlLoict0RGxjqi6iZ83w/tvCH
YXki3+QHUEC1N2JEXpdvmwcxITtEQ3ZEp3oiJr154Gv6PfOrbpfeYV53TxNd
qzdvumP6hAVdG33Ut9N33QldlWdoB6q6C/qbiSi7MW2eQZ0/oGPeftjb569w
jYbu2c647lPXyc/K51DRrcnPZF+6U/qSepzjW3aZ/iX1+DEv0gTL9pborRtN
+Y17//xONCw=
           "]], 
          Line3DBox[CompressedData["
1:eJwVzrlOQlEUheFN6ViYGKcKQe3sfAK1NlFDIhQC9pr4Hg5xBpxeQy0UEo1i
aYHwHE6l3yn+rKx/73v2zVZ3VrczEVHAdX/EzWDELaoDEaPDEQ9DEVf8ntzH
Mtb5nrzka7KOJazxn7LBt+QfZjCH2bTHT3l73l5b77nR0OuomTW5X7zqbbzh
gv/gFn3zou/iGZW+iHOznFkeWUxjxV5HnpmVZQWb2OCf5Gm64/sWuu6/p380
W9BPzIqylN43m5QTOObv7f2gzI9zYzji77jvdIMfwQH3qH9hSz/U/wFTJDKP

           "]], 
          Line3DBox[CompressedData["
1:eJwVzDkvBGAYxPFHY2Ov0pFQiMrZC6XoNkHtSBYVdgmy+DK+AqVrFUrivjod
6z561m+Lf2bemeed9nxxrFAXEVPYTEY0piIWsJWJSGQj5vkmFPGLFlnFXYFv
Rq+7UdmzLM9PYxYzWNT/YTwd8aIfoK1ow6P+QVfFq26HHsme0Ic32a6sw/YS
3UOD/F2epDn5mZ1zLOtO6bZ8SJ6iV943uMaqPmin/Ks+YsX7wvsS+/ygP2v8
h+0SPcY9TlDS9+sn+El8ujmQ3fJ3qNjcoMO1bd06n+azyKDstpv24FvfRUfs
zckP8VP7Q/8BNsk4vA==
           "]], 
          Line3DBox[CompressedData["
1:eJwV0McuBFAYhuF/1DG6nc5O2bAn7sHSQpmF0UJiIWIMgmhXwS1Ykyj3INFn
dLZcgGcWb75y/lNyutNLo4uJiMjgOBVxXxPRXB3xQBO4Qwl66yKy+hacyKe1
EUldhs6gVT9L+3Sl1qf5Mrqu76DDaOMv8OueHO3UnZn7Rl4ul+v5Cnop7/Dj
ztvkB/g/+wp8j26ZXuHR7BO2im/TP/N5tMsN9kzwL5jEmPVtfYF/RQffZKYR
VdZu6K5uBYN8yn1zdE/uMt9JX9BvtlIeQRL7ujf6jnPzP8jyH5jnP+mBmSG6
IK/yh8jJG8U/Kv6PM2/pmv4aU/wX0jiS/wFKmDXf
           "]], 
          Line3DBox[CompressedData["
1:eJwVzjsvg3EUx/Fj42lrMbrEU8wSMZeFYrQaiM5t34FbGdziUl6AErHzEpqq
1yEiVRKLy+hj+OZ3Oec8zz9dry5XeiJiBVdJRDkXUcFoJmKK7uMANyj1R1zT
RpYitfNG+9BBgiNdSmeR55u4d5O4PeY30JW//KvFf9ibMzvhq/qu/I5HeVde
NTvlp/lvNw0M6rZ1z/iRz+hdb0SNviDjfshO2825XJD36Cuy/LDZk1lbHqB1
2sEDP2J2weftjf2/FWu+nZMv+U86b2ec3+KLbhawyRf0E/oav6hbwg4/oz/U
3/K/3jup/wMsoDMP
           "]], 
          Line3DBox[CompressedData["
1:eJwN0Lsug3EYx/HH5FDEHTQNcSo6VFsdnQaxcQfK6nQHErOBwZmi1dLFPdDR
4hJEpBHRmcln+OZ3eJ7/kzdvam1rZbMjIlbR6InIJCJqvRFTtNgd8aib5Pd1
EzTRH1HlH/RpeY9f7oyo0GJfxCJ9oX/4Nr/FLl+3/27vS77Bhr0Z/StybpZ1
LVxjwWwdT10RV/InLjGvm7Zbc+tC/sA5BuR7nPE5905p0l6eL6Dk3biuTZd8
ww+t2j/R/Zof04r8ZtbkD3AnD9nLuDMmz/KjdI4OIuvds/+zTUf0R3SYHtId
/AMzDy4K
           "]], 
          
          Line3DBox[{2742, 2864, 3207, 1411, 3671, 2741, 1562, 3403, 2526, 
           2740, 2982, 3206, 3655, 1177, 1348, 850, 3582, 3057, 1175, 2739, 
           3525, 3581, 3056, 848, 941}], 
          Line3DBox[CompressedData["
1:eJwV0Dkzg3EcxPFN5QhKvTehEIXKHYVaZYYyCucLUJihUauYMRln6QoRR6Uw
4w1o1RJR4qP4zu5/f/ts8QzML81WCknKeO5OqsWk3ZE88bu9yRFOsNCXHNNH
+T49wLduozOZ6Uke5NO0jIJu+3+H/0LDrUU3u7zlU/wk7uWvdgb1J7xbbuN0
DHW3mu1Rvinf0FvHnO6d2xq/h37+Ftv8Drb0R3Te+Jp8ma7g0MaPvUX3G3lJ
NowhnOMM1/J3Gt+f0ivvX3qBS/7Df3mx07TxiVX5Hzk9NFg=
           "]], 
          
          Line3DBox[{841, 757, 833, 758, 3616, 2732, 2966, 3017, 2014, 2733, 
           3509, 3579, 2734, 2979, 3580, 2980, 2735, 1163, 2574, 1489, 1164, 
           2736, 843, 3053, 1169, 2737, 3686, 1625, 3205, 1344, 2738, 3675, 
           1496, 3054, 844, 2300, 940, 845, 3055, 846, 2232, 846}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1632, 2645, 1739, 3684, 1633, 2505, 1745, 1648, 1815, 
           2310, 3586, 1365, 1653, 1822, 2351, 1754, 1660, 1827, 3642, 2315, 
           1372, 1669, 1017, 1445, 1443, 1618, 3496, 1602, 1959, 1766, 1680, 
           3573, 1843, 1966, 671, 3607, 1687, 1848, 1977, 673, 3609, 1695, 
           1853, 2566, 3592, 1778, 1701, 1153, 1154, 3305, 681, 930, 755, 
           3631, 2013, 1787, 1714, 2014, 1793, 1722, 3583, 1798, 1730}], 
          Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFDqk81Ye4mEpOpg8VikliEtILQrXbSxWZkt5EYTCLxmhg7
Wr32HxD2EksXBh/DN+fcc+7vPs9ke6e5PZRkEe1y8oC3sWSLfowmPbo6nnRo
rUgK2SOesCubkFX4Z7xgTzYlq/OXuMI1jitJ39193Qm/hGXc6t7pt66uO0fT
vIJDtwbyGdkN1mTrqPmfI92srFRNPvmG7JR23VuQzelG6Kb9aV3Bt/gvHOAM
83ZeUdUPvL1Az/xL7/Dj28PmLh87G//3UMjuZX8fbSof
           "]], 
          
          Line3DBox[{542, 312, 3552, 1636, 334, 3349, 1262, 1582, 346, 3215, 
           1009, 249, 961, 3183, 256, 1516, 560, 1208, 380, 1022, 3219, 271, 
           419, 2913, 276, 3368, 1302, 1584, 282, 1462, 2928, 446, 814, 288, 
           3008, 587, 468, 3563, 1708, 3577, 499, 1716, 3580, 513, 1350, 3386,
            525, 527}], 
          
          Line3DBox[{1637, 1614, 2626, 2625, 3553, 2638, 1599, 2539, 2538, 
           2639, 1601, 2545, 3672, 2544, 2632, 1590, 2514, 2513, 1662, 1928, 
           3601, 2316, 1929, 2051, 1930, 2391, 1931, 2633, 3682, 1592, 2517, 
           2516, 2563, 3673, 1970, 2321, 1112, 3650, 2103, 1978, 2061, 1979, 
           3559, 2492, 1317, 2068, 3678, 1532, 2495, 1330, 2072, 3679, 1536, 
           2501, 1341, 3615, 2074, 1243, 2109, 843, 2078, 1170, 2341, 3648, 
           2298, 2503, 2299, 1732}], 
          Line3DBox[CompressedData["
1:eJwV0D1OQmEQheGxEbFAGrWwIEZiIMZQiyswXqJigoVgYXGp1J41iBTSsgq0
02hDhZtgC0qCv4kPxZv3nJkvk5u7eXlTv16IiATpYkQjE3GGtpxyLidzeSni
it+zEVN8YMfsk78www++UTH/5T+cootbbC9H3PGBmz0euNdFUz6xq+MYF2hh
aH7k7QM/Iutun3ft7jmxS/lp/p12W/qznJdfuMols1d5VR7zhv7G+/qKO3l0
3JiYFfhcT71pclGvcYJDrGEP6xj5P//XWCbX
           "]], 
          Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/HPLedccgOJO4rNj0sp4zlMBjEInV/JlTrLcX+AHyuJEgbF
igEx2CgLZSVZUKwG/gDyMDx7vd6v1/v9+da3KT8/VIyEEEooREO4jYVwh1xZ
CF3lIVRUhpCh4+Ys7UaB76Wf6MGP+cHNMf9Ii+ZNmnDbJ9vg09jGM3YQwZqu
MR7CKl108yo74wfdvfHrshHzL4Yxinf5Of2gB/oxPngjRzuwhX73FzQtb0PU
bgttRTOmdQnM4BJ5xO3s0nb9lPsdfhbXvpHQzfF7GNAV6I38S37Ff9N7c4lP
6mPeWOBr5Pv0AE/6I/MhMjhBp91TmsIFXuyd0yyqvDGhr6ZL8hUs//9/XZ1s
UpektahHCg34AzZ2NyE=
           "]], 
          Line3DBox[CompressedData["
1:eJwVzz8oxHEcxvGPkuPOGYTBoDscSgxKGW5zw9m4WJTFSu5GUlfyt6RuUMii
LLYbbRaLya2MZzAYZFIG8brh3fP5PM/3+f6+v+x6ubTVFhGr2OiI6E5ErKFh
TvdEbNLnzohe3nwXzAVaoA1UUMOgfIq26xTpAnZ0M/xsMmIYoxjBHv/UHTlz
VV7UqdEm/wTbup/piEneDRbtSziTzTn7bp7hJ+gyVnAum5ZVzbOyK/df4BLj
/Gt5nt9n70eeN0Bv+d86j61/RtKbUrjjv9hfMeTsj72ON/uu3p/5Hr/e+cEb
a30HE3jgH9Av/j49xDGO8CT7B8oRLLs=
           "]], 
          
          Line3DBox[{1254, 872, 2042, 1889, 3554, 1645, 1812, 2646, 1813, 
           2350, 1565, 1908, 3628, 708, 778, 714, 1077, 1076, 1923, 1832, 
           3589, 1939, 1833, 1941, 1021, 2318, 1217, 1519, 3453, 1218, 2101, 
           1454, 2524, 3668, 2522, 2634, 2523, 3557, 1693, 1990, 2327, 1232, 
           3342, 1233, 1149, 1478, 3436, 816, 1150, 1037, 2331, 3646, 1864, 
           2334, 1039, 3595, 2336, 1869, 2528, 2526, 2529, 2527, 2648, 3685, 
           1620, 2630, 2629, 1737}], 
          Line3DBox[CompressedData["
1:eJwVzytPgmEYBuDHguKcwzmLm0ENbqCjedhgzmLwNCVAp/s5DWqQIn8ACho1
aKHrRrJZ/RGA8APAqJfh2v0+9/ce9i1XL0rJREQck6QiMpMRc2TTEYXpiCI5
6w32ZiPW5T6XUxFteSWv7T+yHnPIr/mGe26pu7cl551/kI/kSZlfZM0dd6x5
q+H8gb4pM7z63mZBtym7uj49yroZ5970HfOp+f3/Hd2nXNQlFPXnMu/+J/nM
Erv6L/u2rLfZYYUT3aocULFnKL8503/4l5Ec88MfyqsmxA==
           "]], 
          Line3DBox[CompressedData["
1:eJwVz78rxWEcxfFjuC6KTHemLEalFH+BjS8Gk7p238UiqwGLzWgy6RpsjH4M
ugwWg1wGhZIripLJ6w7vzvmc83menme4XhYrXUlmcNqdVKrJK0740Bds9SRD
A8kmPZL/ocHX0dKf9yYXOMOB7gfzfck0XXZuXL7Az8lKfp//wqhu0R2X7mjT
D7xjT9dGVX+sm8CuuWZ+o4fmBr77kx3zMz75bfqEMXc8YMR+i27IHnHf8c4V
3jCLddkdBu2tyVf5W1zrKqjJSvMNCjtXsiam/GMSS/Jm56/2fvEPk9oyOA==

           "]], 
          Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/HPpbijFBmV5L9gQynlR0blBqeuW5wMblEGsiiDgWSQFCGx
cMQgSpSb5AwGA2WQlCNdEY/v8Oz1fr+en8/ne13zcHZgNBZCGMNlZQjxqhDW
Exa0xEM4xR9Oopmv4C/MaTQhjx8c4oD/xbk5hUbso4w97HLf2DEnI18bwr33
vsxnvvcpN/gSEtUhDPIlXcGZGfmBaazx7+jkV9xLo05/JI+RxzL/Gp3xTg03
okuhw50F/QuK9i1vJ2WDfkjO6Z8Qi75vX+Vz7j9jArPcI7rN81y/M/Xu9skp
/QN6zT2Y5JecW0Qu+h6+9F32LFeU2/Y7Oc7d4s3ejgxf0G+ab2SGK6DJ72rT
lfnr6P8yX8lW+Q+HI0VL
           "]], 
          Line3DBox[CompressedData["
1:eJwVz78rxHEcx/H3IXyvzsB0g3IlxeQUBv8AZzMRJTLoFMpitFmUwWZRUjYL
iYEisVkokeEG5QaDpO4WPx7f4dnr/Xq93p/v5/MtzK9MLGciYg53zRFJS8RB
EtGA7taIS2TMF3SojdppsnPDL6IL5/jBGU71vyhmIxb4Tgw6d0JvfeeYHunr
6Lczm+7o87SOKzs1eqj/xh6f6O/dWU3fw7/Tfd0nJs3XuiV5GbuyHvsftINv
T+/U13IRO7IqBmRF2Zdsi3/DgyyHEWf7dJuyCv5k4+7Ylg3rXswVPGND/4ps
+kaUMIZ12RNGzY3OrDqbx5rsEb3yGb5sLqT/Rqf4afwDqBE3Bg==
           "]], 
          Line3DBox[CompressedData["
1:eJwVzz8oxHEYx/HnIv/qLEalqJsYlCgLTp2JxezPIcoll0wsSkkodYPtFkk5
k8GVLLfKZpMyneWckiwyyOuGd5/n+7yf5/f9/nqX87ObiYhYwUJrxEZbRFIu
Iq0+xmBnxKR8RB4n6OJzyKgLmMJVe8STzMhubgvPLRF99nfltvMeXtX7qJr7
SEak9AqYtjuDI25HfnID+ucY64iYwDhO+azdb/6aGzJb0zvDj95to2duGEvu
HpFF7sJcmSvaralHuXdZxwEukeZLcg79/Lws2T1s/Bf3gqx6CTf6Zfnrzqr+
G1ad13DH3cs/rq7fq15HDhWuIhO+/8Wl1E3e1OOdzfIB/930NwY=
           "]], 
          Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/E3Kee4K0pmg8ggP0p+DCwGFjqZLNKZTizIj4QbmCxM7vyI
WEz8CQaD1Y+MlIiFf0CXh+HZ8/V6vev7/TROz2fmyiIii5/KiHxVRH0yYlz+
RgZ1eikR8SWvu9fqY/InRpHWV+yv8jKn9BH5BcNYsi3iSV7gGvdHeSgd0eC7
D/Il9yL//59UxKDtDgPYsvVgEx9u/bZzuY83uBtdvnXG17YEX/EpN9k7+QSH
tkn/L3KnN0y5vdsrcIyC/YYPuMPtSG5HETu2ct7mArdhH2t68Co/cyv2MKuX
kMO93oJdvHn/jO0XWTTbcqiWJ5DErX7hnX8ieTQJ
           "]], 
          Line3DBox[CompressedData["
1:eJwVz70vQ2EYhvGHRHwkKjGR1HA6MDFQahRNdGBiMFikViopIsGgm8EkBqO0
/hADk8WGWElEqASbxe8drlzPfb/POe85WXV7udYREWv47Y446Y344dGeiG++
5jk09Z9ywfzBlVxEQ5fhCEu6VyxiRs5jHxV5we5zMqZ1w6jjvT+irNsxz/MU
D2ETb85udYPuu+HZvogSXvSPzovmB17x7ifulK/sFe23eFJ/ae7CISZ0TYwn
nB3ozs17PMZn6Z9xIe+ikb6LC3yMLO1iBHXk0XbvF1bdvSGXucr3nvvjGg/w
OnI4lbdwh3980y28
           "]]}, {}, {}}}, VertexNormals -> CompressedData["
1:eJztnXdA1EjbwAEVO96JCoqAvfd6KmfsXbFj7w1RsSJ4FvQUEE8QEc6uHB6I
eCLSFJEBpCoKCCJdVFg6wYIF2+d7pEj85nazm91kYfgH+SVOnplkZp55ykzb
FaYzV6upqKis0VBRqaVC/VhW/V2GccXHbr330mYpTl0/nBVoUDAwhrPyqwvv
Or/ug4/JOKjI3WSd63RLLJ8xzVb7ejkOWvt3S3a45oHNB287h+4vxoz+/Z0B
zG64dhiT70/dv2uepsEq7xIwPfjymVEZTxQmP1NOcfcXN2sf4F2Cg82bvc7d
beUtdftwVS8mJ55HXf+goOcijrg8ONE/qes6jH7KtnyyvwulHFk5s78rapxB
XDreqe7JFiaf6feV46vbMtr3FOtyLD8DlZCvdDmVf+8TXH354lyPG4gjjjji
iCOOOOKIIy4E3iBJK6s4DgcW13UuO3rfVlg5XTct1rs4BgeH9l7wNfzlvtzr
G9b2tLGNOQ5Irh7u7r2vVxTv7S8rr671qqmctAtpQ+zJb+VknyHsCuCZlPYE
xBFHXHh8zqYx90WvcZBh6D8kN95T7Hxtc+rdl6lGJeD2+DuX021Tsc/Hwr+G
HCrFvG5HhZtFPwKqrZKWl82/Lqk+gDHL50rfkHf7sPW7wepF2tfFlVOW4GIb
3icfzI1oGl7PPAccP3I056+EUM7rq2i9C/GaybnSS8l+RXKhjBuIc8OZ/ixS
/yw2LNQN8y3B7jSas/fh3SeYdcSLkAhtR8HJj7h8OGy9A1unwNZNsPLZ3s/k
aN2NuCyc/I5JjtbdknHYfCE0OZWdk+MvyVFcEOKIC4+fdUqy8f8ujkvzWkz4
+g77BSensnA0vyCuSE7aSUkuL/sGzJ4Js1sy8xqEFg/JtTxk+3Cd72DzavWa
Pd+Nz33U8UE/pVsJ7jtEXJicsDNQ15GdoWbxYpPXc/Zm4linzRc/ZpoHKOy5
8s6nQxxxIfKaqv/Hutb6GPcGxzr/GvAxElzBiHEHkNe5Hn8u+dRvNucdXb7L
wdytoiPuvLeDpBy1TyUvG6GVcCiRlvN0rbq7ClwDBSdndefke5BX+19L0NLu
G4uDqNPdvbKDg8Tef2L4XBWLQThwVP1nnfXgWN7bB3F+uLL7SZVlHEa8kpPj
FMklHa9qOm/VT1Vn+rxMbHifUqzZqGJQq9WEBUFHkL+vuvBxJn8defOKXtf0
11DzKHp2lewvFEf9pWZxjdi//Rd8xYH+uYlL5vof5l0eeXGu9s1AHHHEERca
xzI3vxxkJyJ/g7D6iY2+rPTlXU5J81/Iv2F2Brb2ByZH6zjpuPmcmJx+382b
zvUtfoqNPC04Obni8o5zSOvT3mtaGl3+00K3X45Y3xRbDhkvnM3QW5j6m+8e
mxN5NnnAKbrzhKTjuUC/XMXv0xxvseVIKn9423rG7z/R/ci4wbpx91LOyP29
EP4J6rmkn0Lez+WLF5s/PJP0XXx4v3EdE7yO/Sl1+ecq4wRBi2oWH7jjzKm2
1m9xEDLt5PVx5y6juHopuaLi0OTNYftqst1vE5YXrCj5Jc1Lqm77NvClp2FG
PmHZzunYaiftisInxWC09ZbghtjfgmsfeXO28Q+weYrr8UTR+2BD6ytnv784
TupfitK7lI3D7Jmy6r2IIy4PjuwS/PJWFoejx22g27+5kerGuH7RgpMTccSF
wPWX6e5/+kcINvp9uxVXb+JgpfmFCbZ74PMpsY6irit6PYU44v/Fe5xYrIt/
oL/P06rT7PR8XKm/p6Wmtar/TZ/EW7tohm+wZx3vyjYeSdp4WlKPqCn6w4NO
q05N+vZevLAhLoG4Le/yIM4tJ+y6GGnXFXc/X3lS1Y0r+3oEpm+IO9cMZldh
aweW9H55tzNXfkymPZC0nxB2FopLGz8Ge18w+bnWJ2F2IbLeymYv4ts+yRUn
66Gs8gudE/k51HWUpyMZJ+YJ6np1s8Mz/aRc5fexHecVVV9ZOWE/pK5Laz8k
253kytYOMD1BaHIKjRs8GaKZkEe328Tu0/qWu/tg5PqH5OLWQSgP97+5tHF3
svLqup9ATYvHQ7x6c0ntBpKevyPrORfjvXr2TvtCP7fnqzm33rR34K19YHnc
VnYLF74Jo/nQ11c/hfYFSj9uIy4fLuu+60LjzPWLstWruuon0nK+4n4RVw6O
+ouwuaR+cGn9L7L62Yl9GKjnkvswSFtfxBGvzvxB9tLur0ZlA8+eayd+OlgE
TO/P1S14Q/c7oZ0nyBUn/ZIZ1Wx+IfNFZM1nFDr3Xe8Xfq6C1hPysRGtutr/
JTg5YRxm32vSuJl7nY80f7DZbL1biovc5SHs29T16m7fFqofH3Z+qIHT5KDk
LiXgxZreQfMWpfEup7JytvohW/ukstkrJM37k/e6TKj+TZj+M3brvZc2S3Fg
mxVoUDAwRuryyTiRmhofsnLGravJ38W5XTnwrOKWvwVv8sws3m3XUCMJ26+3
SC1YpxRM172X0t8shLyf8UOVo7Ll1JdHan/j4IP2pPRJ6nfF3r/vtxZX7Itx
EBRl1az5RW9s+3A/5wXB2Vjj7qN+9u9QBM526ny091dfseXIm0PGB+j9BQ4N
Wjhkf9OrF7894LTWn+KONwxKMvJxYFBic1ljqA+0HJuQwLxh+xKp62V/9A8/
u6uU93ZQdn7e4+zY009LwK12Ww6ovEyWuhzSv9AgoMq8Rr33dMZ7l7R89RE9
B4jeLqOut9ROsvxIjwus5UQccWXiPmsDosrW55J6qYqa1wgP+8g8wcmJOOI1
iT89N/Ng/FMcnB0XtfKqJz2vqdcbP9AqEQf1Mx4dvU/bSVRO6qj7bE8oBCpB
K8eP3fFMbPlnt9rutdmZCx67LT3V9zbd3xN1NFPXFCaCZnqWE8YaI/1HUk76
l+9Pr+Jf/uH+ZapXhlzDaf2i3ZWJogudrvMuP+LsuLznzdCBJgVj64qo8kXz
09uqDULzck3hQ746pMxZkgt6NrponZNAv3frhhMe3knAQcv9XsvCut0WW059
wo5UVtWOxFoe09SJY49ceAS6i2pt23+OnhewU0vuzgjCwcZfu13YYBKCJdxf
pZfWkv5u/c92bTqzA/y7zW96JMVTTwTerRjeqc4WEQgMUG2gNi0SO5xv0VFk
kUOVcyJmg968P/N5fy+IK4Z7DvO2N28sAk+tUoL1+nz7fqb7q7/99rcn1jqi
03QRmHw4YHwhbf/k7LmmFxNqP22WBMYVPGg2cQV7/Wdlj3X9ylplgyA340U3
rTLB24h1mrbL2Y/bbPsR4ogrM58+9OGt1i8SwTuDDHuz9aXYIbvF7Z5FJmCq
xW3jRFal4G6bh4cuvaH2V1FxIOy1pQw7LYyT/pQ/ZZwHYRy2nlpL1Os1US9x
5UD8PiqEfRqQdung9TbN27mngcUr1AztM4vBlKzgBQM17rCWv65ZoNHyYwnE
71Cwzlxtftp2tO5TFK/ueg5ptzci/NE1bV7r4HXw8VYjEXX9N7PBk7LzRVDe
1LxbZHFcDrYjsrS2kVs81t+x508rkuGcr3rVVK7fKaJbh90i0Eu3Ub+scPHt
f/CyKDx6bgkw7ejthR1NpTgZB5hXNd5A5SLhL/Nk+MssiXL2MMpp9dtog+FJ
D4KYzw0m7HjaDDseW/ll1YdrGif6NTW+kf1aaHLCONvxii852XKnfWZNTyym
30tskuOinOfyl99QY+iEsY+puC+VO6/1ehS1DhRc+yCOOOLVj7ONa8pqmH6p
3sU0EFJnXtM9EcVgk1+GWseNodT9G2M/dCrGcbC67Qvn3LrXMULPoK4z9Q1Z
5eeq/I7NP1sPsKTH+zyX+dppIcozf7Hlyj5f88VrrRnUf5YN3U7GZcYX425y
125cv5dVc6au8rjzwIDJpwxbMbrsfCKWUrHewGqH/PX2pvoFnolq8diArXNP
h9YuAfXxjtce+T3GjDaP+b2PPd1/fYHLag1z/tYRyjJeKbtdSFHjD2kv/YNh
LyXzJ94Q8cNfywMC/jlG++sDpiePXnApD8q5khNm71IWO9iNe8vXvd8oAgvS
2y9YaSwCeRWp5Z9Gh3LWbny1D1qXKSf3Lu8aWLcJDowdvMcPTngodTl+hH/5
CelfJn66EOPGFpFkeQdC4+FEvaKJep1nzCMHeZ5HlGXc45ub+rg02ZiY+YNe
x5c8iPPL2drtEUccccVzMt7SR8Y4E3L9Imn+o6T8Y+Ijf4OjIjAyP3zZejMR
KL77c/ceC8XrvTB9SVZ5lIU7nCq9unw2Pe6G4cNOZBaJMIfKuB+KZzLif2Dl
k3ERx6vm6ctNfvJfpN853q+q3xl2P3Pe4Sq+kSsOi5OfGm7ZwSCfXt/Fbd2Z
MWO3j9LH1cvbjwnzXyu7X1vZuKT5ROLsbDOJcaYlY5wh36e071He34Oy282U
nbO138LGJWnHK7b7P0jKixh2yxgp7ZaWn4FKyHf7BCz5+r+/97EuR9V5w5fw
oXT7nDBsPMSvdvX5nrnSh2XlsHFD3vZ/xBXDYfGxzH46TDWkSj+F6cNMOypf
9UJcNt6xpP5a1e0iUOA2TCcnVgTl4vJ5+89W6xz1+Mc4WxiXd72UnZPnuo6p
uv+h2PuXS3i/rJyt/imtXiqpHYBptyki7DbdGHqaGaGnwXjHyvU8xbsQ6/rP
R7x1bc6KsPnxU+NULEVg2onBvmoL6H3ASH2QqQcyubjxFtYOiuZo3kdcCJxt
/+VLTnlzruKFYPY9tlxK+alyJJWfsB8DSe3GfHGm/R9m9xZnD2/zb75SJqUv
nYwWqeGmdDs9zzfLz40XQbm86wuLu4PxBWPX5w4bQM8jOhn3bNe84/89wvK/
+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
D0d+mxH8bT3+1TS5fU94XDHsvIP/A3ecvcM=
        "]], {}}, {{{{
         RGBColor[1, 0, 0], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{7.532169851483857, 0.43928500403754356`, 
          3.276280255134095}], 
         Point3DBox[{-8.27553146091735, -2.441740913902283, 
          32.44140206255657}], 
         Point3DBox[{-9.767108540615066, 8.54532326684324, 75.8507626027968}], 
         Point3DBox[{
          0.8751353390213623, -0.41336659055150804`, -3.548594757898639}], 
         Point3DBox[{-5.093015444385905, 5.19792003123176, 36.5216897673246}], 
         Point3DBox[{
          9.699859950886086, -5.659097568733227, -7.856693688350028}], 
         Point3DBox[{-0.8196562614982383, 7.694583374099061, 
          25.359283126093878`}], 
         Point3DBox[{
          1.6770857198029745`, -4.720536649999396, -16.669167121601717`}], 
         Point3DBox[{8.391203247282576, -1.5232955420576921`, 
          1.2032872408710427`}], 
         Point3DBox[{9.745806233326164, 1.7588531238907024`, 
          16.720932507889813`}], 
         Point3DBox[{-8.343902132101434, 5.804292609629471, 
          57.2989175731084}], 
         Point3DBox[{3.9231786572069467`, 5.037324677170886, 
          14.864062570150063`}], 
         Point3DBox[{-1.9690154632734114`, 2.654825152373398, 
          13.90498794447268}], 
         Point3DBox[{
          6.487894417457689, -7.8892331571369425`, -24.805683931849934`}], 
         Point3DBox[{-0.574767011026335, -3.8000100540514694`, \
-7.6006014511772655`}], 
         Point3DBox[{
          5.63604641693717, -5.672639397142522, -19.050846876405778`}], 
         Point3DBox[{-5.767939044480208, 7.587559036784157, 
          45.9566289466489}], 
         Point3DBox[{-1.8369900352007882`, 3.5735232771114838`, 
          17.253826840556275`}], 
         Point3DBox[{
          7.1207507000379096`, -9.843640858669836, -28.02505238847208}], 
         Point3DBox[{
          3.036030417159111, -3.5222105206380334`, -13.814822411979726`}], 
         Point3DBox[{3.157587758379549, 5.339539173669166, 
          15.437600513817555`}], 
         Point3DBox[{
          2.120030164211755, -9.489474126798164, -30.9606134139559}], 
         Point3DBox[{2.323901151034555, 2.3202839452223216`, 
          3.4399892653425943`}], 
         Point3DBox[{
          6.9368646162035645`, -2.1906790427126808`, -4.522237151098127}], 
         Point3DBox[{8.761616639853791, -2.4685540701046484`, 
          0.5146145337819821}], 
         Point3DBox[{
          8.017288385448673, -7.581970512011182, -18.707391062560454`}], 
         Point3DBox[{-5.4601148928801635`, 9.7267584128641, 
          49.785964114735044`}], 
         Point3DBox[{
          6.293337898999155, -7.00694076321178, -21.79989624786244}], 
         Point3DBox[{
          8.115893178376233, -5.1941755373756635`, -9.627611148700797}], 
         Point3DBox[{-5.975536412760931, -9.050596810932259, \
-2.270484246706811}], 
         Point3DBox[{
          3.9469344992863427`, -7.569937332483967, -22.939620873891638`}], 
         Point3DBox[{2.4030904537320836`, 6.437752470104684, 
          17.303489421945898`}], 
         Point3DBox[{
          9.66367462201812, -5.353760520895463, -5.708226943188199}], 
         Point3DBox[{-8.271513838578578, 9.997696347239945, 
          66.1172306350519}], 
         Point3DBox[{-2.987937502329004, 4.187066425987666, 
          23.90784713369778}], 
         Point3DBox[{-0.8653390099878422, 1.278606136950117, 
          8.039671114702942}], 
         Point3DBox[{9.437274834375664, -1.75615599947335, 1.61854000988839}], 
         Point3DBox[{1.4364085889291047`, 
          0.1089073403148717, -2.125002464776366}], 
         Point3DBox[{-2.234563640029336, -0.6176209028173076, 
          4.367560753598508}], 
         Point3DBox[{9.38817914578911, 7.587932282991098, 32.33708716514548}], 
         Point3DBox[{
          7.714639161866863, -1.2764563664904038`, -0.7991161552846284}], 
         Point3DBox[{
          8.370863093285365, -7.547695936210445, -18.260089980426883`}], 
         Point3DBox[{-0.5288860103022586, 1.5699491353374455`, 
          7.367148676381714}], 
         Point3DBox[{-8.775192430608566, -6.69488748657621, 
          20.76438974343391}], 
         Point3DBox[{-7.405652508367524, -2.925910804481834, 
          21.9004528767356}], 
         Point3DBox[{-1.1184679593198013`, 6.520110066718658, 
          23.090164786902882`}], 
         Point3DBox[{6.634034690162764, 8.82215772501268, 
          28.112169866336068`}], 
         Point3DBox[{
          3.929776292601346, -0.42636389294203525`, -3.5006051966649636`}], 
         Point3DBox[{-9.09680105909182, 6.193632783187994, 
          62.34096659776681}], 
         Point3DBox[{-6.989089308251447, -7.778053658409249, 
          5.101933968505335}], 
         Point3DBox[{8.946801618501816, 0.034441671091244075`, 
          7.013830863570251}], 
         Point3DBox[{4.375984588585602, 8.598435523646714, 
          24.271995058019154`}], 
         Point3DBox[{4.130609603091685, 8.726523610528659, 
          23.391814545116063`}], 
         Point3DBox[{-7.903201159134781, 6.9696258121919215`, 
          58.305871430756525`}], 
         Point3DBox[{
          0.3826938762634349, -4.784667061572829, -13.942307176399586`}], 
         Point3DBox[{
          7.407300057039393, -3.6663851288487415`, -7.231441301526239}], 
         Point3DBox[{-4.7505570854639565`, -2.7686332478132236`, 
          7.031341644072315}], 
         Point3DBox[{-6.897021114501413, 6.894271742717862, 
          50.65167248112924}], 
         Point3DBox[{9.388367578781668, 3.863753013691337, 
          18.667807913855725`}], 
         Point3DBox[{
          0.9426473697128444, -3.783311015837022, -13.534599420597248`}], 
         Point3DBox[{-1.7156845171528872`, -3.4143958943290684`, \
-3.345765758731887}], 
         Point3DBox[{-5.157286906391892, 8.26093683914349, 
          43.712098932231896`}], 
         Point3DBox[{-3.9983706610046212`, 8.179137281849663, 
          38.51514402636806}], 
         Point3DBox[{8.728713198213704, 4.8649459476339345`, 
          22.993050048379445`}], 
         Point3DBox[{
          6.357072400171887, -7.877366471828246, -24.83254824249416}], 
         Point3DBox[{-7.312939493169445, -5.323441440495351, 
          14.351349262015749`}], 
         Point3DBox[{6.575806785265868, 2.627169034360321, 
          9.362051595792835}], 
         Point3DBox[{1.4816398007064713`, 1.4131832524128818`, 
          4.22304781963171}], 
         Point3DBox[{2.060500292672586, 7.087202031476011, 
          20.725678250481117`}], 
         Point3DBox[{-6.682163836278473, -5.607614693274556, 
          12.061566732485591`}], 
         Point3DBox[{
          2.5115759109078866`, -9.755205516847386, -31.429838521990334`}], 
         Point3DBox[{-3.803471272266435, 4.8222152862650205`, 
          27.330480754835897`}], 
         Point3DBox[{-9.860908513594637, 1.4403016227420373`, 
          55.102482777289715`}], 
         Point3DBox[{
          8.090836665944735, -7.518773496020195, -16.729837772162664`}], 
         Point3DBox[{0.23392683203084275`, 7.161284597397952, 
          22.829822943478845`}], 
         Point3DBox[{3.5725907814740623`, 5.775099102822182, 
          15.00905671922806}], 
         Point3DBox[{
          6.831074944787588, -6.717569242817287, -19.565183897889703`}], 
         Point3DBox[{1.873405644153884, 4.032903598343822, 9.63101439648813}], 
         Point3DBox[{
          8.763546935956214, -6.958430643929958, -15.003531874013799`}], 
         Point3DBox[{-5.827271168302872, -2.5768012489271968`, 
          16.321641862839396`}], 
         Point3DBox[{
          6.588747266256554, -1.7082292607260818`, -3.994879322188675}], 
         Point3DBox[{-3.427087237127168, -3.2253613631891263`, 
          3.344248990092817}], 
         Point3DBox[{-4.455981362101781, -7.427682966109444, \
-7.586245445668695}], 
         Point3DBox[{-4.3774489686636215`, 8.312171797944607, 
          39.206905751272124`}], 
         Point3DBox[{-1.505718591213565, 6.3018531891365654`, 
          22.70457638984185}], 
         Point3DBox[{-7.022262403237434, 7.332863720636837, 52.424465804089}], 
         Point3DBox[{
          9.939630124540585, -8.317671987117272, -14.024261588891573`}], 
         Point3DBox[{
          7.494443250036731, -8.536392957260613, -21.42947577365701}], 
         Point3DBox[{8.606799406906212, 1.0472343655023408`, 
          7.239523731968577}], 
         Point3DBox[{
          1.68939826415372, -9.979381493390672, -30.999813885393074`}], 
         Point3DBox[{-1.1716813046770795`, 9.518823646529817, 
          32.5392307346978}], 
         Point3DBox[{
          4.033969429873842, -9.412348075147321, -29.620052674577455`}], 
         Point3DBox[{0.18824688601781858`, 9.647708620335358, 
          28.05726570919298}], 
         Point3DBox[{8.428346653358517, 0.2506370812088754, 
          4.2698147466524174`}], 
         Point3DBox[{5.9785021381166175`, 0.2358610392973013, 
          0.49280796390016945`}], 
         Point3DBox[{0.5588089861118846, 4.477788933894111, 
          13.242260026818181`}], 
         Point3DBox[{
          2.6156691351529986`, -2.7914304667269683`, -11.690947081029742`}], 
         Point3DBox[{-3.2987787720692268`, 3.8515352528414653`, 
          21.84282186421442}], 
         Point3DBox[{
          8.707753904861718, -8.685839486779873, -19.829464523625095`}], 
         Point3DBox[{9.891923977092965, 8.857497958871903, 
          37.356621010306526`}]}, {
         RGBColor[0, 0, 1], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{-17.131353009265872`, -0.79667594529176, 
          122.14497998552491`}], 
         Point3DBox[{5.749071618235078, 9.705325625469214, 
          28.184135389257122`}], 
         Point3DBox[{2.0123854357893123`, 8.558167223243544, 
          23.18041821671873}], 
         Point3DBox[{-16.42654979569987, -2.917563039600438, 
          106.67474956136765`}], 
         Point3DBox[{-15.764349487448243`, -18.576155049960022`, 
          51.288006733082234`}], 
         Point3DBox[{18.78404182045078, -11.749476145753363`, 
          35.61416266673248}], 
         Point3DBox[{-2.1380352114613643`, 18.125773458725675`, 
          61.632167681062604`}], 
         Point3DBox[{18.236614348648516`, 6.878314085298612, 
          83.66722173240177}], 
         Point3DBox[{11.757794968861617`, -1.938582914194086, 
          12.770522767000127`}], 
         Point3DBox[{
          15.38824682326181, -16.745744977887547`, -8.42473211827788}], 
         Point3DBox[{-2.8517898332893736`, 5.3538256190125395`, 
          24.23432969350361}], 
         Point3DBox[{5.019462921048685, 14.15663781106386, 
          40.12039219768421}], 
         Point3DBox[{-5.946818928995292, 16.82496842852393, 
          75.31575123481431}], 
         Point3DBox[{-1.5606811983436657`, 3.068322736016256, 
          12.207508928426268`}], 
         Point3DBox[{17.39043435966893, 8.542549335055881, 
          83.38525853515479}], 
         Point3DBox[{-13.79288931578963, -19.10270174963855, 
          28.265997075527515`}], 
         Point3DBox[{
          1.471779529375688, -17.360839232243023`, -54.58335400654618}], 
         Point3DBox[{-11.693307429132993`, -0.05398620113852104, 
          63.57551590739411}], 
         Point3DBox[{6.7793756764910995`, 19.88619303959196, 
          59.80578109450175}], 
         Point3DBox[{14.161961741710357`, 2.1123519919886036`, 
          39.826643574833724`}], 
         Point3DBox[{
          2.159221340073813, -7.275235287013338, -24.804682307561738`}], 
         Point3DBox[{-0.3208338352443292, -17.817359314976038`, \
-49.99793007175367}], 
         Point3DBox[{-12.396190888851052`, 7.448990202280527, 
          93.62909940458906}], 
         Point3DBox[{-12.55651038022414, -6.371013023085219, 
          52.5918706375843}], 
         Point3DBox[{
          13.807534697869869`, -17.032590039365544`, -19.38635951409229}], 
         Point3DBox[{6.883075399336562, 9.523437259576554, 
          31.97845054559673}], 
         Point3DBox[{
          13.807040378358508`, -11.966412551931604`, -7.192892149337375}], 
         Point3DBox[{19.93298299665301, -11.813052791079947`, 
          44.21495205840404}], 
         Point3DBox[{5.796872712988673, 14.42756410856694, 
          43.98682543296472}], 
         Point3DBox[{4.267537976512699, 16.209725299786, 
          46.452805330925415`}], 
         Point3DBox[{-2.1398090762346484`, 11.168121760863528`, 
          40.48931373261948}], 
         Point3DBox[{-14.218818499123067`, 7.355207368181311, 
          110.29791650307384`}], 
         Point3DBox[{15.832779306885058`, 1.6457240993565563`, 
          50.946865166214465`}], 
         Point3DBox[{11.763812638663879`, -4.216454668284875, 
          6.287380467513961}], 
         Point3DBox[{-13.378508960992967`, 16.367790763537982`, 
          131.6036468803004}], 
         Point3DBox[{10.666386181757417`, 7.151000955314302, 
          34.596854269339566`}], 
         Point3DBox[{-6.324158760768427, 7.299132329464186, 
          48.36868724188575}], 
         Point3DBox[{17.142283437781956`, 12.501090439303951`, 
          93.81007962514212}], 
         Point3DBox[{-14.96724160594259, -3.0679630198904206`, 
          87.3120680789829}], 
         Point3DBox[{10.86018202354397, 5.406157869605352, 
          31.88412502002243}], 
         Point3DBox[{-1.4656753929374489`, 0.4223630653535153, 
          6.681281014118396}], 
         Point3DBox[{16.53910925129594, 10.62841974463933, 
          81.57001496501104}], 
         Point3DBox[{13.290207213382374`, 12.253562962616755`, 
          65.24097229965977}], 
         Point3DBox[{-9.687347709351613, -14.189446392633755`, 
          6.960979021836408}], 
         Point3DBox[{-15.130121291062991`, 7.965385969908226, 
          125.77289752718744`}], 
         Point3DBox[{
          7.761395381048061, -1.2370224437211803`, -1.8526648137801178`}], 
         Point3DBox[{-8.143600809160418, 5.634863747084225, 
          52.976336203861095`}], 
         Point3DBox[{-5.11325410838171, -9.451872251393581, \
-11.003888782518665`}], 
         Point3DBox[{-14.89334350472133, 9.764271084100685, 
          125.92449443423982`}], 
         Point3DBox[{-14.508731400563981`, 4.641963424108951, 
          105.22587831196296`}]}}, {}, {}}, {}}}, Axes -> True, 
    AxesLabel -> {None, None, None}, 
    AxesOrigin -> {Automatic, Automatic, Automatic}, BoxRatios -> {1, 1, 0.4},
     DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {360., 338.3583782140986}, 
    Lighting -> {{"Ambient", 
       GrayLevel[1]}}, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"}, 
    PlotRange -> {{-29.999995714285713`, 
     29.999995714285713`}, {-29.999995714285713`, 
     29.999995714285713`}, {-81.87503100981927, 197.4054703204506}}, 
    PlotRangePadding -> 10, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.42769327351158737`, 
    ViewPoint -> {1.2503046585058804`, -2.8557276836195387`, 
     1.315886643266629}, 
    ViewVertical -> {-0.15596719206924473`, 0.356233038962521, 
     0.921288367966058}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"training\"", "\"validation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[448]=",ExpressionUUID->"8e3e69c3-79d6-4cee-8056-7b3f86899df9"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4d90153b-c0c1-456b-b76e-cfd9d7b814c7"],

Cell[CellGroupData[{

Cell["Activation Functions", "Section",ExpressionUUID->"b2eb7fe4-d75d-4930-9a0f-750d930bca0d"],

Cell["\<\
The choice of a good activation function is very important: it affect \
evaluation speed, extrapolation bias and most importantly the gradient \
computation for the whole network.\
\>", "Text",ExpressionUUID->"1389e95f-5857-44d4-8af1-87b9053c37fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{"Transpose", "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#2", "[", "x", "]"}], ",", 
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"#2", "[", "x", "]"}], ",", "x"}], "]"}]}], 
                  "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
                RowBox[{"Frame", "->", "True"}]}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<Logistic Sigmoid\>\"", ",", "\"\<Tanh\>\"", ",", 
               "\"\<SoftPlus\>\"", ",", "\"\<ReLU\>\"", ",", 
               "\"\<LeakyReLU\>\"", ",", "\"\<SELU\>\"", ",", "\"\<Swish\>\"",
                ",", "\"\<Mish\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"LogisticSigmoid", ",", "Tanh", ",", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"1", "+", 
                  RowBox[{"Exp", "[", "#", "]"}]}], "]"}], "&"}], ",", "Ramp",
                ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ramp", "[", "#", "]"}], "-", 
                 RowBox[{".1", 
                  RowBox[{"Ramp", "[", 
                   RowBox[{"-", "#"}], "]"}]}]}], "&"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1.7581", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Ramp", "[", 
                    RowBox[{"-", "#"}], "]"}]}], "]"}], "-", "1"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"Ramp", "[", "#", "]"}], "*", "1.0507"}]}], "&"}], 
               ",", 
               RowBox[{
                RowBox[{"#", "*", 
                 RowBox[{"LogisticSigmoid", "[", "#", "]"}]}], "&"}], ",", 
               RowBox[{
                RowBox[{"#", " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "+", 
                    RowBox[{"Exp", "[", "#", "]"}]}], "]"}], "]"}]}], "&"}]}],
               "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", "3", ",", 
         "3", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "\"\<Text\>\""}]}], "]"}], ",", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<function\>\"", ",", "\"\<derivative\>\""}], "}"}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",", 
     "Above"}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"ff365c63-7e49-4fa2-bb65-6f937071d060"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GridBox[{{"\"Logistic Sigmoid\"", "\"Tanh\"", "\"SoftPlus\""}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
+mcU/A9KKRti
              "]]}, Annotation[#, "Charting`Private`Tag$1820380#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
//4PCST83/3f/wBy2fDi
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820380#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {0., 0.9933071477189689}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$1820435#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
WAZrPQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820435#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {-0.9999092042255373, 0.9999994076419914}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$1820490#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwt13k01O/3APBJGDPGmJl3PoXKVooiSx8ldB9UJIqKUkqksqWF5BMf20e2
kGTJliUSCqlsJU9ZQ5TQQiVlUsz7bUmR0nd+5/z+uOc5r3PPc+5z7j3nOecq
OZ/YeUSERqO1CeP/zn8/W038+UPgpeVZb767+QPf/6+pvl8ErmX6Hz4U5A/b
Oe9/VM4Q+A77SeSbRH9Q1D/5+8QkgVdVZvTRsD88jk6QGOATWMd6p8TChQEg
oflyKX5K4KQPHR0+LQGQ6HNoW3A6gb/TphN3rg+E4nneebR1BLa1rSQ6CoJh
/a4i8VRdAudpij36eC8YmvI+uGprEbjb22KjWEMwDJhZazirEXiWX9XpMRAM
f8VpVNTLE7htZcuhFtkQCJUbbg6nEfg5K/Rrc1wI7NU9MMJq5eGNTryKFaGh
IHbETEf2AA8P9poufRgfBl0HtfeM2PNw1+ba6onsMLi6Vz6g1k7otPFp3dth
oGdJNTpZ87CNmWZU//MwOKqbYl9kysMTQT9pzcR5aJn3OdhAnYfNQncPMdLO
Q8zV8M4DP7h4b1dJVWxZOBCvGj1zL3FxmVdFy0t6FOBVOZFhcVy8+pC1mIp8
FHgGBeQdvcDFhayH4wGaUdCkqtuvfp6L/WpLxQ7YRsG5M9nb7vhx8ZTLS8vO
a1EwyPNXb3Dk4pSHAxLhptFQbqU1PKTBxRxT470X4i7Azvq0w2qtHLw43KY9
0jYOlnV/etfcxMGjM+tye7zi4PsnzX1H6zk4eqEjWhcZB6ni9dbXHnDwMZXc
hfr342Bg64jRklIOPjMjLaqvfBGOPzNYxE3kYEfl17Hrv12EyLf97dMHOHgo
Z85pT3c8+FNGnvEfpbFE2qbU8uIEyHBaN4zeSuP1cyvuatQkwIMXWi7jvdJ4
l1Rk952WBJirVHHY2SqNvaPnb/kwlAChwQzLBbel8dIlvzoeKV6GaG7PqiuB
0vierOe17CuXIU3XcyRLVhq7OS5sk76UCFVn09xLd7DxrT5DSLueDMoup/Jf
mbNxyJtup0vVyRBrbT4wz4SNV/5kMq60J4Oz2nfb3WvZuF2rUqZ7Ihkk+2yM
ZxaxMcUqCZBAKXBwI2OR6aAUZp7vMT7+NgXmi/k19vpI4aYh8mTgslTYnmCr
OJfKwnGVDs5p/HQ4pyO91ewyC6e8cqp2/50O17taTsXHsLCOwTZtqwUZMMcz
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
dGzBW/2Egv8BrlEbZQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820490#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {0., 5.006715145773374}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]}, {
      "\"ReLU\"", "\"LeakyReLU\"", "\"SELU\""}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8IHGKDgWbXY19t/EHw/gfvft/9E8BUs
C/7mf0bwD3VN4njwDMHn0Lsud+Asgj+lJMG7YTaCv5qxeAmDOYLPmupuJBkr
BOcL3zias2iiIJwfdHhWsuYpATi/+r1tzoTH/HD+jvJZWev9+RDunRSq8G8m
D5zvPnevn8cbLjh/2fHKa8XRnHB+XMsU0fMr2OH8ugTmddzCbHA+g678fudW
Fjj/VvfM9tVXmeB8Ga6MlV+cGOH8bFMt1tsy//fD+Mnm91YcPvwbzteqsPqf
t+QHnL/wbvCRSsevcP7zRlEbd4lPcP6uqRquL8LewvkGL29+0Z/7DM532XWb
82/YAzi/YOX6H4LClxHq+fKanR5cgvM/FunwFa9F8ItsVipfcUfwS88v8ptW
cxHO//xK29P0zHk4n635xwK3opNwfrtP6bblPAg+h9in0xzLT8D5XCtffzt1
+zicz3/+no+/6zE4X0L66I9wicNwflia8sJLNTvh/K7C4o5JW3fA+XtrDucH
vdsO56tMTra7FL8Nzv+0f/Hti06b4Xw5Yw+dRYKr4PxWzxe/FJtXwPlv4jtO
LvyyDBHePSfSFl5fDOevPTPRydF6NpzfcezXhQj5LDgfALA94AQ=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQ3XHs14UI+Sx7GB1sfGNPm2MLnN52M7ypvboLTvMe
eK18JGoCnC5My355ZMo0OM3AsPV/8r7lcPr4mZtdxsE74HRGxa3j0do74TSH
ym2WFuZdcNqr+k7dlc274fQZzftFpSL74XSGc9Ha268OwemcBeVTZdechNNW
ugc3BUy/DKeZykTvpEg+gNPsPAGNSe+ewenmB9ecixa/hdMbZrcF1H36CKfz
F6UIPAn7CqfjsmbJtjf+gNOdgWWWxnN+w2kWkanP6n/9g9PXT7d+aOFndIDR
odVJZrMOM8HpHO7XSueiWOC0/Opj09hescLp6h3Owfyz2eF0wbKcbWb6nHCa
h8k8Se8pF5x2zQ2ZqjWZB05L7JTNd1Xhg9OTijomGlznh9NBbf66c7cJwGmt
6JbQJbWCcPraM85Fk0OF4PS5pKeOQvLCcPohy/IfU5UQ9JdlGesl1RC05OvX
Moq6CDql+NN3fWsE/av5/1rfcASttlRSqrMfQVu6377AMxlB+7yc0z5hGoIu
1FX4On0ugt6zVe3CstUIOuiYcduR4wg6NeOrjcdpBF3Btf3z6XMIeq6fVeLl
qwj6xTUHm0ePEfSvCqbPqc8RNK/0kZUvXyFoo3h38Y8fEbQrI+e5kq8IOmLx
qZYfPxB0lmuPdc0fBF373PfT//8IGgDVSKEJ
              "]]}, Annotation[#, "Charting`Private`Tag$1820555#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQXfvc99P//8IHGKDgWbXY19t/EHw/gfvft/9E8BUs
C/7mf0bwD3VN4njwDMHn0Lsud+Asgj+lJMG7YTaCv5qxeAmDOYLPmupuJBkr
BOcL3zias2iiIJwfdHhWsuYpATi/+r1tzoTH/HD+jvJZWev9+RDunRSq8G8m
D5zvPnevn8cbLjh/2fHKa8XRnHB+XMsU0fMr2OH8ugTmddzCbHA+g678fudW
Fjj/VvfM9tVXmeB8Ga6MlV+cGOH8bFMt1tsy//fD+Mnm91YcPvwbzteqsPqf
t+QHnL/wbvCRSsevcP7zRlEbd4lPcP6uqRquL8LewvkGL29+0Z/7DM532XWb
82/YAzi/YOX6H4LClxHq+fKanR5cgvM/FunwFa9F8ItsVipfcUfwS88v8ptW
cxHO//xK29P0zHk4n635xwK3opNwfrtP6bblPAg+h9in0xzLT8D5XCtffzt1
+zicz3/+no+/6zE4X0L66I9wicNwflia8sJLNTvh/K7C4o5JW3fA+XtrDucH
vdsO56tMTra7FL8Nzv+0f/Hti06b4Xw5Yw+dRYKr4PxWzxe/FJtXwPlv4jtO
LvyyDBHePSfSFl5fDOevPTPRydF6Npxf/fPifQe5GXC+p5pQrQPjVDj/9H+V
/Pq+Xjg/I3LpyrqQdjifZbPqk1qpRjjfQdLH9teBUji/49ivCxHyWXA+AGzx
97o=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ3XHs14UI+Sx7BjD4YH9PcuM7bv4aOD/Y+MaeNscW
OJ/3wGvlI1ET4PzCtOyXR6ZMg/PnRJpaJbcshPMZGLb+T963HM5PUYs6aiS5
Cc4/fuZml3HwDjg/Z0H5VNk1J+F8K92DmwKmX4bzmcpE76RIPoDz2XkCGpPe
PYPzmx9ccy5a/BbO3zC7LaDu00c4P39RisCTsK9wflzWLNn2xh9wfmdgmaXx
nN9wPovI1Gf1v/7B+ddPt35o4Wd0gPFDq5PMZh1mgvNzuF8rnYtigfPlVx+b
xvaKFc6v3uEczD+bHc4vWJazzUyfE87nYTJP0nvKBee75oZM1ZrMA+dL7JTN
d1Xhg/MnFXVMNLjOD+cHtfnrzt0mAOdrRbeELqkVhPOvPeNcNDlUCM4/l/TU
UUheGM5XWyop1dmP4Nc+9/30/z+CDwDnJaSy
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820555#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {0., 4.9999997959183675`}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwBsQNO/CFib1JlAgAAADoAAAACAAAAfedN8v//E8AvPxbq///fv+Z7FvXb
/BPAcPkjiPn6379OEN/3t/kTwLCzMSbz9d+/IDlw/W/zE8A0KE1i5uvfv8KK
kgjg5hPANxGE2szX378ILtcewM0TwEDj8cqZr9+/lHRgS4CbE8BUh82rM1/f
v6sBc6QANxPAeM+EbWe+3r8FZUcyGV0SwNXUC+rBYd2/E9jFbKKREcAfwG8U
Nxzcv1LDmmMpyhDAt2vEBQ/d2r977z1skOMPwGOMMfDZgtm/uHeaaq9PDsD6
knuIvz/Yv06SVSD+mQzApQ7eGZjh1r9Hnb1OSOwKwKBKMXLTidW/psd51nNb
CcCFbGF4KUnUv16ElBXPqAfAfwOqd3Lt0r9+YAOuCxMGwGWAzyTWqNG/AC0f
v0OFBMCaveWYnGrQv9qLmYer1QLAxN8oDKwizr8cCmip9EIBwC0QQEJUnsu/
azUqBdsc/7+8Kohq4uPIv2M33qjDw/u/6cWxIDY2xr8qeDr/bqT4v+8slTK/
tsO/od1TxHlB9b8bfqk2LgHBv+eBFTxHGPK/PzbvLKXzvL+6lShF6Fbtv5VE
7dC5eLe/MOnZ9C+d5r8nVK6QWReyv0S62wn9VuC/1PbFD8gkqr9wqa/4ERPT
v+fb5Y3phJ6/MA5ug0Lg0r8afRafnTOev/FyLA5zrdK/Tx5HsFHinb9yPKkj
1EfSv7dgqNK5P52/dc+iTpZ80b+I5WoXivqbv/PqK0k1zM+/Ke/voCpwmb8G
g/igRnLJv2wC+rNrW5S/h0x1tqcMyb+goyrFHwqUvwgW8ssIp8i/1ERb1tO4
k78Kqev2ytvHvzuHvPg7FpO/D8/eTE9Fxr8MDH89DNGRvxgbxfhXGMO/WisI
jlmNjr9WZiOh0ny5v99RHLTbY4S/inFziJK1uL9v9PU5dcSDv718w29S7re/
/pbPvw4lg78kk2M+0l+2vx3cgstB5oG/8r+j29FCs7+3zNLFT9F+vx4zSCyi
Eaq/svVsI+jadL+FSej6IYOov9E6IC8bnHO/7F+IyaH0pr/wf9M6Tl1yv7qM
yGah16O/XRR0pGi/b7+tzJFCQTubv1g9DgIByWW/e/nR30AemL+Wx3QZZ0tj
v0kmEn1AAZW/1FHbMM3NYL/L/yRvf46Nv6PMUL8ypVe/aFmlqX5Uh78g4R3u
/qlSvwSzJeR9GoG/OuvVOZZdS79AGUw9+sB1vzMUcJcuZ0G/iMb60Fgfar86
BS+n4OU0v4sJ+ko=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQ3XHs14UI+Sx7GB1sfGNPm2MLnN52M7ypvboLTvMe
eK18JGoCnC5My355ZMo0OM3AsPV/8r7lcPr4mZtdxsE74HRGxa3j0do74TSH
ym2WFuZdcNqr+k7dlc274fQZzftFpSL74XSGc9Ha268OwemcBeVTZdechNNW
ugc3BUy/DKeZykTvpEg+gNPsPAGNSe+ewenmB9ecixa/hdMbZrcF1H36CKfz
F6UIPAn7CqfjsmbJtjf+gNOdgWWWxnN+w2kWkanP6n/9g9PXT7d+aOFndIDR
odVJZrMOM8HpHO7XSueiWOC0/Opj09hescLp6h3Owfyz2eF0wbKcbWb6nHCa
h8k8Se8pF5x2zQ2ZqjWZB05L7JTNd1Xhg9OTijomGlznh9NBbf66c7cJwGmt
6JbQJbWCcPraM85Fk0OF4PS5pKeOQvLCcPohy/IfU5UQ9JdlGesl1RC05OvX
Moq6CDql+NN3fWsE/av5/1rfcASttlRSqrMfQVu6377AMxlB+7yc0z5hGoIu
1FX4On0ugt6zVe3CstUIOuiYcduR4wg6NeOrjcdpBF3Btf3z6XMIeq6fVeLl
qwj6xTUHm0ePEfSvCqbPqc8RNK/0kZUvXyFoo3h38Y8fEbQrI+e5kq8IOmLx
qZYfPxB0lmuPdc0fBF373PfT//8IGgDVSKEJ
              "]]}, Annotation[#, "Charting`Private`Tag$1820631#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQXfvc99P//8IHZs0EgZ32U0oSvBtmI/irGYuXMJgj
+Kyp7kaSsUJwvvCNozmLJgrC+UGHZyVrnhKA86vf2+ZMeMwP5+8on5W13p8P
zvebFKrwbyYPnO8+d6+fxxsuOH/Z8cprxdGccH5cyxTR8yvY4fy6BOZ13MJs
cD6Drvx+51YWOP9W98z21VeZ4HwZroyVX5wY4fxsUy3W2zL/98P4yeb3Vhw+
/BvO16qw+p+35Aecv/Bu8JFKx69w/vNGURt3iU9w/q6pGq4vwt7C+QYvb37R
n/sMznfZdZvzb9gDOL9g5fofgsKX4Xy25h8L3IpOwvlhacoLL9XshPPljD10
FgmugvM7jv26ECGfBecDAJeO+u8=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ3XHs14UI+Sx7BjD4YH9PcuM7bv4aOD/Y+MaeNscW
OJ/3wGvlI1ET4PzCtOyXR6ZMg/PnRJpaJbcshPMZGLb+T963HM5PUYs6aiS5
Cc4/fuZml3HwDjg/Z0H5VNk1J+F8K92DmwKmX4bzmcpE76RIPoDz2XkCGpPe
PYPzmx9ccy5a/BbO3zC7LaDu00c4P39RisCTsK9wflzWLNn2xh9wfmdgmaXx
nN9wPovI1Gf1v/7B+ddPt35o4Wd0gPFDq5PMZh1mgvNzuF8rnYtigfPlVx+b
xvaKFc6v3uEczD+bHc4vWJazzUyfE87nYTJP0nvKBee75oZM1ZrMA+dL7JTN
d1Xhg/MnFXVMNLjOD+cHtfnrzt0mAOdrRbeELqkVhPOvPeNcNDlUCM4/l/TU
UUheGM5XWyop1dmP4Nc+9/30/z+CDwDnJaSy
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820631#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {-0.4999999795918368, 4.9999997959183675`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]], 
             LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAiMb60Fgfaj8wjs46ZXJrP1Mz2LyG
QYQ/QzOLuG5IhT9xZmvpxJSWPy5G1avauZc/AAC1/2O+pz+kT3qlkPKoP8fM
2YozU7g/XtRMouuOuT9oeNrHWyu5P+QhaGsJcro/CCTbBIQDuj9ob4M0J1W7
P0p73H7Us7s/cwq6xmIbvT/MKd9ydRS/P0Ogk/XsU8A/aENyrdvqwj9W1gAa
ZODDP2ygd5UdrMk/fULbYlL5yj86LcGyUJfTP2UNSHqXldQ/AnYV3GQZ4D/K
SalBWergPwcMUIFi7uY/wSJBZwMY6D+D4NZDcqPtP6Vnpj8hJO8/sJuGUH7y
8T+9Qdspb9vyP2+iZBDkVvU/l5psBNxr9j9eapodh4H4P+pe03yYv/k/iVF2
OTOc+z8z2aDOjgL9PwQUleZ/+v4/Ns97uElGAEDXy4XwhA8BQI7nkdjz7AFA
VXtiNprDAkBgpewgJbcDQGwL6yLOWgRA7hgyOP5iBUAfq8aWBuoFQHXnKjx0
BgdAe7hDUw+bB0B1W2hocc0IQHCmbLY2LwlAM4WQYxZ2CkAMAjdiLuUKQGdU
/YZCQgxARW1UlSqTDECWfh2XCwYOQBi5HW9FJA5Agl4odnyrD0CScoiRMNcP
QPPxuz46uhBAUoZPLZ22EECDD9kpio8RQCpbhFWkfRFAkNpPi6hgEkDW5gmi
k1USQFr46ICKQxNAzmLlQRIfE0ABcfddQBcUQOEEp/iVIhNAZRxKsvEaFED0
pmivGSYTQMrHnAajHhRAGevrHCEtE0CSHkKvBSYUQGRz8vcvOxNAIsyMAMs0
FED6g/+tTVcTQEMnIqNVUhRAJqUZGomPE0CF3Uzoao0UQDlH29AMkxNA6oif
PByRFEBM6ZyHkJYTQE408pDNlBRAcS0g9ZedE0AWi5c5MJwUQLy1JtCmqxNA
pjjiivWqFEBSxjOGxMcTQMeTdy2AyBRAZWj1PEjLE0AsP8qBMcwUQHgKt/PL
zhNAkOoc1uLPFECdTjph09UTQFhBwn5F1xRA6NZAPOLjE0Dp7gzQCuYUQPp4
AvNl5xNATJpfJLzpFEANG8Sp6eoTQLBFsnht7RRAMl9HF/HxE0B4nFch0PQU
QEUBCc509RNA3EeqdYH4FEBYo8qE+PgTQEHz/Mky/BRAakWMO3z8E0Cknk8e
5P8UQH3nTfL//xNACUqicpUDFUCAQY45
              "]]}, Annotation[#, "Charting`Private`Tag$1820707#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
OoWHyQRKK6Pn4kEXZDn72VSHbwv+D4zcCSQ=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ3XHs14UI+Sz7J83zzq46/8H+nuTGd9z8NXB+sPGN
PW2OLXA+74HXykeiJsD5hWnZL49MmQbnz4k0tUpuWQjnMzBs/Z+8bzmcn6IW
ddRIchOcf/zMzS7j4B1wfs6C8qmya07C+Va6BzcFTL8M5zOVid5JkXwA57Pz
BDQmvXsG5zc/uOZctPgtnL9hdltA3aePcH7+ohSBJ2Ff4fy4rFmy7Y0/4PzO
wDJL4zm/4XwWkanP6n/9g/Ovn2790MLP6ADjh1Ynmc06zATn53C/VjoXxQLn
y68+No3tFSucX73DOZh/NjucX7AsZ5uZPiecz8NknqT3lAvOd80Nmao1mQfO
l9gpm++qwgfnTyrqmGhwnR/OD2rz1527TQDO14puCV1SKwjnX3vGuWhyqBCc
fy7pqaOQvDCcr7ZUUqqzH8Gvfe776f9/BB8AzB87Ag==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820707#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {-1.7462540129633597`, 5.253499785571429}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]}, {
      "\"Swish\"", "\"Mish\"", ""}, {
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
X+52+aEvTvvUYy5faDSP9n9Setuv
              "]]}, Annotation[#, "Charting`Private`Tag$1820762#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
6T1XYJDqOmYccWwDlod0twqDXPa9z7cd12f9aNHu49oMsnNgxdgZbJ39FucO
WDBIA2MNtau4nqu+/3p9eyCD9B99PeKGz4O1mR9jePoZpNcbgYNC/+H3SWKx
KzkMckxneTHE501QVEZL6BSDfGvbGnERe9wzdN0qBg9ZWs7Jqgzggsp9ljkb
pHnIummXaC98XrkP//5gbMlDvpUwE6q4xQVftjImgt7xkLI/Wm/Q8fnoydp1
aHk8L7nlyHldw0v4fWxqOHZPeMmMopuFvy7+q4c2oXnPeUnnvc69XtjWRu6f
DrzkJef5TD3zL3DBjoY0cP8LL3nlXNOV1ee5YHps6SZxCh/pNWqq1Yb7A/fN
P+iyJ/lIiZEBdS0HfL6mni/S2MxPKuzyMrSxwP0ATdNB5bcAufTyroEC3C/t
vmARrRQlSIav2irEK4LrDVvq0m65ZeSuRp4mOdzPRbreidjSuJy0OHjO9lQz
BxwM3K+cWCREXtQu7IvG/aXSMf/DT71XkPOr7m44ms4BDT38yVGHhclzDVOV
wZEcUO3wW194LZPc/37LZADud3/Rn09Hr2OS0WDtN3Xs8dQzueLyTHJ0Oq7+
tw8HiA8MSMooM0nOxIpjhthObqNTm7WZ5Dv3X5b8uH+eub2YbWrFJEPaR/ge
3OAA+Wfiq++GMcnh5/JLvl3lAC2jnzWCUUxS/sZWIhB7X1/Cf+ExTJLx7bys
NvZlZemJB4lM8omwYcuzKxzwulC+JjWTSXqFaqp4u+H5fdwWWFbOxOfLA+Nt
lzng5JkJHePPTFJyrXBpvwsHXBMoHvtczSR/XpuzTsZONNth/72eSZ45Pywg
jP2ngdTp7GKSy1716Y/h310z12hjJ3uZ5KuN/txM7KUSZel9/UzScEGxwglb
1c5oFZfLJBf/OvU3XOCA3VT+6isTOD7POtTDsY+kVPpPTzNJgqWWZoLtvDtY
22uOSbbbWOgT2P//f5NUKValvjnPAf8DlDG0Mg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820762#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {-0.278464499379054, 3.160022924243747}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwtl3k0Ff3/wO3Zsk2eUEKSCCkVHnKn7IqI8JAlexKyRNZEkorsEWWrbIUi
RL1vyB7unbKkLOHK7i724jffc35/zHmd1zlzZj6f9/J5z0g5+VxwZWFiYvqD
X/9j+JQxbXsbIe4062ueUs4DSug/y0N/ECILyT6qVCMPTARGVmvWEeKhNbY7
gXp5IKnu+9eHjhBrznp5772UB43xyZyjFIRY3HxM+t3dPOBU6t9H/IIQO08n
T+wZzYPUAMezt54gxLiHEpGtaflQyuxfyKSKEAsOdFtaCxcCu6v+MVE7IWLn
pFD/t9qXgAx89spPEiTmtheKyL0shQtNWc5yHQJE/YeiximcFRC6eMrr0Tg/
0XwurfJOyxuoDcryLD/PR0yaEsk3r6wGk+SLkluZvMS9j7jrNvXqQD/ng4nB
HDdRWCzijh36AV603uzzt+Ui7pV4duZuBRHsY1KFe4p2EMObZbR5DjVBhCPr
ax6Eg/g0sU4vv/gzMClKgPYdNiJzYUBRn0EbfL+febf0GwtRwE9iXVO7E/Zy
exQzzjAT9cScTeV2d8PVE/LsQ3u3QetsUGVwfC/4sde9vMG/DfWFef/JPuqF
kG/6RkIs27CdzbaBpfVCfKBrouHUFhT8Wd0hm9cLJdW5orWVW6CmYZb+tqYX
pk/sVkrT2wIjnSQTx4lecD/JZnXe9y+cUtWkfdUggbPqcFFT0yaYD3xo9h8j
gVuRqqVezSbcKJ6t4qeQwFM0ibW9ZBMS7gQdLJohge+mtn130ibMBW74dNNJ
EAbFyKDDJvidM+xcZCdDqn5gxMLmBszT32xHyJGhxYrXQvT4BkgqWX98fI0M
7W2uzNmyG7A++WC++joZutTh9b49GyCbF5rfHUgG8h4/rgMsG7DHXCyMFk6G
kZH+j0q960COq2VhTSDDmnuBnI7XOmhLnJ0ivCKDfPC/296Fa6D4VLBjdooM
xJ8m8uPpa3Cj1lerapYMltrOF63urUGy1jupG4tkuM33oJTgvQY1Gs7slBUy
DBb+tBJQWwOhD8vUAHYM4ki3Kio7VyHDN7RRRwqDfappQzIfV8H5ukTY0wMY
VGUXc2RVrML2zYSxJVkMRt3Jl26nrUJnRVJ4pBIGqlvSXOYOqyDVfuLxGQ0M
KPKtlxm0Fbhk5C1z0RyDsEdDDzwmV2BHRFO+iiUGQiuLNT/6V4BZ8uAW138Y
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
jRM=
              "]]}, Annotation[#, "Charting`Private`Tag$1820817#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$1820817#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-5, 5}, {-0.30884340577463726`, 4.999551873284462}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], ""}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaseStyle -> "Text"], "Grid"], 
   TemplateBox[{"\"function\"", "\"derivative\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
          GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
      Background -> Automatic, StripOnInput -> False]& ), 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             
             TemplateBox[<|
              "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
              "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
              "RGBColorSwatchTemplate"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), Editable -> 
    True]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[217]=",ExpressionUUID->"d9e1de8c-ff00-4e5b-8de1-1eb01f572f64"]
}, {2}]],

Cell["Let\[CloseCurlyQuote]s try a different activation for the last \
problem.", "Text",ExpressionUUID->"8151a44d-3282-46e9-b172-52551b302625"],

Cell[CellGroupData[{

Cell[TextData[{
 "You can replace layers based on a pattern using ",
 StyleBox["NetReplace", "Input"]
}], "Item",ExpressionUUID->"47db3110-5bd8-4a15-9062-89712232251e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network2", "=", 
  RowBox[{"NetReplace", "[", "\[IndentingNewLine]", 
   RowBox[{"network", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}], "->", 
     RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[451]:=",ExpressionUUID->"d9bbd5bd-986c-4f09-82da-ccf52ad9ee8f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Summation", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SummationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[451]=",ExpressionUUID->"fbb20144-cb51-4fa1-a3d0-42ef51aaa236"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfitTraining2", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network2", ",", 
    RowBox[{"Rule", "@@@", "training"}], ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Rule", "@@@", "validation"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[452]:=",ExpressionUUID->"8fd2400c-6217-4fa1-a1d7-a8fc477a8fe4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "20000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "10000"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["33s"], 
                  TextCell["33s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "39368"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "100"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "50"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1280000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.7\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], ShowStringCharacters -> 
                    False], 0.46954049877965076`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"2.13\"", "\[Times]", 
                    SuperscriptBox["10", "\"2\""]}], ShowStringCharacters -> 
                    False], 212.5224145421386, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
gxhR/6yqAXtDebVE+Xb0P3owviQ=
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1: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
                    "]]}, {}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  GridLines->{{2000., 4000., 6000., 8000., 10000.}, {{-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}, {3., 
                    GrayLevel[0.3001]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  PlotRange->{{0, 10000.25}, {-0.543, 3.8430000000000004`}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{-2, -2}, {2000., 3.8430000000000004`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{-2, -2}, {4000., 3.8430000000000004`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    Offset[{-2, -2}, {6000., 3.8430000000000004`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{-2, -2}, {8000., 3.8430000000000004`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., 3.8430000000000004`}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 3.}], 
                    ImageScaled[{0, 0.}]]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> 
         ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellLabel->
  "Out[452]=",ExpressionUUID->"667bb644-bb43-46a2-95ae-fd1eaaa7bbca"]
}, Open  ]]
}, Open  ]],

Cell["The new activation gives a smaller validation loss.", "Text",ExpressionUUID->"b47091c9-2cc0-471a-af68-150003acc97e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfitTraining2", "[", "\"\<ValidationLoss\>\"", 
  "]"}]], "Input",
 CellLabel->
  "In[453]:=",ExpressionUUID->"1f56d6f5-332c-440c-8b2c-650e0dec1421"],

Cell[BoxData["212.5224145421386`"], "Output",
 CellLabel->
  "Out[453]=",ExpressionUUID->"eafd4a2f-fb46-4989-9827-e6d58844cbc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonlinearfit2", "=", 
  RowBox[{
  "nonlinearfitTraining2", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[454]:=",ExpressionUUID->"c44c0d87-9e2b-4ed3-bb2f-71d46f612661"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Summation", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Swish\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SummationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[454]=",ExpressionUUID->"4ba0ae46-d25a-42c3-9a46-10634707afb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"nonlinearfit2", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
     RowBox[{"Lighting", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"1.5", 
       RowBox[{"MinMax", "@", 
        RowBox[{"validation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Append", "@@@", "training"}], ",", 
       RowBox[{"Append", "@@@", "validation"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<training\>\"", ",", "\"\<validation\>\""}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "->", "10"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[455]:=",ExpressionUUID->"e6d1284a-6262-4e72-8044-a56f8017237b"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{
      GraphicsComplex3DBox[CompressedData["
1:eJydvXd4VEX7Pr6hCVIMvcMGCIQeIBUCOek92c2mJySbBkEE4ysgYFsVkaoR
EVEpURBRUIMgReBlxUYTI4oCiq6KiigQQAUUzG/P2TP33Dl8cr3X9+cf5srN
ZM4zz8w887R5xqfk7vTyJiaTaUJrk6mp+2dafbed9fXjneKnG6qOj7cofad1
9v96eyjjpqvPRygXT7XfuH1aIOOu0nv8lX3x7czLBoxi3PzOci9nH62fwQ36
T+8R5Pyv1t6HcWXlZ9HOvRrevsF3y35K1n66PxXG/ST9nOp8z9NeEXjwIu9H
TbMznE5P/wq1dzx1n81p9tDDuPLj6nS9/agG+Lv1VmedZ7yMO99/MEnvJ5Rx
8831iqC7QfspsUMwHsFXdTQ7QjLBZ8Kr5z6SBD4T7nKUjwWfCXeunWlWBJ8Z
P7tpIPhMuN32xgTwmftvPT0efCZcebQ6EXzm/nt+ZAWfCXc03WEBnwk3rzuc
Bj7zeFc8nww+Mz3dqyLAZ/6ua+Nw8Jnx3KK/wgWfBf9UvHZGNtox7vVROvhM
eLXX9FjwmXDX8ajR4DPhyq8bTuwTfOb+t10PAJ+5n/ZtosFnwu3jE2PBZ6bn
aNtU8Jnb//dyEvjM3819IhF85n7ab4gEnwk3D13oDz7zuHa1PrZP8Jm/O2uo
P9a34JP63bsu5YDPhCu2n2z4e8IdNV0s4DPh5v4pEeAz97/5+/6K4DP3Hz9k
MPjM/dx9cAL4THh1518jwGfuv+kL8eAz0/lMVSz4zP0//E8k+Mx4UtFo8Jnp
/M/i+n2Cz/zd/1wfJvjJuH2vKRx8FvxQR7P0pYngM+Mv+meDz4S7Ptkg+Ux4
9dYhCeAz4ebnWoSAz4TbR45zhQs+E+74ol0A+Mztt/YaBz4zna5eUeAzfzcr
JgJ8ZnycfwD4zPh/r7cFnwl3+qwerAg+Mx8OV0IuM6781DQOfBbjVscVN7AY
fCbcvPREPvhMuOud8kzwmfHy0yn4HuHVN9dHgM+Emw7OGqwIPjP+WNog8Jn7
Kdg8Gnxm+jd4jQOfCbe/8c4Y8JnpfOJCV/CZ+zmWO1ARfObvPnpsHPjM/OmX
EgM+83dbP5QMPovxqe17zi0FnwmvvpJkB58Jdw3vnwc+cz/jN9jAZ8JNzwUl
gg7CnS8NDAWfuf9t0a0VwWfGwyJ8wWfCFceLI8Fnpv9Zc1fwmftp3s5HEXxm
+svahYDPTP+esijwmek/W50IPnP7u89aWP/QSFf/f/3rMj4vBW5+4HQxy3fg
ifsmsjwSePVtO7Mb7GfRftCjVp5vtN+4JaYBfTpun9nVX6HfxU/H6083UwSf
CXdFXvICn/nvQod6K4LPjC+dOwZ85u8OiYgAn7n9NVs8+NxgXGFp4DPTs7m1
DXwmeu1Nek4Cnwk3T21dCj5z+551ReAz4c6Z7+eCz9zP/Y/YwGfGZzybCD4T
Xv3U/WGgm3Bl9Iqh4DPhDt8XBimCz9x/xIkx4DPT7907Anzm794YkAA+83e/
yLGAzzzPs1plgM/cPmp7NvjM85/qPRl8ZvzcX5LPhCvBJ+zgM+HOGTfywWfC
7VO+ygKfCTev2WMBn7mfC8HR4DO3/3bFWIyH8OqM54LxO7cf1U8Bnxk3/xoH
PvN304angM9M/+Q708Fn/u5dPbPAZ+bb9Y9zwWfaT44v6yWfCVd2p5WDz4Sb
33u7BHzmfo71sIPP3E9IdR74TLgz9XYb+Ey4ffpdieAz4S7f1Cjwmdtv9Y3E
OLn9qgUx+J3w6oGfJYHP3L7oVyv4zO0rN2aAzzwur8E54DOP6/sv8w3reZRS
8+6ZVdc3VxjWsya3XE0nTjasZw13mPeXGdbzKM866VxiWM+e9t4dCgzr2SMX
nx6ZZVjPGu5cYLMY1rOnn9VFCYb17OnnybviDetZw6v3+cUb1rOGK5GVFsN6
9vRffN5mWM+e/uMWZRvWswcf7Z9vWM+e/kt/mAg+i/6MfDbigs90Prg+OTgJ
fGb8ycOSz4Tb2/sWgc98zmRZc8Fnwp1n7rOBz4Sbj96XBj7zd02PpILP3P5q
ZQr4zP3fOTgdfCHckVufid+5ffGRXPCZcKVnKvjZoP2a43aD3Ai9hc9GvKHc
0M5b87B1kw1yw3MOf/1HqUFuaLjj/X7FBrnhaf/qfQUGueFp36Q6yyA3PPgT
B9INckPDqz9PTDfIDQ1Xju6zGuSG57vBTW0GueHBN0XkGuSGhrue/y7fIDc8
/StPFRnkhofOrx4tBp/Fvxv5bMQN/jqt/5dzK4z+Oo3Oa4vKFYO/TpuX41tK
FIO/TqMn7qUixeCv0/rfezAXfCbc2eF4pmLw12n7ZW9GJvjM9Dh3Z4DPhFdn
nMsAnxl/54LkM9PTv7cdfORxHf4G67bBd+3rShSL9vtwJTio64xpX49zqvhv
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
S+2dzR+Nx3cJr/6wIgXfpX4c/8mPBT7Gwz9tvtaOjkY/hCt138ehPc2jo8nt
kU4xHy00OaDl5bi+ah2M9owHfhSO/gmvHtYtEu1pPVRvmzEOeLImD3pr/fz9
VxD6Idy8Jz0E7Wn9VO+4KOJVnbm9q/CTYPTTw/NT48P65wcDF/2p8/J+pyaK
6Mcj9wZp62qYn4L1SuvKfuqZRKfol3DT+0uTgXPe7Iw3UsBPam/uFJSMcfG6
vft+C3DuZ5WXFfQzPevLbOAD4wsfkjj34zMiA/uL2itFc604hwh3NYm1OsX+
Yj026AUr9EDWP8Nv2sA32i+OL/rI9Um465v9yeAXr+f9H2ejH1pXzs6/jACf
CTcXFMq8E1oP1asGh+CcZj+P1+wufB4LueoMnDYQ9gL7kXw2BDbw44v8n2GD
pV+e+49Kimzgrxdyu+5YNNYfrUNTXIG3Qd/w+D1+nZcNnPMltk3K1enprQh5
o/Z/tG005u8Dz0+c72IdClz97sfvZWLdb/bIPU0ezngpHTi1d1nd8yt+J7z6
jd+LoVdw/ue9TWQeMuvb/iEWnEOcD7MzfCDmhfOFrA9LPw/ne/wRFGqIS2p8
cw0OScJ8Md+290w0xIs9fqdDFRaDv0vPx9hlQ7+cP9BqRxz+nnD7lkPIA2wQ
33n82wLoPRzHjzdLnOPOr7QoAh2sjzWrkvOy3LOPND7secqKfqm965epOUrD
+JcnbrutRZZhvJ74bHbbfNDBetqN1RNxjtK8OyNeLIR+Rnacc9BRG3D2h7c5
KOOerJ9fsUWBHs7/eXGRBee7OLdVOge2seB38e9q/5+8l6gI+Ubnu/POK1no
l/XSV8JkXJvxiOW5+Hsar7L/XCH2Ecen3g1MgXzmeNDe8zbIW75/8V7fdKfQ
M+hcdphDpX+b9caDUf6Qn6wXvfa0uYF/U8iZmIAT4UL+k5xxnDzdAu3ZLvtu
gj/kCLV3zhsYBv4SXp2ZHQM6Ob/u3OdjoJ+J76tULbk5HHo57YvqboOLDfvL
s687rhmHv6d5t58sGQd5wvZOl8/KIQ8Fv9V+crvG4u8Jd1x4KQHr0+ivE+eT
2F8CF/uO19X35y3gG+HmrT9JPxXhpinzMrGeSC9VLraxgx6jn02sEyGfBS76
YXomBtgh/41+PDF/tJ4dzWozwB+W5y+csUG+EW7O+NGG8fK5cKxfJuhgP9gP
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
kTj7/c50KQaddP5ajvwu7r2exfsvXvr7L2K8fO8md1c65C+dp7OrHo1FPwJX
4wjq+y+iH2qfE9/PgvNI4KofaapbLxV8oPZVk+ZE4buUR1e7t3skvitwL/2d
F/Fdaj/72T5J6IfOx7ofl45FPwL30t9zEf1Q+7Mbf4uR+oaOu8nfveyeCPRP
52Nd3R5/nMsCV/1+6n000V7kv7ntVu9WLaT/k/Me59sD0Y/A3efdyOFt/UG/
OL9Uu1h9t0X0L+6/qPLk0izPuwRqe4GrcX/1HRbxXYGr6zPv/h5SD9Rxd//d
Ll/qj3XL79dvMCVDzhNe92yMFeuT6/bc/nAG1ifl/Z5x9VFAp/G9lYb++e5a
3Cc2bbTBP6/hlowXQ9A/5XtX1o6LRf/G91MaxjU89shrIyegvfGdFIEb30MR
+P/9vsnZW943EeuK8BMbLFKfpDycjVfS5PoXuGp3P1ot97XIP1H5Mz5R7lOR
p6Gu886/RkBPo7yFxOU/d8f6Ibyie3Yg+hG42v/WXuOAi3Xupb9XInCRD6B+
t2DzaOC0/rV3SQQu4uNe/6f+5gr7R9ffYPfJ9Wn+9c1gyFtazw30H7oXVpcb
loB1S7j3lGDpByM/ebWrSRL2qW5vqrgjtTIGuEfPH6DS7915tpQnul6hzdeM
02MM+/36vmbuwY36rg/k5McG+hvqdfJdRTEuEe9Q6Zm7wvI/14nx/S9Bj4gj
qPtlyFwrcLKbKr86KPtvbL0Zz4X/1b4xeU52ljlxdwrw3rofQ/WfjyxMbnSd
N9b//2ov7KYmhnNBxAXUVn+Pl+fdSd0fosZrWrvkuPrq+6WJYb+IOIU4dwTe
u5H9pftJtH7U/SW++4z051vmvxAp6dTtMjWudDpQjmufvh+bGPbj+Ub2795G
9m9vff820/ev+O4Y3d+uyuFRr4cCH63bdyo92V8Y5UN71b/dYL/3NMgHrENd
Pqn7fdkLw4Cf1f3wbvto35IDvs6G59r34aY/3B92PoJ8uWG6HdTCLW/P+nUw
6oHaPnpmVzLkIfnfah56IQl0sj9Ezds07i+jfkX9e5ddtQGn/murYqVfJdXg
VzHojdp3C7pa4Zeg/btz99pUpeE61PAGcsC4T8V4KU5kWbk9ALjwV6h6wvD8
0aCf8/aHTQgx5FU2V+f3WtPi7kb7VO1Hi2uIcVE8pU34uwpwir+Y97aU8twz
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
JTJvge77uB66Ju1W8m/4N/WW65PyD/1T5sXguwJX9W21/rb4LrX3Vt5Owz6i
ez31UzvIcdF9nJX3z1WAkz1uf+wtmVdA+YT+1m4yjiNwL71udkN9XmtfNz8j
EeOh/ATXmDdl/J3rWh9bGYJ++B3SqU7JNxGf/au+/tNrT/8RLnBxf6STe18/
sfDPfQJvJuOeNY7kzuif6/WFPCDrmpGd6D/g3Tist7fkfQ3/hfPTgFNcoGr7
DJmXS37F+LXLZJ4e5b85Th63slw26XGEa+day/Z0z6I2a4Jc/1RXsPa7JJth
X3jed3t2Yabh/Oqo4nXN9mcYzhct38ySEif9eMb61QLv24jddKkRu89Yv7rh
uh2o+lHfevdUOHBqr7R2yn4as5vo/ncDe81Yv1rgjdkvjdlfxvrVAm/MHmnM
DjLWrxZyj+2I/Nx47EPOd41rmSrz7mRcrC7xtLQjOC4clCDtvq8MdZUFflLH
vXRc8PGSIS4jcDHv4r6zOJfp3K/86vEU7COSh7VrMyKAU/uaG58a62bIusfw
T8p1a+q8fBxwsW7VfMI3F06QdTykfm5Z0U3eZ6G8QUtWXhnoJ/uusn/rIOgb
JA+vrXt1FOSqmC/V/6PmY4v2NI8Lbpweg/YXdL/lv3r9FpzjVB/7je4yX5f8
WpV94oKBUz38brtHK8C5HsX4WaMN9681f07I11fthnv0mnyoSRpVbIhHePwz
f50tNvTjse+aWkrA/8+lfKv+9PwI4AN0+abmITy+azRwshcqfz8aBZzybB3D
8mKw3ozvlAk+s77kHyzvs/gY1mfDe+uaPeuflm0zxMU8evt6m4zfkX6l/PV8
psEO9ciNxW/l4bt9ZN2hvqyv0vqvq7wtCXrpbH2fquvHzybz5L/U18+/+roy
3MdX+9HeDxI43Yftq9bXFfuI7ltp+bQCF+NQ/bdqvVwj7qXX0W1Yv6i5Gkdb
q9atFfifOt5Mr2fb8LyW9WwFLu7Heel4Q7mk7RfL5zukPs/++eubE7BfKB5h
P35g9C31Crz0egUN5ZW0I0T/7J/fWhADfZ7W4U5zc1nfg+77VGZczTLc6/f4
G6c+lA2c7FBn9hsSJ3vQO6O5vP9I8mrj5k8lTudRVdyUfEO+usceXLddyjey
B2t875fyjeImOysvyzpLFDdRTt8p4yxC/3Gvw8k9/Lob4uzaPjpbXyXtffJj
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
WrvsIw==
       "], {{{
          RGBColor[0.880722, 0.611041, 0.142051], 
          EdgeForm[None], 
          Specularity[
           GrayLevel[1], 3], 
          StyleBox[
           GraphicsGroup3DBox[
            TagBox[{
              Polygon3DBox[CompressedData["
1:eJxNnQf8V9P/x+/n3vu562skJImmEJIts7IlZZU9skqhYWclysiMjAbZmzJC
ISV7hSKZKWRvIfxfz17H4/d/PLqd9z333HPv59xz3uf9fr3Ht1Wfk/Y5MY6i
6LMiihKVn6RRVFPZXWXHKopaiX4uj6Kj61HUVvQLoh8oo6il6BmiXxT9gm5o
rHJlnZ8i+lG13UWdnSa61PG7zk9V+ZjKJ3QsJ7qfynF65rrq50XdN1r3dxR9
jcq9dX6T7u+hMtU7rCL6FdXfrPYDdN+WDWqTRdEY9fOmztfQtRa6d6bar65j
qOqfVP3FojdR/WsqL9O9G4nupLZ7qc8m+n3dVf6tdmep/VSVm+h8Y7V5Ve27
aFAaVL9Q57vp/Aq9w64q79f9M1S3nfrbRu/wm+gDdG8X0V3V/hrRTXXtGtWf
q3Jj1X/DeKp+K9G/iu4t+ka13VXH5To/Wn1vLXqE6Nn0JXq0yoP0vPt07UCV
Y/Q+1+rYRtfOUd0toseK3lHX5op+Xn2vofpmOnZR/aY6/1b97aV+1tR73CZ6
hMpLdX2+2n+n85vUZpzavqM274ueo/pZKtdSu9t1faTK1jruFX2RylRjlugY
r/N91G5P3Xuj7h2lPhfr3t9V31ztxqm8QOXOatNPbe5jPog+XvT9ovcQvZLa
d1bZQccXar+76qeJ/lL0HqL/1nM6iT5Z5V86P1v3TlP5l571Z+K5eKrKY2J/
7+Nif8fGNX9vvvvheod/dP/Wok9R+a+ObbhP5XT1tVh0N5VD1c9g3X+u7r1Q
9Iuip+pddtCxgur6q83JqjtP9Oo6/lGbv3VsGuYKc+Zn9TmIuajrA1XWdO8w
0c+IfjX2+8xW2yE6VlH9Caqfp+MP1R+i8nfdv4HoASp/07G+6P4qD9ScfF70
DvotY3XMZnwKr9OV+L4qR+m8mehn1PeNot9kPFXupntfFr2j6M30vpvrPfro
2ffwTqrfWfUXqH6a6m9jLopeTkcqegeVJ6us6fhZ7YeofFhlG76F7r1Dz+2p
5y2v+uNV93rucT5SfY7RvROYr7rWRMeKOrbTtRtZyyqfUtsVdAxW/WTdW6h9
ruNHjdkbKu9U/Uk6ThN9gvpZVfSPet6a9K9yDcZC9HCV56rN3Wozge+ivjZX
/Ycqz9D58zrW0/mXNfOoDqJHJ67nvWfpKGB2WtNLdE87kR+ovKnwd1+o8hYd
KzMOanOm3u8l0X+qzaq57/9N9L0qX9XRDH6nNrPpV+X5mesjlQ8wL0Obu9Vn
C5WJ+jw6c32sMtWxEzyY/nXtDb6V2j5Uc58tdVRqs6/aLOC5hetStV1D7/Oy
6KWqb6U2b4teTuU9Nb8zv2FFtT9Z9+6k9j+Jvkr02mp/pb5LY7WtxFd/1rVN
1dcGoier7hGN7aTA267Tcb7uGa/ziaofp3JVfY9VdLyjcX1E5fW6PkZ9DlYf
b6nNDLXZG95Q8xybovOpOn9M5Sm6Z4iOW1W/jsqb+E7q43Zdu4s5qbLU+wxX
n4P1vr+W/s5/wp90fb3Y/CvSs8az1sJ62UPlESovVPu71UdT/ZbB6n+gjpsZ
Q9VfoNuGwKd1fTvVXaF3vlvlc2FOJDrfD56pvg5X/+/pWS+qbRvdM1n1l6j8
Q3VLYvPWutr8rHJ/3Zep7qfIPPQfPesBnY9Q+ZbuuUnXV9T77KL3u0/X26vu
X/XbXc8cq2vD9I6Pxh6TE9XnkSrvUv2uaj9V7bdU+8fV18OiNxLdXvf2VJsJ
avOP6B6ix4tur/avqq/1eE7pd+6g9q+qzQ+i91abTrr2hOjNVX+entVW7Wsq
Z6vNAernVvbayvx/PX6vxmJn0UNV9inNaxeovERtLlXb5yvvb48z11WupHtO
hUepzeDMY/sL+7+Oo1R/tfpp0LUL4fNqu37me+eqvpHOT1H9Lrr+i863ED1I
5VfIEKxf1a/GPFP9BNX3Vt0MHU9HHjNo3mUFtXu65m+9ouhnan7WlJrprXR8
r362UPmFyoUqp7N24I86/4x30Jg0Ys3ofB19uw01Ts/W/L3bB5rnwiNWDu/2
ud6pgrczVrpvAetO5VVqf2Xifi9T2RD47fjCvOpglX3ZR0T/pPFYqut9NB9W
Upuj4Auqfz/0U+dZOu8S2hyq5x6o8gAdua59Fn4L/R9Zuo9P4Dm6flTs77ei
7l1BR6Oay+WTsOfpNz8v+niVi/Qev+g5vermnWcE/olshIzE3rNNZbnuEL3/
Ev3m7VV3msques6ZYQ9YGPjqIXqHnRK/w2Gim6n/hHdU/1/UvA5Zg9+llg/7
quysa++Jni/6icz7w0N138fY6rNEq6u/FXRsr+vb69pc1c1j/xf9kui3RK+l
9/wxrN/v9Q7f6XhB51vo/EmVY/V7d9X9f4o+TPdtrf7uqFl22Ur0arH37M1L
r/F74Jel58J16uMwvkNsufdP+F7gBYdk5n/v1b3vsv8uUNm18LvdqvfaQdfe
5fvqPW/RexzDWKhuh9h8nH3qK/WzhHmi+q9Uv3yQuzbV79gk8bUV1WYy3x8Z
UnUjRLfjG+j8WF2/Vv3/rP4PEz0JGU/0hbo+U9cb6TgOHq42I+HLOo5mLau+
L79R9auKPoGxEt1E9Emix4n+Vf0cgVyp39JO9Ei922V6lxEqv2EN6loTvc8G
or8W/YXa9FR5CzKO+llf9WezH6m+Dfu/6AtEtxc9VPShuvcQZD/V/ZX7t4zW
vX8yVqJbanxWUbsByBp6n/PhZzoKPX9l1fdX/Q2q31HnS2uWNTeJfZ35fUTd
a/ZwnqX3/kNtNlS5oq6fUPOc6JCYt8BvppbmV8up3KJ0H9cj86t9Rx0HMo/Z
S5FvVHYvPbf/VZs1dP1jvilrkv2/ZllrK7V9TtdOFL2n2t+l8h+131r1nXQM
0vm3mb/7VvAzHanqn1L5Pm3V5d/IQKHvf1U0U9sPwrX5pfnDQSo30n3rJ+b1
7RLzf2TN8cwN1d2hcdg29170ruiVMn+7c+A/lcecsR+V+Xvuqfrf1MevOm5D
HtB7n8j2rPLqyt+L7/aYzvuI/l3044Xn1d+iW5eee0tFn637r2b+6HkH6Pxu
nfdWeZWeta3qLtezXtaxmegL6+bd8PCRKj9HDhQ9QuVU9T8Q/oAcp3svRx5S
/fSwN7FHNdExSvQZKq/QMy/n+6ndJSov1tFB9JO61o/9XO9wjc6313Guzv/Q
O3dhzar+m9TybS/0i9zyai/dtyC1br13ajk3S5aJhNFnOte/aF/996kO9PAe
qb8V8jbfcV7NcvJS0U+j36rcR32unlk+f4TfrntWYP6m1tVbiV4s+vG6efSu
KmcxvqIP0L1f69rKovdT+XnNOnum4+DYejp7x6916+9T6tbP4cPw45dy6ybw
+R903pz1ovI41o7aHwu/UpvVkF9E5zp2V5vz1KZA9xM9THQmejfR58I3WH+x
5ZJNSpc3aL7soza3wGv1Wzuq/nvRe6hsWjcvuUn37oZ8qmd9pfP+yIo676dy
nsb4PR0D0HV1/FWzntlKdS11dNP5RqX14DtU/qg2W9asq7+HHqrzdzPLEsgR
yDNb6Tc/pfITldtm5rsH6V3K2DjA6zpa670r1jDyicahs64dqbY/q6zF1snL
xN+FfXNdtVsET1b5LXwy9vlLyBDwWPU3Avwj9vt31fneKr9U34317ANFj0rN
nw8Qfanoh3RtReRolZP1roer/hfRud6jFd9bbW+rPP4fg2mwFlS3nTbRuO75
fKbuP09teon+Oje2cEPNetcHoofF3jMeKKyPLIYn655dRZ+t8gdd/z42j52k
9g/pOBM5JrHevSVjGls37hwZD+D3ITc8qD5PZ2/X+yyfef96jnlY8z6IjNW7
8t7BHvJDaSzkN3SEwvjEhYWxh9t1zGecVV5U8771tco5NffbTc/dI/CZgerr
DdHP6Jlfid5fbR8qvP9crGNQ4CPwk5v1/JNK84gTVR6WeH+6RO2ui43XXC36
WvU1WuUYleN1T3v1u55+18WiL9ZvelblCoXn8zSVr6jd+rp3P3CjwvrWIJVX
6vwn9bMuvL+w3NulNG50Vc3Y0fnq6zz1OUNlJ9VdWbNs/XVhXnWSyjZ6/jT2
ENZQaX43WOXhsWUX1vyzYX9Dpl2z8v7wPnhXwA3e0fd9V/ccUfNa2DmxPAfv
QMfZW+VsMAe1nxJZp2ONo6fcrPNtdW8vvofKbeteW3NS65oP67iktF74ROx9
aKfMe+nrYCyZZcS1VDbJLRsdLvp1tV8Uez/vmHhv455emX/La+gaOibD09X/
nqLn6LkbIqern4Wqf4f1rvsO13Gp7jlf7fZV+Q46X+L5fiT7ROa5+EfdY/mw
jrV1nKc+1tKxne6brfZvsrfqeKtmHb6u+uXrlqdGw3tLy1fMsS+R/+kLGbnu
vfWa1HOWucs+ypyF12VgEXW/S0v2xNhzlPl5Vt1768K63/n2xLLUU+wVNctY
F8Wepxvq6FGaXqznfld4rztF5bAg712vd7gs9nhsRLvS9Fe0AUsV/YvKz0rj
b5+rvqPufUD3Pqt7h2msXkEOqZsXnl4z1txf9PGxcb19cusUx6fGXaHRhXZP
jNugP3xaGudbpHuPVJs1g17RPLc+iF54embd5jSVl2T+HhdnlvfOUZsd2GuZ
qwHr65y7/gz4lup2CRhfC9U/qfJr9Xme7h9Ee5Wn03dsXG9N5oeOrdTncPiF
6JYqjwVbEH2cyrVUDuf3qc2PhbHeoYVxCOYhc+sCtdtP5VzVb173/vIKQkFp
HWiHMJ/ahvl1pdqdzX6GHKejJ3Im81RHd/iGylNKy06nlh7r9pHHflBY76z7
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
hXrifN9OjFejByDHI2vurXf4hjaF+Qc0saa8I/2g94G34QMxLNRD4wvxSeJY
lWP0XptWPieWHxkTWRPZFVkSGpkTnWJ+Yn3h1XAOTWzynPAs3ntO6J82vCsx
+T0r88yzGdfUz31SY/JG6feeXTpG8EXVz9b1WYn3BvaFM3L7QD2A3436+TJx
3oPTwz71e2aMnPHBRnVUbn0KHgqu/1Zim9apqn8qsZ6FzI9+8LLu/Txx3gny
T0AT63lY6rpFiWN+/sosh/ytco3UMY2bFfbxg2dDc31x4rwM6FV8I8bgtNyx
KL9knrdn6vwl1lDl2N8vVc7Q9YWJ41Hpvxm6aWUcjb2DPWSjyuO/pDSWD6aP
/WBG3bzjmMw8CnwBvj840PDu5qn5I7wRbITcFuBd2F7Bi+HFewSadXhNYlsd
chq+SeiiHcI70M889kMdZyaOPxoReCQ6KTkQsLFtHtYc66IIMjj6Bvv0+aEN
6wUMCr8ofKLAOME6wWnBf8g7AHYHbkAbcKoXQxvmJ9/ryvDNsJUzJtg4qLsq
1OPXR84FfPziymOMLAdvgEfA1+YHmnW+U27dl9we8BzW7xNgpYlt2IwV9fAh
cOlDc2N6YHv49+Dng084c+CisE6RDS8L7wAGSz35N/DdAdcn7wpy0NVhzuM/
wvt/FtmOQD4F2n0e5iRzk3hpriNz4g9wcWL7PrlKoPEBuD7oyOjKSeU4sv31
zGNyv//CzDgqNHXH5p6LxLLxHTcN34iSc3BvMBD8YrHtLpcby8HGOjy0oT36
KPZO9FlwFPxlwViIrVTTqHdqvIU26MWzAx94HXt6YbmOWBhkMGK/kcPWCXs6
bb5NbKfERomPFj5V+FMRc9YisV763zn0S4lpbIKUrQKNrbBVuPfGxHIY6xls
B981fJ7x3WFcJ5Z+f+rBc34K44Ot89nSMePT0buzZW4k0f6p2+fhN08PbXoU
Hmd4AryBeG5i2fg2P2eOsyaW/fnSc5U5+2vmNsSq4+eG3oEvBnyCcYPnY0PG
lkw8DuNG/DwxOVluGZbcCVtXzv1BTAH+3sTZ4nuKfzmYA/HOxKoS14M9mnLj
0Cd0x1C/cWgDRt8pjAd5RYjBXT+0mVs61nUOcnXdPs/4Ps+EB4e5zTqdGegn
VD6ZOBYRrAaaXBDEi8HDscNicyAGCR9xytcCfUNhXwDig19JHDNF7BR792V6
9gvol5X3BfA28EuwTjDPaWHd98m9FrAZEZtIDM2MwJOJN+Q9WTuTU8sY5PCB
l2I/AOsHQ6VP5Al8CR8LPJZ9BjwKXYj35b2xmaxfee50K+yXin8qejpyH3o7
MU3oB2sn1hGG5aZf1PM7VJZ12QsAINskzmvRqe44+zfZ0wvfx/jjE824/Of3
Twl2v07om7Zrp+6TeD/GgGDa2WG9vBTW1ejC64Y4UfJm0Cd+7Lwr798ncjk7
/BbiM5m3zN9+uXXznkHHZI/vFvTHFxLrkPhczQo8EH+DlxPH6K1bGRcFH/2h
sK1k5co2BLAJcAl8W/EnxNf1qtTxmFfkluGQ5Tqo3Cu3n8Fwla9V1luOrpxn
iHxDXZHbKseCEbP/VeW8BmeovBygN3WfLVQuSayP/1455rOJnv9Zbv+xY/Df
yJ1DifxYF1T2Q6sKP2uU6rZqsI/Dz4ljfd+rHOffn/gRHVerTSe1uTW3/RE7
JLYuvg3zFBmFvYA9YW7lfAHHq/xQx7l16/6fV9Z/BuLrB16mfvqK3qTBvg5D
KstXyFTIJUNzyzBnqfwi6JynVI5hYP4h7+Brii0bm/ZbVch3oHJO5bwA/VS+
UzkXAM96uwr5DuA9rEH10za1roHegX7xbxh/+n0zjPUtQUb6jH1F5fm5x4pv
903l3BNnqvwe35LcuR3oB3kHnfWByrHiB+k5kyrnNjqscB4W+CXf9L7Kcd29
C9tyWKMjVN5fOX77QPaiyjHYh6JnV44n30v0HZXjyfcM+yk2SL7LN6J7R/69
B+eWGw7JLSfAFw5DvsitFxNPjE0JX0dsOZMr56XqU1j2e0b1R6vtnZXj27ur
/p7KeU/2Fb1tZf3xtzC3mU/kdduh8vzsrHKhzveMPM+/rZz/YmjlNvzW9poL
P1XGo4mPPrdy3rgHVX5XOSfIWZVl4K/C3PhZ569ljh+/KLVeeXdu2fvp8M7N
K9sV4LfwVnggvPa3oPMSW/l6ZbyA9XJl6ngX4l7Ia0B+A3z7vgIbFX0Keyb4
Qur1cGlu3WKgzj9CrlM/A1SulXp9sjaZZ8RnM+/I54ONeEpp3RUd9szCPqa/
h7EiXvsOtX+1slyLfPun2rfEZyC1L2ivyvSelfMLZaJ3rhwzwz5LnhLwB/bn
NwM+Qw63JSrfLYxJE48IHoWceWtpfyrkj+4q18kdf7RuboyLMWQs26Xm0QdU
9jkmZhA7Nr5SYHH4Vm0Z9KyeYX+gPTL/fmFcsBUS17MYXtLgeFQwXGKradsu
tCcvGzI4cjYyPbI9did0pCsDz5kQ5EnkyrdT51cZl9tntmUYK8YQrAlfLfAX
cJhrVXd/av8mcu7he4ZfWjeVLevWPXYXvV/uebB/7jkBP2eOfFE6Dpf5A555
TODtrevOX0Eei4sD7z2i8Dr4I/BqsHFwcnA+7BfYLDbLbdfApkBMGbkmGLsO
gYe30XOPTR2rhY/QycGWzd5D3qkP1K5t5hwpHzMm6veEyr5h4IDsU58y/qo/
CT1bx5qiT1R5Te44gWtz94+95ZLcev3qqfVlcCXwpX9Ly5vIncSF/pAbc4Pf
PpYaJyFPYFI4N8uJYc4QS/Z5btwQnJDcWG3Dd6aeGP/WYV4hQyBzEMdA/hdw
ffDrBfDfurG7hrrX6RWp8xKwzxM7+1Nu3I89qEtlXs74E+tKzPVTlXOUEGPN
OBB/ji2IeHR8qfFzRofrVjmvAv7Y7JvD9bxnKusyzMGNGvze/K624bfxW/it
2+rahNwx6Fs0mHeQi+Ol1DwfzBYMFr8ZcgsRn0ietMsYW7VvV3eM27Nqt1bk
fQF/Cd6RPG0vp85fdF3uWMgVUu/P6P/oDejuxO0SM4T9bsPK2A45MNHnwTho
g18NeYsWZPYtwMfg48y8t33keGL8eahbq8EyPLI1eW7wScLGxW/cuMHrhFxA
b5eW0cDGwYHRm4kdv7wwjk8+TvYLcsdsV1mfQt95pzSej/xFHipyjzLP2Td/
y0Ksa2Zcmlg+cjvhv0Q8BjnksHuCD4HngOWCg2C3ebj03obfBPkTyaPYXG2m
p851hnyDbRr9dE3RH+XGdvetbP/FPv105nyL5PBgv4PHohuiI7YojL8hn4B/
gX1tVflbgM8gqzRp8B5MHgkwSeRx4nVWVv2i1DleVhH9feqcYG8E3ZJ+pqTG
cq7XM5/I/f7kgyQXEH6rbRqcY5FcNMgD2JiwH2FHAsNCDud7oxehH5F/cXXd
c19mnxNsJNhB3g86I/lqfsisS9K2bYP9Xf8J/Bq8kTylyGz4PeJDi38rMj96
FrnlyAExJcj16FzEQxLji66B3of+Ny13XhpkCbDcq9RuVmW9Yu2wB+E3dmtk
Gwl2ROyJxMyCkWKPIu6D98fWM6+0XoBdZp3AQ9qEeQWWDnYNHj6rtB0Ne9oK
Deb15NxAdyMGlVx6tAEnW1vXN2+wztCmMm9qHfanbVQ/JveeiwyNHIBM/Ujl
fKZHF96T89S+PlMq58c5rjDeNz/ofDfmbkNuQHwC8A3YWXUzK+8l+Pc+Xjmf
Tt/Ccgx7MXkKH6uc5/TYwrEt2FCI/5ga+H//UL8Mi0KXDfLJ8cielXPK9Cuc
TwGMHawdmZ+8rxez9ivnVD1G9LSwXwxgrHL7MuHTBPYEboPM+UoVLQMdjmLd
Vc5zelTh31ikzq1BfhlsJsjq22vcpuj89sq52OBp8Db0m1pqP2nyDGOPwy4H
T2Us8Z8iZxE5Bsk1uJzaLp86lnsq6zeyPPyi+l2vbr+45yrnM0XWIkcqshs8
84XS/jrkFgBPPCPIWuh66H3of/gUESv3gp7VscHYHMnDng776YmF5dBPwAUy
+wjiH4i+gA8h/oLkHcEujJ5JnuMHsfvG9gNlLxkZ9lbOqZ+XWf9fHPQs/C2J
y52r8vkgD6AXdNC9F2aO01nm56Y296h8MnduZ3gFshO+OuCj7HHMh2XzosE8
hDhoZAD8FfFbJN8Qc4k2rH/4wAz02tI8Fl7L3Id/wkfx43oOTFptr8rNr+Bb
PVN/C35LHL4pfeO7MpvflTmHAng5+SjYm9mjyUGBTw+4CLmKwQXIWQY/IScC
ODq+N/hkopugo8Dn8Rtdk5yNDd4zyKc0uXQ/9MdcZTzBTddtsIyLb/ZOlecz
c36f1HwJOR/sa7mAG5ADBf8P8ufg/9oqyKW3pva1J18ZOcquqFluRD5BfiA/
013wutS6CbFXR0eOnxha2tdytQbHlGEPwi5E7iDs48RSvF53DjLk0nrdNkd0
A/JjI6eR65H34z2x/6MP4xeCDooNFVsq+VjwnSb2khwnxAvjv0hcL/FrxLuB
T12gvhshT+XOCdUlMkZAHBa5I8ghgb8ocWvE9rF+kD1uy50vbi72rMx5nNEF
0Amw4WHLIx8FssJNueUj8hXg10auaHLM4X9BbgHyG5DLiXzS5FnjHbAPjw16
F7J9y2CHJfaL2Drys7F/sNaJRSDPK/yO+ca8Qy+HR0zMzbvgRfAkfFOJvx0f
7LDkCcX/G9wCmRPZk7hCfM5+qDu/M7ZKcsVgm8dGT95aYszI10TepkNTywnk
RsN/Bf95/FnQD9ET0QmITSB3DTlskOPxM0Du/iRznlnkMfInsw/fXTknIHGh
rEHyCpK7A18d9Af0CPxulgT9jhwU/+bOf4j8Ty5K4o+IQ/oud54f9H1s2Iwh
Y0n+GXJtkeP4+9y579gXyAW6NOzvxCwjgyxVn2/VndP8sKBn4X9BrpfRufOG
o0cQk4tNmDzZrFXWLLm28APALkSOHWK19oqdvwXbLTZcYkWRf4mbJs86+hV6
Frkh8fmEB/9dOf6C2A1iOMhxhp3+m7pt9tju65nHHz8ictkR3409kJzr5KIn
f90RpX0m8J0gvzG50fHFIicyeiU54O+tnMubeYgdjVydy4c5T54y/IzIr4Uc
R04F8knyPJ5LLMbjarebzreq+5vx7ci/gj8neXrIG4ffJrl/yHFFPn18TcjT
cn9umxnrkXzc+G+RpwU5kfcnDx85AfGBIpcLuRyrsMawYWNDI4cYfg6jasZ/
0J82rlmfIUc/vmLk1yIeEL9DcpIRB4XNBNsI+S6ILyPOjFy12AnI608sFTlj
kYvIVYtfDHEr+DTg2wBuQD5B/LnI2UUcWVvV75U5rym47jfhWcSh1YOMip0C
LJ/YwBaxc/Wgf6KH3pdbLyVXCeuFfOL4tpJnhvztjcJ8ICct/s7knJ8WZBtk
nFmFY//JU0S+IOYD86JZg33Z0b/4WwL4TpBX6vLK8XTE1X1c2Me81uBcBPiP
sueRN4PcFltnznOOLIr/EXnUZ6qfRswhHU3D+5OXhphI/PDJcUOuGzBs8oCR
Hww/CXK5gsU3ZM6jQjwJ8vy7qfOrIAMQM0scLrmvwBn/CZgo8h86LHwP3Q8d
kBy62LoGBTsJudrI27Zv5tyS5O4YkNk/GR9pbLhdM9smd8ycxwz/vll1+zZh
OyXXNrHY7OHLNzhGABsqOYj4+wrE65AzjTxu2G3It0buaPI2kL9hWX6JmnOv
km8Un1Byj5PzAdsLOSXIn4utlfzh5HTDjkRuVXQXYgGICcAnZJXwnrfUbaMj
jxAYF3EAJAsmn0w9yGbkoMMuQ55tfF6JJwFzvD7I4ewL7+bOYY8cS05UfETx
FcW/C39OfFQ7F9atwDCJ5SdPHfnqiNkn/n14mD/8PYQfKn9vvjs5iPCxxH/x
o9K5/p+PjCHfljoWhHyn5Jl9POzR+OuCm4EdkSse3lY0OOcq8hL55MizTX46
cv6RK5tcPeTsIa51emS8jRzX2KHJCcDf6YDfk9u+ZYNjDMAkyaHNXpc3OI8B
+Qta69rbuXN7otcQ+0++gDaZ88Hje4HfBbkl8SciP9BbYf6S+4pcMeSOIdcU
f1MD2wE2hE9y48/4ZyEjce+dufNYYvvABkIudPZ99v/5/8mldeey3C3c+07u
XKPoKeTFhhfhq4dvKz6u+I+SZwDes1yDcTL8EcmTQF448FX8CObo6BZZn8I/
hd82LHJ++KlhfyEvOvkvyBtHXscLIueYJ08p/pjkxyX/JjghNhRypFySWF+4
KciiyKT8DQLyCpJfsFPAZMBm2hbON0JOxb907KznHVo5Pyq4xxG5fSDwcUee
r6nN8ZExZ/Lc4stELgXycy6O/LcvyAmP/wZxUQPCem+a2TaJDe6VIFsjY8e5
sR38lfHRxufgnyAzgzmDjYCR8LcS+BsE5Ikixy97NJgof6fgzZrtUOR2Zw7D
G8npQG6H1UvneCePH/n8yGN5YeTc8PBYsDgwOX47fyOA9yIfO7x0Jb5n6fxB
TUvnilyWjy0zb++sfg8Bt6scdwq+1Cbo6+jt5CgYG3Q6/n4EOUrIWQgGjY8U
a4QcksRZE289PrWvINgvPu3wCWwUC3R+UGR9vBb2sdYNxpiRn/FpxI+Rv/XA
33wgnzA+4+TT42+F8Hci+HsRXQr7GmHXOLh03CM84YPU+c+RV9HtiJUlph9f
SmJwiNchr/TdYUyODvsvc59czazX9yvnfSb2BGyEv4mzKHIOWnIg4lMIroVe
wjdFJ2dsyRlJjj7+zgg+ADNL53Nmrc+vvKbwyUYnZ18G58cXdXTQDdER+ds6
+HHhz0W+EvKWkOuPv0FDfCJxit8HDJJ5j/8ANNgltklslOjU5Pgj1x85Bgle
PzMydpEW1rnAN8hdCM8El0Be4huQk5jvgV8134e8sthj+VsZ5J3En508vfyt
Gf5eBn/r4+Xcf5MF+xo5adnvyOdHThJke2R8ciCQx4UcrvwdDXy6yc+KLZHv
jv6EHxu6+ScBbwJ3wndyjYAzgDesqnvOiGwPfUXXNoxsEyTH19wwt8kVQy4W
/o4HvmzwWHgSssQ9kX1VydNCDhb+fgJ5wMi3Re49sNbPI+cVxqcROerYzH/L
CWwB7GH/yrok9iP0SmyFF6f29cNHELyYvBNrps4X/Gnu/MPgV/hbIrdvlDtX
ADH75J19I/ff3MFuSBw3McPEbfP3m4ghJ/8Ef2cKO9rGlX1GmoXv/iZ6YWS8
CL2YGEliJf8PhWNh6A==
               "]], 
              Polygon3DBox[CompressedData["
1:eJxFnHf8T+X//89rnPmOUCmVjJLQLomWjxLJDO0tNIgSRUVbKGWPKFLJKA0t
I22ZlbaWpggVLc3v4+5xfrffH9ftdT2vcc55Xee6ntfz+Xg+rlPn4j6nXVkM
gqBjGARl/dbLgqBSIQgui4OgcUUQfBgFwfdqUC4FwRbltyRBMEr1K9X+FbUt
q11D1b2ovkepbH+VvSn5ccnvpkFQVP3+kt+QfLTqz1f6U/neusbjyr+vm66U
fKHkYyU/QhvlX9A9n9b9Llf/N9S/qdr0U9s+qt9D9XOVPlf+WpUdp7qdJf+h
fH3df5na/6iyMXrW9/QM+0qeJbm+5HPU5w/lD1dZha79u+qvVX439V+u/NtK
NfP2S9W+pDYNJHdV/YPqu1ll9yq/QvmXda+T9PuV2pZUtqeed5bk7sr3VJoT
egwYi0OV/0/tz9bv75Ir6f8dp/ZPSO6jtn2VnlS+oPZzeBbup3t11X9SsyDi
Pymzm56npfIDVP+72u8s+VjJV0uurPyJat9J+QeUTlL+BZXxfr9U/hHdf1fa
qH1/1e+ifGeV1VRdK7X5XPLuSq1V/w3vRPerLrmV5PqSN6vdbMm76ne8+ndS
/ZnqX09yR9Wfofws1e8i+XTJd+p3D7X5Qm330kO0Vv4Yla2TfLrkY5Wfoj7X
qm0D9TtA8+17/f/zdb/hatNB+YdUXrnsMX1Q+SeU9pV8vvpU6P83k3y12k9T
fVPlf1OfAZKvl/yl8r9pDO9T/jDVRbp+M/X9suBn4FmOU3l/tZ/B/FP+SKVe
kh/Q9Rvq+lUkHy+5n+q3Sf5c1zxBckHyOcq30/NX13WaqP1Byu+t9h1Vf5Tk
X1Q+U3K1ssfkUeVrKnVSfXvVF3S9YRqTmzQWj6jsVckv6HkP0bXvVvl2Xe85
yY0kv8G8lTxI8t3q+7iu95rki3mnqu+n6/6i/An6Hahr7a36x5TvG/rZ9lab
q5T/Tv1vUP4f5Ysaj8/Upo7kWPf7Xf0fUf0+kq9R/W+ST1Pak3mkazRV/vHY
1+4g+Tb9tlfZ7vr9TvJI9a2l+q66f0vJ2xnfCo9BXV3zMa7NnFP9EMnddM+O
6r+H2s1R+ybKtwo991K16aG26zXGZyp/scqeVf/uqk/V9zyN2TnqN1dtajAv
VT+HuaF0jtp3k7yT2h4g+ULJh6rPSN3vLsn/SG6h+kHql0k+TPKZqn9X9d8o
/aVrv6Sy7qpLlQ5W/gzmrOo+1vMcI/kf9T9b+Q56pt2UP13XmqXnfxEdElhX
7qv/vlD91Tz4irmg+ldT/7c9VXaX+r4iOZH8t+R/Jcdqf6DkJZJXqc/bus5X
ep5/lb5XPlH9Qarfhk5Qfpr+Y2c921Oqf1z1R+keG5j/qlum/Omq/0VtE9U3
Uf2i2Hr+a+aj6l/WPY9T/wZq96bkcaoPea8qG6P8XipbyPgrv1T5KqxxyXXV
/lXl3y5bt++HjlZZdV3vRsn7hp6fh+j/lXTvxrr3csnHSN5FcgvJb0i+IPRa
KipdqPyJKt9V9WMCt+F5yrrHVMljlb8v81w7nnHQ+L6p61XRvSuj8/gvqv9N
8kNKOyvfTGmr8mvUp5Hyt7JOJDeUfIvyP6h/t3x+/MjaU1lPyeMkX6r7Hyz5
Esl3sL6V36j2F0keofoNyj+YWffdzrtSfqnKKqm+lsr2Uv4e9WHAL9TPKPQd
c0q/y9kfWR/MAeV/0L3q6v9s0O9/zL/A73sCekvtFkpert9NKiuUvIdtVH5x
6r35Hcn36VrT1X4ntftY8qf6ncF+mN/rR+VviD0/aij9pf5NEl/7fvYR3f8B
/VaUvQdPVf5Ptdmd/UVtdtf7aaBrrJQ8nz1Nfeewh+l5P1d6Rf3WxN6r/1F+
vtpepPrmRY/35Sqroeedr2vfz9rT/c7U7yeS1yrtGnlfZX9tqjRc+RuVrlLf
YbkOxO7A/mimdJfyY5RuUf0Eye8o/7Oeaazyq7FndP1V+h0tuXvJ729waH36
gVJV3W+jyoYq/7rKS2pfWWXvSX5a6RuVfa1Ur+CynVX3peTa3EsplXyWnv9z
5T9Tqh55jzua95rvfZcpddL/f0j15yr/Wn69d5UqSd4pcv4JpTvU5wLJJ6h9
Ivk5tU0i34v6ryRfIrmV6m+SXFL+fKXjJf+nMZgfelwZ38UFv69dUtsSe8XW
99Mlt2Es1e8fvZ+hav+k5NbYeGp/H/pL+X9Udlrqe3LvNUqZ+owue2wWFaxf
GS9081P5+IxTn28lL1R+q67/qdrMVt2b2Ge8y7LtmxcK3h8/Cy2vUPo39Bhw
v4X8v/z/d9b15uXjfbXe762SZ6tdJf2fGbrfx3re6Sobrbo6+p8XsR7Vvq7y
U1X/LuMj+Qzlpyjdi77Staup/x+65mmSb1X9duWns06U34I9pzYrVPaZ+s9T
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
P3BPsWkns7+r7b7oF/RW7PgVsT3sCfi02NzYpdin2OLYmNiaxDfHqf9bkTEH
MBmwmQND2+3Y70+mtvmw/bB34RYfkNq2IoZ4t/rXiI1Tg1d/K3lpbD4dsZRL
Qvtw+HLEf7qm9gnxDfGnT9D1bmaO6DnH4TOBbausVtllXTKPOWN/q675YpK/
A8k/hn4362PvTXXL5q9elBgPu0ZyB+zPzLoGnXOW8terfqTy81T2emYOGzw1
YrrDM3NosfXqsEejmzPna+f20IXoENX3LXu8x+k5TtTz3KmyuSr7NbKdjb39
mv7Pnamx4t2UjgUvTDwXnirb/geDb6X295SMzcNB/CkyXxhuIpgl2GVD9RmS
Of7XtmB9+mzZ/lg9tW2nsraxOX5w/caqfgR9E8cLaQs/kP88Stc4vuCxAIMG
ix6te+5eYd4C/IUq6tO+bBuNvYo9mb15TOa9mT2bvfv/YW7w0VamjkkQm4Bv
UAWsUPIvkTmTcCcb5JyuO7C51H+P1FwuMNQ4Nb8MLIAYa5LmNlro/RrbDYwD
rAN8fZvq902NLQ7Q9V5KjEmCTWLj3Z6ZQwkuBj42PTPnHQ4aOv2WzPEi/j8Y
00Nl2z9wAPC5Bmf2t+GjcT3iy3Aw4GKAYcD/Ip5JrBAOA9wHOOVw4Fj/wzLb
fOyV7Pns/cSztub/j1hyQ9X/W3DMZjHrOfG7JIZLLJc9k3fNO1+Z70dLlH9O
qSJ1fPzmwJxuuN2zE3OX8GnwbZIK85go2y01//3ogq/BfkaM+AH2wcD3g/8O
9xB9Cl8bTg64LWM8NjPnr1rkd8S7Gog9FXgPYS9pFHlfY3+rn9qGwZapo//T
IjXfZz/ln2V+qG+90DwoOD3wX+DzENs+uWD+/km8Y8nP8LyJbSDWP2UtU8e4
iHXBKSHW/7/U9wJDqJRYhvtYO78/nDO4Z4z5hMxzjHfBO9kv/z/bCvZZquf3
x7eBU8b9WA/4LpT9Gdtmw3a7jZhPah8GX+aggu1TYppVIvOZiXXuiDlGxqiI
Re6UOLaJDQledUNiLgkxx83IqWOTLXW9N1R3XeK9mhjkjaydxNgsPt9tqfEs
uK1gUGBRfRNzLcDsO0q+PPWzguHxPOgbuM/EJCZn9h/gwuEj4yszf/FdwDi3
q/2ixL7s5ty+b5Maq8JmwleCI02cD/sA7vS/SncVjSkuSHK8uGBMGGwYDnOX
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
3hFb3xF/4XtV6Bo4iXAT/w87Z+nt
               "]], 
              Polygon3DBox[CompressedData["
1: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
               "]], 
              
              Polygon3DBox[{{2676, 1325, 1213, 1089, 1088, 2245}, {2058, 2057,
                2691, 1410, 1411, 2692}}]}, 
             Annotation[#, "Charting`Private`Tag$1888939#1"]& ]], 
           Lighting -> {{"Ambient", 
              GrayLevel[1]}}]}, {
          GrayLevel[1], 
          EdgeForm[None], 
          StyleBox[
           GraphicsGroup3DBox[
            
            Polygon3DBox[{{1086, 9, 1078}, {1063, 9, 1079}, {1079, 9, 1064}, {
             1078, 9, 1063}}]], Lighting -> {{"Ambient", 
              GrayLevel[0.8]}}]}, {
          GrayLevel[1], 
          EdgeForm[None], 
          StyleBox[
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJxNkM0uBFEQhatbNxebeQQWFgYdPRix4AXsJpH4XzBrtl6H4AGEiQfA1qIt
JH4SL2FlEt9RtbC4OXXPrVvn1Jk+Ou2d5GbW5oxwqsKsl5mtgU+cAdxlafYN
16Wx4T6TzK7BswmznVGzR+oNuPvc+5q4i/8Enwuv1VvRs5C7Roe3O/g38HbM
7ADuCq1d+pZz75/irc3/Q7Q64W0F/IHfp/5IPvMicw1hFfOlo1r8bOGeF8E6
+V4NuEffOeeB+wAP87zfgMeZ7yKN9+QZtCbdk7xtjoORT114r/bvR3Z/+4Gr
pesrA+21RM+2sPS/yni9dB3x3chQ+vorf1vww+T5KM86dOciB/mXn6/keygT
zXyhfg1v/X+7aKYylxfNVN8vyX5ChQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtkD1KQ1EQhU/kvvhMGlcgWkoUNS9iFTeQLhDQJCqotbZux6AuwL8VxNoi
FoI/YO0WFPId5hYDM/fOnPnmrJ1e9i8WJK0QifgvpUlNul+UfhvSF/WY+pz4
IV9uSoO6NKL+pD6ox38HkSH5N29H1BX1PvkVGnforiM+JH9A903R80g+o6dP
vkn/Tta/KaRnRf3O3FktdnSL2O3eF/73qG+Jip6tFHofZbBN+W+Tn7BzN8WO
WeY1mxmsZ6Yn5qoiWH2vZ6/p/yvDA3uxgcaoEbV3mt9e+c37/ea/1xSzZjCf
bzCvuX2bGc3aS+HFMTPbKTxaLcOzKnt5SPSWwttx5jFrK4U/ZvZNzjspbrX/
9maS+TxvHnNZbw4p8T67
              "]], 
             
             Polygon3DBox[{{2680, 1331, 1222, 181, 2085}, {1970, 418, 338, 
              1070, 1974}, {2267, 181, 1222, 1444, 2268}}]}], 
           Lighting -> {{"Ambient", 
              GrayLevel[0.8]}}]}, {}, {}}, {{
          GrayLevel[0], 
          Line3DBox[CompressedData["
1:eJwt0k1L1FEcxfGffxsztQyiFilKL8BoUSk5kpX2pCEqYZmFurHndGevoBbR
rtq5G1wERRAoLQKL3LiJwGcdMwzcSW9A+twI5sz3nHPv/869d/7Hhp/0PC6J
iPd0bU9E8p/2RhzEviziK1/PV5fqDNbui9jG47oj2IKL5nTiFt7CP3gfS8oj
MnrKH8bneBTf4Fm/NVAR0YrnqMBPee48f4Ha6LauHS/SJbpM0+ZcwUFjV7GT
Gmjemsu4gCu4iKu4hGu4jG9zESP2/Nm5VuQqa51yrru6dXNWdQW+yK/xp409
kKfLImY8s65r1D3UbZhTlN9Z85H8xfiG3IzpQr/hT/mD8VF5Vt6Ue3FS7nAP
P+QJ6w3LU+mu5d/YL58w/lE+6b7LdAW+Tvcax3WvdM/4Uf4lf8jYuPyC33Wu
e/wO9uMv7MB5zON3bMA5rMMZrMZBZzqQ9mBPd/j9fM5eapx/C6vkWusPOVOp
XCkPmFeRntVluk06o2umPLVQU/rvrFGTxb8XrEg3deXpfUj7Tf+V7obOViKv
G5P7ZI/Fdcylu0Of6PZli9GF2f/39i+iW1FN
           "]], 
          Line3DBox[{1064, 9, 1086, 1078, 1063, 1079, 1064}], 
          
          Line3DBox[{2080, 166, 2085, 181, 2098, 196, 2273, 356, 696, 211, 
           566, 355, 1240, 212, 1971, 1099, 1071, 1075, 2651, 1068, 1974, 
           1070, 1081, 1074, 1077, 2655, 1076, 1073, 1067, 1973, 2650, 1065, 
           1072, 2654, 1066, 2080}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1978, 1248, 1977, 2726, 2124, 1979, 2727, 2125, 1980, 
           2728, 2126, 1981, 2714, 2729, 2127, 2496, 2497, 2852, 2498, 2302, 
           2380, 2128, 2522, 1805, 2521, 2394, 2523, 2129, 2524, 2855, 2320, 
           2321, 2303, 2381, 1252, 2527, 2525, 2526, 2395, 2835, 2130, 1982, 
           2730, 2131, 1983, 2188, 2499, 2853, 2501, 2613, 2132, 2562, 2502, 
           1781, 2500, 2594, 2133, 2563, 2718, 2731, 2134, 1984, 2732, 2135, 
           1985}], 
          Line3DBox[{1987, 2331, 2503, 2657, 2827, 1986, 2478, 2479, 1257, 
           1988, 2608, 2609, 2870, 2136, 1989, 2733, 2137, 1990, 2734, 2138, 
           1991, 1380, 2397, 833, 835, 1812, 834, 2398, 836, 837, 1813, 453, 
           2304, 575, 1814, 839, 838, 2399, 1262, 1992, 2204, 2400, 2836, 
           2139, 2205, 577, 840, 1815, 576, 2275, 2687, 2735, 2619, 2140, 
           1993, 2736, 2141, 1994, 2737, 2142, 1995}], 
          Line3DBox[CompressedData["
1:eJwNzrsuRHEUhfE1Mu40VBKNINFMQ0SUHmBMopYwZ3oKT6GgcWkkjMsDCC/h
ziMMBokSofUrvqxv7b3PP2esWF9aKyWp4qk7afQkl33JIy/4BX/gdV6TA/oE
xjHbn0zKQ7uyvO1NzviN/EPF/sD8mm+bL/IqKvhBgYbdqV1bfsjPzmSQl3Ci
D8sO77zzV/6CAsf6iP95k8/6L1qoo2k255sF76/yTXf3WOEzZtO407/Lybn7
HexiH192e3IKW+7n5UZXsizb+hGu+BBG8Q8R1Sxj
           "]], 
          
          Line3DBox[{278, 271, 1600, 529, 231, 1582, 508, 232, 1724, 717, 716,
            2001, 2872, 1021, 1022, 1933, 280, 891, 383, 1469, 281, 384, 1470,
            282, 1471, 385, 283, 1393, 284, 233, 1472, 386, 285, 2805, 2002, 
           2740, 2148, 2003, 2741, 2149, 2004, 2742, 2150, 2005}], 
          
          Line3DBox[{2007, 2659, 2763, 2006, 2455, 2457, 2456, 2863, 2559, 
           2008, 2533, 2213, 2573, 1390, 2554, 2009, 2607, 2552, 2606, 2553, 
           2010, 1282, 2011, 2806, 2214, 2306, 2215, 2333, 2404, 1568, 2216, 
           2307, 2217, 2324, 2012, 2824, 2325, 2218, 2308, 2219, 2326, 2807, 
           2013, 2582, 2191, 2583, 2192, 2555, 2862, 2709, 2407, 2406, 2574, 
           2220, 2405, 2221, 2877, 2643, 2014, 2646, 2636, 2645, 2764, 2724, 
           2015, 1286, 2016, 2743, 2151, 2017, 2744, 2152, 2018}], 
          
          Line3DBox[{2020, 2660, 2765, 2019, 2661, 2766, 2021, 2634, 2635, 
           2767, 1060, 2022, 1062, 2648, 2647, 2023, 2722, 2768, 2626, 2024, 
           1026, 2408, 641, 642, 1674, 640, 2365, 2222, 2025, 2825, 466, 2309,
            467, 1569, 491, 469, 2310, 2223, 2819, 2026, 2224, 2534, 2769, 
           2688, 2027, 2662, 2770, 2028, 2663, 2771, 2029, 1297, 2030, 2745, 
           2153, 2031}], 
          
          Line3DBox[{2033, 2664, 2772, 2032, 2665, 2773, 2034, 2666, 2774, 
           2035, 2225, 2775, 2226, 2036, 2667, 2776, 2037, 2719, 2865, 2575, 
           2621, 2620, 2038, 1402, 2535, 2230, 2039, 2808, 2231, 2311, 2328, 
           2327, 2837, 2040, 2410, 2411, 2409, 2777, 2685, 2041, 2334, 2778, 
           2705, 2042, 2336, 2779, 2706, 2043, 2707, 2780, 2338, 2044, 2689, 
           2781, 2232, 2045, 2809, 2233, 2234, 2046}], 
          
          Line3DBox[{2050, 2746, 2154, 2048, 2747, 2155, 2052, 2748, 2156, 
           2054, 2229, 2749, 2157, 2056, 2750, 2158, 2058, 2692, 2751, 2159, 
           2283, 2693, 2752, 2375, 2384, 2160, 2385, 2833, 2366, 2367, 2345, 
           2386, 2459, 1311, 2458, 2387, 2388, 2371, 2565, 2830, 2161, 2284, 
           2237, 2346, 2711, 2829, 2162, 2313, 2238, 2239, 2823, 2318, 2163, 
           2314, 2697, 2753, 2285, 2319, 2164, 2315, 2690, 2754, 2286, 2165, 
           2412, 2717, 2857, 2539, 2287, 2423, 2425, 2166, 2416}], 
          
          Line3DBox[{2067, 2417, 2419, 2418, 2282, 2537, 2538, 2856, 2716, 
           2066, 2413, 2415, 2414, 2281, 2383, 2536, 2382, 2065, 2240, 2339, 
           2708, 2828, 2374, 2064, 2696, 2789, 2337, 2373, 2372, 2063, 2695, 
           2788, 2335, 2236, 2062, 2694, 2787, 2368, 2370, 2369, 2061, 2704, 
           2826, 2329, 2312, 2340, 1575, 2060, 2421, 2422, 2420, 2584, 2838, 
           2720, 2059, 2235, 2786, 2691, 2057, 2785, 2671, 2055, 2228, 2280, 
           2227, 2053, 2784, 2670, 2051, 2783, 2669, 2047, 2782, 2668, 2049}], 
          
          Line3DBox[{2069, 2672, 2790, 2068, 2576, 2755, 2167, 2577, 2578, 
           2579, 2288, 2839, 2427, 2429, 2168, 2426, 2341, 2342, 2169, 2070, 
           2756, 2170, 2071, 2700, 2757, 2171, 2289, 2820, 2242, 2430, 2541, 
           2172, 2542, 2859, 2389, 2390, 2347, 2391, 2461, 2673, 2834, 2460, 
           2392, 2393, 2377, 1317, 2290, 2243, 2585, 2867, 2173, 2362, 2193, 
           2349, 2843, 2462, 2174, 2348, 2698, 2758, 2363, 2175, 2072, 2699, 
           2759, 2587, 2176, 2540, 2858, 2623, 2624, 2622, 2644, 2177, 2424}], 
          
          Line3DBox[{2074, 2244, 2291, 2674, 2810, 2073, 2580, 2675, 2866, 
           2581, 2241, 2760, 2178, 2428, 2246, 2292, 2179, 2075, 2721, 2761, 
           2614, 2180, 2076, 2812, 2248, 2181, 2293, 2821, 2249, 2431, 2543, 
           2556, 2544, 2294, 2822, 2545, 2250, 2432, 2546, 2547, 2860, 2295, 
           2330, 2251, 2514, 2465, 2813, 2712, 2464, 2463, 2482, 1324, 2481, 
           2194, 2467, 2864, 2560, 2561, 2350, 2686, 2762, 2351, 2470, 2471, 
           2469, 2844, 2468, 2182, 2077, 2845, 2483, 2484, 2183, 2078}], 
          
          Line3DBox[{2096, 2601, 2602, 2201, 2358, 2200, 1767, 2095, 2488, 
           2487, 2848, 2094, 2476, 2591, 1743, 2592, 2093, 2612, 2701, 2792, 
           2589, 2266, 2092, 1365, 2355, 2199, 2364, 2440, 2710, 2841, 2265, 
           2353, 2264, 2091, 2816, 2263, 2436, 2262, 2437, 2840, 2439, 2438, 
           2558, 2261, 2434, 2260, 1946, 2090, 2630, 2629, 2875, 2089, 2615, 
           2640, 1917, 2641, 2088, 2616, 2511, 2513, 2510, 2087, 2516, 1435, 
           2297, 2253, 2086, 2831, 2258, 2257, 2084, 2878, 2725}], 
          
          Line3DBox[{695, 565, 898, 769, 2850, 2109, 2477, 2593, 961, 2108, 
           908, 2489, 2849, 767, 2107, 534, 1623, 561, 560, 2106, 559, 1801, 
           814, 450, 2105, 1902}], 
          
          Line3DBox[{2123, 2603, 2618, 2604, 2520, 1455, 2122, 2203, 2493, 
           2495, 2851, 2494, 2121, 2202, 2360, 1773, 2492, 2120, 2703, 2801, 
           2359, 2450, 2449, 2119, 2343, 1579, 2316, 2491, 2490, 2118, 2702, 
           2800, 2274, 2117, 1450, 2444, 2446, 2445, 2842, 2116, 2447, 2448, 
           2443, 2633, 1955, 2115, 2632, 2799, 2723, 2114, 2798, 2684, 2113, 
           2797, 2683, 2112, 2796, 2682, 2111, 2649, 2656}], 
          Line3DBox[CompressedData["
1:eJwVzr1KAmAYhuG3IX/PQEKxwBwjLLA1hxBEaG5qjlrS5nDpZ+wHWpsqZz0D
cbESOogOoIJQzC6Hm/t53u8ZvuLhyf7xUkQ0UElHdPGCLdynIgrZiL58Lfc4
r6/JV8hnIu644paTN5cjVvjR7gnP+NIfFm/yrW1aziKDsV7mo2REius2G7hx
X9dL+NDnfIaO/O5t237CP/oM3zjHm9uOv9RsL+Vdruqr8gWa+siu5PbKST2x
+Ic89L7Hf3obv/oIRXzqLRTkKZ9iIB/wP6H+KPc=
           "]], 
          
          Line3DBox[{2653, 2299, 807, 2099, 2517, 2518, 2793, 1008, 2100, 
           1051, 2642, 2617, 2101, 2681, 2794, 2102, 1947, 2631, 2103, 2876, 
           1035, 2441, 693, 694, 1714, 692, 2442, 2271, 2817, 2104, 2272, 
           2519, 971}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1101, 1248, 1102, 1564, 2827, 1256, 1122, 1387, 1599, 
           1651, 1266, 1133, 1609, 1610, 1600, 1272, 1143, 2763, 1280, 1154, 
           2765, 1289, 1165, 2772, 1299, 1177, 2782, 1307, 2746, 1186, 2790, 
           1313, 1196, 1429, 2810, 1319, 1204, 1430, 2811, 1325, 1213, 2878, 
           1975}], 
          
          Line3DBox[{1103, 1249, 2726, 1104, 1753, 1257, 1123, 901, 1723, 
           2802, 713, 1134, 1353, 1582, 902, 1144, 903, 2863, 1821, 1281, 
           1155, 2766, 1290, 1166, 2773, 1300, 1178, 2783, 1308, 2747, 1187, 
           1879, 1880, 1314, 2755, 1197, 1881, 1882, 2866, 1320, 1205, 2791, 
           1326, 1214, 1439, 2831, 1619, 1332, 1223, 807, 1794, 1336, 1976}], 
          
          Line3DBox[{1105, 1250, 2727, 1106, 1909, 1258, 2870, 1124, 1722, 
           1267, 1135, 1857, 1354, 1724, 1725, 1726, 1145, 1856, 1875, 1390, 
           1855, 1965, 1966, 1156, 1969, 2767, 1957, 1968, 1291, 1167, 2774, 
           1301, 1179, 2784, 1309, 2748, 1188, 1422, 1681, 1682, 2839, 1683, 
           1686, 1685, 1423, 1684, 1321, 2760, 1206, 1434, 1618, 2814, 1327, 
           1215, 1792, 1435, 1791, 1868, 1869, 1224, 1921, 2793, 1793, 1920, 
           1337, 1232, 2796, 1342, 1241}], 
          
          Line3DBox[{1107, 1251, 2728, 1108, 1259, 2733, 1125, 992, 2611, 993,
            716, 986, 2606, 888, 1061, 2648, 1058, 1168, 2775, 296, 392, 2280,
            297, 2749, 1189, 499, 2342, 500, 325, 2292, 409, 326, 2512, 797, 
           2513, 796, 1050, 2642, 1006, 1233, 2797, 1343, 1242}], 
          
          Line3DBox[{1109, 1775, 1776, 2729, 1110, 1260, 2734, 1126, 1928, 
           1929, 1136, 1931, 2872, 1932, 1146, 1282, 1157, 2768, 1934, 1935, 
           1169, 2776, 1302, 1180, 2785, 1310, 2750, 1190, 1315, 2756, 1198, 
           1913, 1914, 2761, 1915, 1916, 1787, 1789, 2854, 1788, 1963, 1964, 
           1917, 1919, 1918, 1225, 2794, 1338, 1234, 2798, 1344, 1243}], 
          
          Line3DBox[{1111, 825, 1777, 776, 2852, 1498, 1379, 1380, 1652, 1020,
            1930, 2871, 1388, 1660, 1023, 1933, 1391, 1502, 1395, 2806, 1396, 
           1671, 1026, 1936, 1399, 1878, 2865, 1876, 1877, 1181, 2786, 1410, 
           1411, 2751, 1191, 1424, 1425, 2757, 1199, 1431, 2812, 1432, 1207, 
           1937, 2873, 1938, 1216, 1942, 2875, 1943, 1226, 1947, 1948, 1235, 
           2799, 1952, 1953, 1244}], 
          Line3DBox[CompressedData["
1:eJwVy80qhHEUwOGjZihCMTQsmHEZcgVmoayUMYuxU2ZsfESMYoGN8lHmzTdN
Sc2CbJQiCzsLN+A22Hksns57fuf/5svVyUpLRBSZSkVkWiPm6OMhHdHVFtFN
J/NahQWqPLn36hl6WNSWWGGZZ/cBfZAs69oGm9R4cZ81h9zK5rd92Nwix5v9
1/yhwA577PLuNuK/PDlW7dvmmrnv3t8RMW0v8vF/47U9YsJtXCvwqaW8OzAT
fUYr8WVP63XzSj/SjjlkVD/VG3rdnnDCpdbUzn2PeXNhntHQH/Ub37dcc6fd
8weDzy4x
           "]], 
          Line3DBox[CompressedData["
1:eJwV0EkrBGAcB+DXMmPNcrBElBPlYCk734CLmzhJlhTJSXHwDdwQLpYsFzsH
5Sg3B1kKZf0ClKVszxyefv/tnZmmpHu4fSguhDBKR2IIudEQBsljNxLCG1lJ
IZSmhfCqvqHIboRiDvQf5Lh5l7d8Mmb3JY/4Id77Qjff6jt+mXTzJ49JUPcQ
z70+USZ7E5EP+pRYz6M6VabYpcknfabM4Fk9Hvv+1BBO5AQvlNpNUcapvk32
ku0zWmUF08wyw5mb/tjc7y1306euZI4F5jl3U2Ufta+WlSyaL7HCMhduas3r
qGHVbI0N8r1bl5duGuwaqWfTbIsdtrmybzZvoYk9s30KvD+M/f9cu+mSA3SS
7u4fqjg7ig==
           "]], 
          Line3DBox[CompressedData["
1:eJwVzj1LQmEYh/E7SM2ippbGGlzSqaUChbagQRLSRZeGXpZaQgxpDT/A+QBu
lUvQJE1FuKXQIuQcrg1BDS39Gi7+bw/3OauH55WzmYgooz4bMUVvPqJBj1IR
x/jklxciTmk7HXGRidjVl2hB/637QUs+wZ7tCb/eX+Fe15SL3t7wt7hDx/bm
W5e2JSTyRF5za0Xuyh/yNT/9v6l/xqI7PVui25FzdEP3oBvIE+R1j/I+fZW/
3BnSEV70B/qUf0hjDhkM9VV7lq/ZN/ktbGNsW6d1/TvyfAMF9PEHLncqdw==

           "]], 
          
          Line3DBox[{1118, 998, 1864, 1863, 2731, 1119, 1264, 2736, 1131, 
           1270, 2738, 1141, 1278, 2741, 1152, 1287, 2743, 1163, 1297, 1175, 
           2781, 1407, 1828, 861, 862, 2536, 585, 1513, 1408, 2754, 1484, 
           1420, 1421, 2759, 1890, 956, 1738, 2844, 1737, 1212, 1758, 2846, 
           1759, 1221, 1763, 2848, 1764, 1893, 961, 1752, 1751, 1774, 2851, 
           773, 1598, 537, 571}], 
          
          Line3DBox[{1120, 1255, 2732, 1121, 1265, 2737, 1132, 1271, 2739, 
           1142, 1279, 2742, 1153, 1288, 2744, 1164, 1298, 2745, 1176, 1409, 
           2809, 1677, 1830, 1829, 1833, 2856, 1831, 1832, 1678, 1835, 1834, 
           2857, 1485, 1837, 1838, 1836, 1927, 2858, 1926, 1925, 1755, 2845, 
           1756, 1757, 1761, 1762, 1760, 2847, 1364, 1590, 1766, 1767, 1765, 
           1366, 1591, 1771, 2850, 1772, 1770, 1371, 1803, 1455, 1721, 1456, 
           1457}], 
          Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvHPhbs6p9zJv1K6mGRQmEw2I0YDpWSRc1cWymCw2OwOE91k
UAxKZJHFcKvNhDOd5BReN7x7Ps/zfD71/f3yy4X59URErOC5NWK6LaKCqnmK
JtojTukjP0mDP6G3/Bj9S0f8JiMOzVeyETqRihi1N06r/JH+GGWc2xmW5fR3
fMlOEU+yOb5inqVn9gZlN+YNWQEPfBefQ9p92U6vrMF/0B1kzfvo1nfSAzsZ
+ZD7Gr1HhzyPDPb0LbJ3bCIl+/JNSbqt+26+w+1b8y3N/yHfRaCoq2NA/6q7
xg+2dA26qquhR78ku5R9omSu0wXdC7L6RdmFrJ+uoQ8z+AdRWzQl
           "]], 
          Line3DBox[CompressedData["
1:eJwVzy1IQ2EYxfFn7E5B2YrFNQ0LOhhYTKYNg2AQsRkcwsCg86sYFr1abOsK
JkUNxtWBCmpZMFgsYhWDK8LA38Kfc55z3ud9753e3F1tZiJiBR9JRDUXsTgS
cUt/xiLeZAv8FZqjETt4lc2bEz6LS744bsfeHW7QdWZO/sKvYdu5c/MsP4OO
vmx+4gfeeaQ1Z6q415V0PbRxbS64f4pf0j/TFJ/2LnST/Jn9Zfoua8vy/AOy
9o7oqSyhjeG30Yo85U9wjJb+D/u6PRzwffy673D437It8zca/DqdcMcX3TDX
8Q+aNys7
           "]], 
          Line3DBox[CompressedData["
1:eJwVzz9LQlEcxvFfkAk2NAo2RbRb0eSY5lTEXWxLHYIMEhRsa41eQC8gghZp
cgkac2gIobIaGpqitoxqa+jj8PB9/txzDneu3kz2JyIiodfJiNVUxNpUxAV+
ZSKedU/yIxVoS1/BIg1sQ8ykIx7wjs7sH851dH37krzN39hqeKUrYX7aHbis
3/BNT9/nZ/XXuEjr+q5+hGn9J77TEb1549SW4+d9+yKfyDPyPX/Mp/hzb9zK
h/If/fItfZtv2PZoxd27uEkNWzKmvebeLF/FS32ZduQD+tEtOPeNdX2RcuN/
xH9rYi2D
           "]], 
          
          Line3DBox[{1454, 1374, 1607, 1373, 1773, 1597, 1370, 1596, 1369, 
           2849, 1769, 1768, 1744, 1746, 1743, 1892, 1891, 1363, 2868, 1888, 
           1362, 1589, 2762, 1360, 1588, 1359, 1603, 1602, 2758, 1419, 1586, 
           1418, 1483, 2753, 1417, 1512, 1416, 1614, 2828, 1574, 1573, 1572, 
           2780, 1174, 1296, 2771, 1162, 1286, 1151, 2740, 1277, 1140, 1871, 
           1873, 1870, 1923, 1922, 2735, 1385, 1465, 1384, 1778, 1781, 1895, 
           1350, 1862, 1349, 1521, 1563}]}, {}, {}}}, 
       VertexNormals -> CompressedData["
1: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
z/HS1csGJ9TvvDP1qGa7/5pcz/8AtllGyg==
        "]], {}}, {{{{
         RGBColor[1, 0, 0], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{7.532169851483857, 0.43928500403754356`, 
          3.276280255134095}], 
         Point3DBox[{-8.27553146091735, -2.441740913902283, 
          32.44140206255657}], 
         Point3DBox[{-9.767108540615066, 8.54532326684324, 75.8507626027968}], 
         Point3DBox[{
          0.8751353390213623, -0.41336659055150804`, -3.548594757898639}], 
         Point3DBox[{-5.093015444385905, 5.19792003123176, 36.5216897673246}], 
         Point3DBox[{
          9.699859950886086, -5.659097568733227, -7.856693688350028}], 
         Point3DBox[{-0.8196562614982383, 7.694583374099061, 
          25.359283126093878`}], 
         Point3DBox[{
          1.6770857198029745`, -4.720536649999396, -16.669167121601717`}], 
         Point3DBox[{8.391203247282576, -1.5232955420576921`, 
          1.2032872408710427`}], 
         Point3DBox[{9.745806233326164, 1.7588531238907024`, 
          16.720932507889813`}], 
         Point3DBox[{-8.343902132101434, 5.804292609629471, 
          57.2989175731084}], 
         Point3DBox[{3.9231786572069467`, 5.037324677170886, 
          14.864062570150063`}], 
         Point3DBox[{-1.9690154632734114`, 2.654825152373398, 
          13.90498794447268}], 
         Point3DBox[{
          6.487894417457689, -7.8892331571369425`, -24.805683931849934`}], 
         Point3DBox[{-0.574767011026335, -3.8000100540514694`, \
-7.6006014511772655`}], 
         Point3DBox[{
          5.63604641693717, -5.672639397142522, -19.050846876405778`}], 
         Point3DBox[{-5.767939044480208, 7.587559036784157, 
          45.9566289466489}], 
         Point3DBox[{-1.8369900352007882`, 3.5735232771114838`, 
          17.253826840556275`}], 
         Point3DBox[{
          7.1207507000379096`, -9.843640858669836, -28.02505238847208}], 
         Point3DBox[{
          3.036030417159111, -3.5222105206380334`, -13.814822411979726`}], 
         Point3DBox[{3.157587758379549, 5.339539173669166, 
          15.437600513817555`}], 
         Point3DBox[{
          2.120030164211755, -9.489474126798164, -30.9606134139559}], 
         Point3DBox[{2.323901151034555, 2.3202839452223216`, 
          3.4399892653425943`}], 
         Point3DBox[{
          6.9368646162035645`, -2.1906790427126808`, -4.522237151098127}], 
         Point3DBox[{8.761616639853791, -2.4685540701046484`, 
          0.5146145337819821}], 
         Point3DBox[{
          8.017288385448673, -7.581970512011182, -18.707391062560454`}], 
         Point3DBox[{-5.4601148928801635`, 9.7267584128641, 
          49.785964114735044`}], 
         Point3DBox[{
          6.293337898999155, -7.00694076321178, -21.79989624786244}], 
         Point3DBox[{
          8.115893178376233, -5.1941755373756635`, -9.627611148700797}], 
         Point3DBox[{-5.975536412760931, -9.050596810932259, \
-2.270484246706811}], 
         Point3DBox[{
          3.9469344992863427`, -7.569937332483967, -22.939620873891638`}], 
         Point3DBox[{2.4030904537320836`, 6.437752470104684, 
          17.303489421945898`}], 
         Point3DBox[{
          9.66367462201812, -5.353760520895463, -5.708226943188199}], 
         Point3DBox[{-8.271513838578578, 9.997696347239945, 
          66.1172306350519}], 
         Point3DBox[{-2.987937502329004, 4.187066425987666, 
          23.90784713369778}], 
         Point3DBox[{-0.8653390099878422, 1.278606136950117, 
          8.039671114702942}], 
         Point3DBox[{9.437274834375664, -1.75615599947335, 1.61854000988839}], 
         Point3DBox[{1.4364085889291047`, 
          0.1089073403148717, -2.125002464776366}], 
         Point3DBox[{-2.234563640029336, -0.6176209028173076, 
          4.367560753598508}], 
         Point3DBox[{9.38817914578911, 7.587932282991098, 32.33708716514548}], 
         Point3DBox[{
          7.714639161866863, -1.2764563664904038`, -0.7991161552846284}], 
         Point3DBox[{
          8.370863093285365, -7.547695936210445, -18.260089980426883`}], 
         Point3DBox[{-0.5288860103022586, 1.5699491353374455`, 
          7.367148676381714}], 
         Point3DBox[{-8.775192430608566, -6.69488748657621, 
          20.76438974343391}], 
         Point3DBox[{-7.405652508367524, -2.925910804481834, 
          21.9004528767356}], 
         Point3DBox[{-1.1184679593198013`, 6.520110066718658, 
          23.090164786902882`}], 
         Point3DBox[{6.634034690162764, 8.82215772501268, 
          28.112169866336068`}], 
         Point3DBox[{
          3.929776292601346, -0.42636389294203525`, -3.5006051966649636`}], 
         Point3DBox[{-9.09680105909182, 6.193632783187994, 
          62.34096659776681}], 
         Point3DBox[{-6.989089308251447, -7.778053658409249, 
          5.101933968505335}], 
         Point3DBox[{8.946801618501816, 0.034441671091244075`, 
          7.013830863570251}], 
         Point3DBox[{4.375984588585602, 8.598435523646714, 
          24.271995058019154`}], 
         Point3DBox[{4.130609603091685, 8.726523610528659, 
          23.391814545116063`}], 
         Point3DBox[{-7.903201159134781, 6.9696258121919215`, 
          58.305871430756525`}], 
         Point3DBox[{
          0.3826938762634349, -4.784667061572829, -13.942307176399586`}], 
         Point3DBox[{
          7.407300057039393, -3.6663851288487415`, -7.231441301526239}], 
         Point3DBox[{-4.7505570854639565`, -2.7686332478132236`, 
          7.031341644072315}], 
         Point3DBox[{-6.897021114501413, 6.894271742717862, 
          50.65167248112924}], 
         Point3DBox[{9.388367578781668, 3.863753013691337, 
          18.667807913855725`}], 
         Point3DBox[{
          0.9426473697128444, -3.783311015837022, -13.534599420597248`}], 
         Point3DBox[{-1.7156845171528872`, -3.4143958943290684`, \
-3.345765758731887}], 
         Point3DBox[{-5.157286906391892, 8.26093683914349, 
          43.712098932231896`}], 
         Point3DBox[{-3.9983706610046212`, 8.179137281849663, 
          38.51514402636806}], 
         Point3DBox[{8.728713198213704, 4.8649459476339345`, 
          22.993050048379445`}], 
         Point3DBox[{
          6.357072400171887, -7.877366471828246, -24.83254824249416}], 
         Point3DBox[{-7.312939493169445, -5.323441440495351, 
          14.351349262015749`}], 
         Point3DBox[{6.575806785265868, 2.627169034360321, 
          9.362051595792835}], 
         Point3DBox[{1.4816398007064713`, 1.4131832524128818`, 
          4.22304781963171}], 
         Point3DBox[{2.060500292672586, 7.087202031476011, 
          20.725678250481117`}], 
         Point3DBox[{-6.682163836278473, -5.607614693274556, 
          12.061566732485591`}], 
         Point3DBox[{
          2.5115759109078866`, -9.755205516847386, -31.429838521990334`}], 
         Point3DBox[{-3.803471272266435, 4.8222152862650205`, 
          27.330480754835897`}], 
         Point3DBox[{-9.860908513594637, 1.4403016227420373`, 
          55.102482777289715`}], 
         Point3DBox[{
          8.090836665944735, -7.518773496020195, -16.729837772162664`}], 
         Point3DBox[{0.23392683203084275`, 7.161284597397952, 
          22.829822943478845`}], 
         Point3DBox[{3.5725907814740623`, 5.775099102822182, 
          15.00905671922806}], 
         Point3DBox[{
          6.831074944787588, -6.717569242817287, -19.565183897889703`}], 
         Point3DBox[{1.873405644153884, 4.032903598343822, 9.63101439648813}], 
         Point3DBox[{
          8.763546935956214, -6.958430643929958, -15.003531874013799`}], 
         Point3DBox[{-5.827271168302872, -2.5768012489271968`, 
          16.321641862839396`}], 
         Point3DBox[{
          6.588747266256554, -1.7082292607260818`, -3.994879322188675}], 
         Point3DBox[{-3.427087237127168, -3.2253613631891263`, 
          3.344248990092817}], 
         Point3DBox[{-4.455981362101781, -7.427682966109444, \
-7.586245445668695}], 
         Point3DBox[{-4.3774489686636215`, 8.312171797944607, 
          39.206905751272124`}], 
         Point3DBox[{-1.505718591213565, 6.3018531891365654`, 
          22.70457638984185}], 
         Point3DBox[{-7.022262403237434, 7.332863720636837, 52.424465804089}], 
         Point3DBox[{
          9.939630124540585, -8.317671987117272, -14.024261588891573`}], 
         Point3DBox[{
          7.494443250036731, -8.536392957260613, -21.42947577365701}], 
         Point3DBox[{8.606799406906212, 1.0472343655023408`, 
          7.239523731968577}], 
         Point3DBox[{
          1.68939826415372, -9.979381493390672, -30.999813885393074`}], 
         Point3DBox[{-1.1716813046770795`, 9.518823646529817, 
          32.5392307346978}], 
         Point3DBox[{
          4.033969429873842, -9.412348075147321, -29.620052674577455`}], 
         Point3DBox[{0.18824688601781858`, 9.647708620335358, 
          28.05726570919298}], 
         Point3DBox[{8.428346653358517, 0.2506370812088754, 
          4.2698147466524174`}], 
         Point3DBox[{5.9785021381166175`, 0.2358610392973013, 
          0.49280796390016945`}], 
         Point3DBox[{0.5588089861118846, 4.477788933894111, 
          13.242260026818181`}], 
         Point3DBox[{
          2.6156691351529986`, -2.7914304667269683`, -11.690947081029742`}], 
         Point3DBox[{-3.2987787720692268`, 3.8515352528414653`, 
          21.84282186421442}], 
         Point3DBox[{
          8.707753904861718, -8.685839486779873, -19.829464523625095`}], 
         Point3DBox[{9.891923977092965, 8.857497958871903, 
          37.356621010306526`}]}, {
         RGBColor[0, 0, 1], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         Point3DBox[{-17.131353009265872`, -0.79667594529176, 
          122.14497998552491`}], 
         Point3DBox[{5.749071618235078, 9.705325625469214, 
          28.184135389257122`}], 
         Point3DBox[{2.0123854357893123`, 8.558167223243544, 
          23.18041821671873}], 
         Point3DBox[{-16.42654979569987, -2.917563039600438, 
          106.67474956136765`}], 
         Point3DBox[{-15.764349487448243`, -18.576155049960022`, 
          51.288006733082234`}], 
         Point3DBox[{18.78404182045078, -11.749476145753363`, 
          35.61416266673248}], 
         Point3DBox[{-2.1380352114613643`, 18.125773458725675`, 
          61.632167681062604`}], 
         Point3DBox[{18.236614348648516`, 6.878314085298612, 
          83.66722173240177}], 
         Point3DBox[{11.757794968861617`, -1.938582914194086, 
          12.770522767000127`}], 
         Point3DBox[{
          15.38824682326181, -16.745744977887547`, -8.42473211827788}], 
         Point3DBox[{-2.8517898332893736`, 5.3538256190125395`, 
          24.23432969350361}], 
         Point3DBox[{5.019462921048685, 14.15663781106386, 
          40.12039219768421}], 
         Point3DBox[{-5.946818928995292, 16.82496842852393, 
          75.31575123481431}], 
         Point3DBox[{-1.5606811983436657`, 3.068322736016256, 
          12.207508928426268`}], 
         Point3DBox[{17.39043435966893, 8.542549335055881, 
          83.38525853515479}], 
         Point3DBox[{-13.79288931578963, -19.10270174963855, 
          28.265997075527515`}], 
         Point3DBox[{
          1.471779529375688, -17.360839232243023`, -54.58335400654618}], 
         Point3DBox[{-11.693307429132993`, -0.05398620113852104, 
          63.57551590739411}], 
         Point3DBox[{6.7793756764910995`, 19.88619303959196, 
          59.80578109450175}], 
         Point3DBox[{14.161961741710357`, 2.1123519919886036`, 
          39.826643574833724`}], 
         Point3DBox[{
          2.159221340073813, -7.275235287013338, -24.804682307561738`}], 
         Point3DBox[{-0.3208338352443292, -17.817359314976038`, \
-49.99793007175367}], 
         Point3DBox[{-12.396190888851052`, 7.448990202280527, 
          93.62909940458906}], 
         Point3DBox[{-12.55651038022414, -6.371013023085219, 
          52.5918706375843}], 
         Point3DBox[{
          13.807534697869869`, -17.032590039365544`, -19.38635951409229}], 
         Point3DBox[{6.883075399336562, 9.523437259576554, 
          31.97845054559673}], 
         Point3DBox[{
          13.807040378358508`, -11.966412551931604`, -7.192892149337375}], 
         Point3DBox[{19.93298299665301, -11.813052791079947`, 
          44.21495205840404}], 
         Point3DBox[{5.796872712988673, 14.42756410856694, 
          43.98682543296472}], 
         Point3DBox[{4.267537976512699, 16.209725299786, 
          46.452805330925415`}], 
         Point3DBox[{-2.1398090762346484`, 11.168121760863528`, 
          40.48931373261948}], 
         Point3DBox[{-14.218818499123067`, 7.355207368181311, 
          110.29791650307384`}], 
         Point3DBox[{15.832779306885058`, 1.6457240993565563`, 
          50.946865166214465`}], 
         Point3DBox[{11.763812638663879`, -4.216454668284875, 
          6.287380467513961}], 
         Point3DBox[{-13.378508960992967`, 16.367790763537982`, 
          131.6036468803004}], 
         Point3DBox[{10.666386181757417`, 7.151000955314302, 
          34.596854269339566`}], 
         Point3DBox[{-6.324158760768427, 7.299132329464186, 
          48.36868724188575}], 
         Point3DBox[{17.142283437781956`, 12.501090439303951`, 
          93.81007962514212}], 
         Point3DBox[{-14.96724160594259, -3.0679630198904206`, 
          87.3120680789829}], 
         Point3DBox[{10.86018202354397, 5.406157869605352, 
          31.88412502002243}], 
         Point3DBox[{-1.4656753929374489`, 0.4223630653535153, 
          6.681281014118396}], 
         Point3DBox[{16.53910925129594, 10.62841974463933, 
          81.57001496501104}], 
         Point3DBox[{13.290207213382374`, 12.253562962616755`, 
          65.24097229965977}], 
         Point3DBox[{-9.687347709351613, -14.189446392633755`, 
          6.960979021836408}], 
         Point3DBox[{-15.130121291062991`, 7.965385969908226, 
          125.77289752718744`}], 
         Point3DBox[{
          7.761395381048061, -1.2370224437211803`, -1.8526648137801178`}], 
         Point3DBox[{-8.143600809160418, 5.634863747084225, 
          52.976336203861095`}], 
         Point3DBox[{-5.11325410838171, -9.451872251393581, \
-11.003888782518665`}], 
         Point3DBox[{-14.89334350472133, 9.764271084100685, 
          125.92449443423982`}], 
         Point3DBox[{-14.508731400563981`, 4.641963424108951, 
          105.22587831196296`}]}}, {}, {}}, {}}}, Axes -> True, 
    AxesLabel -> {None, None, None}, 
    AxesOrigin -> {Automatic, Automatic, Automatic}, BoxRatios -> {1, 1, 0.4},
     DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {360., 338.3583782140986}, 
    Lighting -> {{"Ambient", 
       GrayLevel[1]}}, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"}, 
    PlotRange -> {{-29.999995714285713`, 
     29.999995714285713`}, {-29.999995714285713`, 
     29.999995714285713`}, {-81.87503100981927, 197.4054703204506}}, 
    PlotRangePadding -> 10, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.42769327351158737`, 
    ViewPoint -> {0.766798375376175, -2.6594832406443487`, 1.946578830731569},
     ViewVertical -> {-0.15937217512957624`, 0.5527497741165831, 
     0.8179658898808275}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"training\"", "\"validation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[455]=",ExpressionUUID->"61e18720-6e07-4b6b-87c6-26b341eb7b82"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b2220ff7-56f5-4c13-ab53-cc0034589e5c"],

Cell[CellGroupData[{

Cell["Computational graphs", "Section",ExpressionUUID->"036aeff2-bc70-45e7-a28f-e612c1d96fdf"],

Cell["\<\
So far we have only seen networks implementing a sequence of operations with \
a single input and output.
Neural networks are more general than that and they can represent also \
operation with multiple inputs and output.\
\>", "Text",ExpressionUUID->"cee5e5e3-81a0-48f9-8b95-aa25cc71cf6a"],

Cell[TextData[{
 "To demonstrate that, let\[CloseCurlyQuote]s implement the computational \
graph of ",
 StyleBox["MeanSquaredLossLayer", "Input"],
 "."
}], "Text",ExpressionUUID->"bc5de3d9-66fc-44d8-bfed-30e8ed7eb5da"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use the ",
 StyleBox["NetGraph", "Code"],
 " construct to construct a directed acyclic graph"
}], "Item",ExpressionUUID->"6106e28d-20ee-4748-871c-e951d57fae45"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"h", "(", 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], ",", 
     RowBox[{"f", "(", "x", ")"}]}], ")"}], "\[Function]", "y"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.7144538111073427`*^9, 3.714453845787429*^9}, 
   3.714454228818861*^9, {3.717487643643105*^9, 3.717487653630962*^9}, {
   3.7561714832370157`*^9, 3.756171485384791*^9}, 3.756171570981333*^9, {
   3.756171620636023*^9, 3.756171623501032*^9}},
 FontSize->18,ExpressionUUID->"2ca8f9bf-8baf-4947-8772-ceaf9c73967a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[DirectedEdge]", "2"}], ",", 
     RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[DirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*StyleBox[\"f\", \"TI\"]\)\>\"", ",", "18"}], 
        "]"}]}], ",", 
      RowBox[{"4", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*StyleBox[\"g\", \"TI\"]\)\>\"", ",", "18"}], 
        "]"}]}], ",", 
      RowBox[{"5", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*StyleBox[\"h\", \"TI\"]\)\>\"", ",", "18"}], 
        "]"}]}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7561722991657677`*^9, 3.7561723579296513`*^9}, {
  3.7561724512124853`*^9, 3.7561724632717752`*^9}, {3.7561763491824303`*^9, 
  3.756176362126569*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"ed2d0a64-2fc2-4fcf-bd26-e21210621802"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 
      6}, {{{1, 2}, {3, 4}, {2, 5}, {4, 5}, {5, 6}}, Null}, {
      ImageSize -> Small, 
       VertexLabels -> {
        5 -> Style["\!\(\*StyleBox[\"h\", \"TI\"]\)", 18], 4 -> 
         Style["\!\(\*StyleBox[\"g\", \"TI\"]\)", 18], 2 -> 
         Style["\!\(\*StyleBox[\"f\", \"TI\"]\)", 18]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`], 
        ArrowBox[{{1., 3.}, {1., 2.}}, 0.030239520958083826`], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.030239520958083826`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{0., 3.}, 0.030239520958083826], {
         DiskBox[{0., 2.}, 0.030239520958083826], InsetBox[
          StyleBox["\<\"\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)\"\>",
           StripOnInput->False,
           FontSize->18], 
          Offset[{2, 2}, {0.030239520958083826, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, 
        DiskBox[{1., 3.}, 0.030239520958083826], {
         DiskBox[{1., 2.}, 0.030239520958083826], InsetBox[
          StyleBox["\<\"\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\)\"\>",
           StripOnInput->False,
           FontSize->18], 
          Offset[{2, 2}, {1.030239520958084, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.030239520958083826], 
         InsetBox[
          StyleBox["\<\"\\!\\(\\*StyleBox[\\\"h\\\", \\\"TI\\\"]\\)\"\>",
           StripOnInput->False,
           FontSize->18], 
          Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, DiskBox[{1., 0.}, 0.030239520958083826]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Small]], "Output",
 CellChangeTimes->{{3.756172319284483*^9, 3.756172358486479*^9}, {
   3.756172457464028*^9, 3.756172464717861*^9}, 3.75617636326079*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"bc9b9a64-b7e3-45b2-b654-60095e669fa0"]
}, {2}]]
}, Open  ]],

Cell[TextData[{
 "Network input and output can be explicitly created and used with the ",
 StyleBox["NetPort", "Code"],
 " symbol"
}], "Item",ExpressionUUID->"7e53637d-6c30-4ac8-a6c1-e94ba844cc5d"],

Cell[TextData[{
 "You can perform elementwise operation with multiple inputs using ",
 StyleBox["ThreadingLayer", "Code"]
}], "Item",ExpressionUUID->"d7f8aef3-0c8b-4b3d-b396-b71b32b8ba31"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 StyleBox["AggregationLayer", "Input"],
 " to combine data along one or more array axes"
}], "Item",ExpressionUUID->"6e55be28-3b45-46bc-9134-cf73b0ac09a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meansquaredloss", "=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ThreadingLayer", "[", "Subtract", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "->", "1"}], ",", 
      RowBox[{"1", "->", "2"}], ",", 
      RowBox[{"2", "->", "3"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[566]:=",ExpressionUUID->"d767eff7-e78b-4c0a-ae94-f01fa5766735"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Target\"", 
                    
                    Offset[{0, -7}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999852628056`, 
                    0.5500000924423946}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox["\"\"", 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox["\"\"", 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"\"", 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4499999852628056`,
                     0.5500000924423946}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999732051023`,
                     1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"\[Minus]\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmk+M1FQcx5cBlXhRY9SAGkVPxkSQvXByQ+IqGnENOBeEZdu+diWa3bCj
IcBhbkriBUOi7oEos9u+jScTbl41mHgAuXgxUaKQYMJigGTDQiL+vjMd7fz6
ZqYzfa+vRr9JNztt3+/Pp6/v9f3Z5M7uCiojIyO19fRnl3No+9ycc3j3/fSj
OlM7MD3ji1dm3vOn/blt7lo6uZWON+hYR4cv5A+Bv3RHCHlopHzaaTsAlZKs
wA6HL6Jfq9XqWptxKVQ6fmAEVu3fbX7Nw1uq2oxNodLxAyOw+vt3kp+Q39iM
TaHS8aP27tuu/JrtYDhqMz6mUvEDmzan9jni+XWSn+/JRZsxMpWKH9hwfp4X
vtrBT8jbU1PycZtxJlQafmACNpwfaQ31Jz92vsPRR9YC7VRp+IFJklHyWuCF
gtXBa0F1/j5bsSZUCn5g0WTShd+OHR/fQ9cvd7aD0WFb8SZUCn5gwerXZX4P
fVMfYff8vn//5+ttxJuQdX5gABad7Zs8wu9T1VF659+xEXNC1vmBQda2jerp
sc57Maar3110zAlZ5YfcwYC1a8e63e950SPEd4XV1aDImJms8kPurO6tgFHv
MtFxVgd/CUbn7yoqZiZr/JAz8brA2rPj/cq5brSRyt1k5d4uImaFrPFDzqzu
3QSbjGVPsLIXLfXFVvjFfe5FVodOZC0fvLWwgbeD1G4eNBlzF1nhh1x5uwcm
g9jg4xWyccXCmKRwfvF33JW849l9+049SHaus774AxMx91Dh/JAj/94Di2Fs
+Z48yuuxEAuP6Y65hwrlh9zS7ZY8Oqy94LX5e8neJYvzg4XyS87vxfXlEhjk
samYm/mTntM2XTH3UWH8kBNy61wPCkV+y/UKPZdzrB38Hufz2+6rgvjVK8iJ
vWfndOXoO+EYXyfxvXBah+0+KoQfcknlRznr9BGIpS/Ze3zVcU4+pNOHQsb5
IQfk0sGPctXtZ3Lyi0fJz41OP1Go2w+TcX7IgdWLG8jViC8vqvF6jvUnE75i
GeXH185afUZUM+VvbKy+jp7PWT5HaHBcYoxfc5zhyd9Y3TuLHE35hFw3ej65
jhf3VacMuTPGj8ZkDcbuNnIz5S8pajM+TPVXbrjbgCsj/BArj7/IsWlrXlue
Z8/vD9ddfEKzK+38ECNiZbGfL3qdwnEam8nvKovjjOa5aq384jnlMyzmVeSi
009W+a6cTb8H2ecZM0grPz4v3Gp35KxOH4PK96LTirZkSpN5bfwQU3oMFZ3W
ZX9Y7dkTPkD978/8naB25gUN5rXwQyyptoZiRuw67OeVEItbUvNmQi7T+/Js
TtO5+SEGxJKex1zckte2TmFfK5//aa07ySdzmM3FD775OlAzxvLtU26K76GJ
472Qg+HQ/IRobOLrt3GbV4Z9UV2l7ONojOd58pkhzA3FD774vgsD3wamtIae
+4KiHi4P0acMzC/uK5YV/hcQ26D27KheUTEMhLxF/d67AxgaiB9sw4ei3jUK
mi/XqHqFxsmfpBi22qCv9u5tPJzBSCZ+sAWbal/y038fu3+E9b/Uukzrfboa
ePJAn/minvxQFjZS88dxP5tn7bFMon55gu/NTOT5U3OfmHqdUMkP96IMynax
ec13o9cNp1Wogkn5NNWH71T5xjlfp+uR54UOvnnj/UpNfvgf53AN9/B9EXwO
w3HCpwpOb2dBx8To1jdPjo/XVl5+6f07/Y7Nz03cGn+xtprlXtiEbfgoMB8r
wj46ev8+U/WVyQNcel1v9+mwlXVv3n9M1veP/y+z+gujLl/M
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}], 
                    TraditionalForm], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"\[Mu]\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Mean", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    HoldForm[
                    AggregationLayer[Mean]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{26.499998526280645`, 26.5}, {25., 15.}},
                     ImageSize -> {272.99999999999994`, 94.99999999999999}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Subtract],
                     "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[Automatic]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[#^2& ], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 6.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[566]=",ExpressionUUID->"35fc928a-6388-4c90-bd6d-b07c619b8de9"]
}, Open  ]]
}, Open  ]],

Cell["The result is the same as the built-in layer.", "Text",ExpressionUUID->"5ad11e66-d14a-4074-bfe1-a68def756603"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meansquaredloss", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "->", 
     RowBox[{"{", 
      RowBox[{".1", ",", 
       RowBox[{"-", ".3"}], ",", "1.5"}], "}"}]}], ",", 
    RowBox[{"\"\<Target\>\"", "->", 
     RowBox[{"{", 
      RowBox[{".5", ",", 
       RowBox[{"-", ".2"}], ",", "1.2"}], "}"}]}]}], "|>"}], "]"}]], "Input",
 CellLabel->
  "In[567]:=",ExpressionUUID->"02393d0b-b056-4662-b019-3e184bd4317e"],

Cell[BoxData["0.08666666597127914`"], "Output",
 CellLabel->
  "Out[567]=",ExpressionUUID->"53f7d788-6ad0-4379-97bb-df79e7a7b249"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MeanSquaredLossLayer", "[", "]"}], "Input"], "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "->", 
     RowBox[{"{", 
      RowBox[{".1", ",", 
       RowBox[{"-", ".3"}], ",", "1.5"}], "}"}]}], ",", 
    RowBox[{"\"\<Target\>\"", "->", 
     RowBox[{"{", 
      RowBox[{".5", ",", 
       RowBox[{"-", ".2"}], ",", "1.2"}], "}"}]}]}], "|>"}], "]"}]], "Input",
 CellLabel->
  "In[564]:=",ExpressionUUID->"d53d9f14-d373-4c90-94af-83687224d44d"],

Cell[BoxData["0.08666666597127914`"], "Output",
 CellLabel->
  "Out[564]=",ExpressionUUID->"fa8a749d-1133-4e70-befb-cbbf60937077"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c1095d58-de2e-4052-8756-dd15ed2438b6"],

Cell[CellGroupData[{

Cell["Computational graphs", "Section",ExpressionUUID->"791e7d44-f0dc-4618-9d9b-1aedd8031a41"],

Cell["\<\
Another example of network graph is a classifier that handles different types \
of inputs.\
\>", "Text",ExpressionUUID->"5e9ca3de-58bf-41a7-be44-045b183ede2e"],

Cell[CellGroupData[{

Cell[TextData[{
 "The Titanic survival dataset contains ",
 StyleBox["String", "Input"],
 " and ",
 StyleBox["Quantity", "Input"],
 " expressions"
}], "Item",ExpressionUUID->"ccff289f-2635-4c6f-9d2e-47a3957f6726"],

Cell[BoxData[
 RowBox[{
  RowBox[{"titanicdata", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{
     "ResourceData", "[", "\"\<Sample Data: Titanic Survival\>\"", "]"}], ",",
      "1", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[620]:=",ExpressionUUID->"f946c137-8172-4fe3-b0da-d1783a2332e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "titanicdata", "]"}]], "Input",
 CellLabel->
  "In[621]:=",ExpressionUUID->"37ef3cc6-2719-4049-a05b-698c30fe33e3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Class" -> "1st", "Age" -> Quantity[29., "Years"], "Sex" -> "female", 
       "SurvivalStatus" -> "survived"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Class"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Age"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Sex"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"SurvivalStatus"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{"Class", "Age", "Sex", "SurvivalStatus"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Years"]], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Class"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Age"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Sex"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"SurvivalStatus"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001]|>, 1], "Type" -> 
     TypeSystem`Struct[{"Class", "Age", "Sex", "SurvivalStatus"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Years"]], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Class", 
                  Style[
                  "Class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Class"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Class"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age", 
                  Style[
                  "Age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Age"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"29.`", "\"yr\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sex", 
                  Style[
                  "Sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sex"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sex"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SurvivalStatus", 
                  Style[
                  "SurvivalStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SurvivalStatus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SurvivalStatus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SurvivalStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{192., {59.63403328722343, 65.36596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{192., {59.63403328722343, 65.36596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[621]=",ExpressionUUID->"558498ba-8bd1-4949-adea-f784209fe8cb"]
}, Open  ]]
}, Open  ]],

Cell["Use the appropriate encoders and decoders on each port", "Item",ExpressionUUID->"95cb1d47-2e9e-4cd9-bea6-0d47e99a14da"],

Cell[CellGroupData[{

Cell[TextData[{
 "Multiple arrays can be joined together using ",
 StyleBox["CatenateLayer", "Code"]
}], "Item",ExpressionUUID->"eef73c08-785c-49a1-b245-6aabb11413e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanicnet", "=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<SexFeatures\>\"", "->", "5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<ClassFeatures\>\"", "->", "5"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<AgeFeatures\>\"", "->", "5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Features\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Classifier\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"15", ",", 
         RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "15", 
         ",", 
         RowBox[{"ElementwiseLayer", "[", "\"\<Swish\>\"", "]"}], ",", "2", 
         ",", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Sex\>\"", "]"}], "->", 
       "\"\<SexFeatures\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Class\>\"", "]"}], "->", 
       "\"\<ClassFeatures\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Age\>\"", "]"}], "->", 
       "\"\<AgeFeatures\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<SexFeatures\>\"", ",", "\"\<ClassFeatures\>\"", ",", 
         "\"\<AgeFeatures\>\""}], "}"}], "->", 
       RowBox[{"\"\<Features\>\"", "->", 
        RowBox[{"\"\<Classifier\>\"", "->", 
         RowBox[{"NetPort", "[", "\"\<SurvivalStatus\>\"", "]"}]}]}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Sex\>\"", "->", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<male\>\"", ",", "\"\<female\>\""}], "}"}], ",", 
        "\"\<IndicatorVector\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Class\>\"", "->", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<1st\>\"", ",", "\"\<2nd\>\"", ",", "\"\<3rd\>\""}], 
         "}"}], ",", "\"\<IndicatorVector\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Age\>\"", "->", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Function\>\"", ",", "QuantityMagnitude", ",", "\"\<Real\>\""}], 
       "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SurvivalStatus\>\"", "->", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<survived\>\"", ",", "\"\<died\>\""}], "}"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[731]:=",ExpressionUUID->"4809139b-f169-425a-a43e-a0aab6ffb480"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"SurvivalStatus\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Age\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"AgeFeatur..\"", "\"AgeFeatures\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "AgeFeatures", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -13.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Class\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"ClassFeat..\"", "\"ClassFeatures\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "ClassFeatures", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Sex\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999464102047`, 
                    2.0000001071795874`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"SexFeatur..\"", "\"SexFeatures\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "SexFeatures", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    
                    Offset[{0, -13.5}, {-2.999999946410205, 
                    2.0000000803846905`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Features\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Classifier\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"SurvivalS..\"", "\"SurvivalStatus\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "SurvivalStatus", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-3.449999946410205, 
                    2.000000092442394}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"15\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.4499999611473986`, 
                    1.4500000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Age\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Age", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Class\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Class", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999464102047`, 
                    2.0000001071795874`}, {-2.999999946410205, 
                    2.0000000803846905`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Sex\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Sex", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"SurvivalStatus\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "SurvivalStatus"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 15\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 15\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Age\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Age", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Class\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Class", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999946410205, 
                    2.000000092442394}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Sex\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Sex", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"SurvivalStatus\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "SurvivalStatus"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 15\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 15\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999611473986`, 
                    1.4500000656474974`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Age\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Age", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"AgeFeatures\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["AgeFeatures", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Class\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Class", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"ClassFeatures\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ClassFeatures", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999464102047`, 2.0000001071795874`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Sex\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Sex", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999946410205, 
                    2.0000000803846905`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999946410205, 
                    2.0000000803846905`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999946410205, 2.0000000803846905`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"SexFeatures\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["SexFeatures", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Features\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Features", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.732, 0.732, 0.732], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.33], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Classifier\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Classifier", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"SurvivalStatus\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["SurvivalStatus", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-3.9999999464102047`, 
                    2.0000001071795874`}, {-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 8, 21, 21, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {278.0000014737193, 158.0000014737193}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Sex\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Sex\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Sex"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Sex\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Sex"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Class\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Class\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Class"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Class\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Class"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Age\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Age\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Age"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Age\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Age"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"expression\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"SurvivalStatus\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"SurvivalStatus\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"SurvivalStatus"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"SurvivalStatus\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"SurvivalStatus"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "SexFeatures" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{5, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "ClassFeatures" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{5, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 3, "$InputDimensions" -> {3}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "AgeFeatures" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{5, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Features" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|
                    "Input1" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Input3" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{15}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Classifier" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{15, 15}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {15}, "$OutputSize" -> 15, 
                    "$InputSize" -> 15, "$InputDimensions" -> {15}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {15}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{15, 15}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {15}, "$OutputSize" -> 15, 
                    "$InputSize" -> 15, "$InputDimensions" -> {15}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter["Swish"], 
                    "$Dimensions" -> {15}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{2, 15}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 15, "$InputDimensions" -> {15}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{15}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Sex" -> <|"Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"male\"", "\"female\""}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 2, "$Version" -> "13.0.3"|>, 
                    "Class" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"1st\"", "\"2nd\"", "\"3rd\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.0.3"|>, 
                    "Age" -> <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    QuantityMagnitude, "OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "Pattern" -> NeuralNetworks`ValidatedParameter[None], 
                    "Batched" -> False, 
                    "Initialization" -> (Initialization :> None), "$Version" -> 
                    "13.0.3"|>|>, 
                    "Outputs" -> <|
                    "SurvivalStatus" -> <|
                    "Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"survived\"", "\"died\""}, "InputDepth" -> 
                    1, "Multilabel" -> False, "Dimensions" -> 2, "$Rank" -> 0,
                     "$Version" -> "13.0.3"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "SexFeatures", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Sex"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClassFeatures", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Class"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "AgeFeatures", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Age"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Features", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SexFeatures", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Features", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClassFeatures", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Features", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AgeFeatures", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Features", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "SurvivalStatus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Classifier", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Age"], 
                    NeuralNetworks`NetPath["Nodes", "AgeFeatures"], 
                    NeuralNetworks`NetPath["Inputs", "Class"], 
                    NeuralNetworks`NetPath["Nodes", "ClassFeatures"], 
                    NeuralNetworks`NetPath["Inputs", "Sex"], 
                    NeuralNetworks`NetPath["Nodes", "SexFeatures"], 
                    NeuralNetworks`NetPath["Nodes", "Features"], 
                    NeuralNetworks`NetPath["Nodes", "Classifier"], 
                    NeuralNetworks`NetPath["Outputs", "SurvivalStatus"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Age"], 
                    NeuralNetworks`NetPath["Nodes", "AgeFeatures"], 
                    NeuralNetworks`NetPath["Inputs", "Class"], 
                    NeuralNetworks`NetPath["Nodes", "ClassFeatures"], 
                    NeuralNetworks`NetPath["Inputs", "Sex"], 
                    NeuralNetworks`NetPath["Nodes", "SexFeatures"], 
                    NeuralNetworks`NetPath["Nodes", "Features"], 
                    NeuralNetworks`NetPath["Nodes", "Classifier"], 
                    NeuralNetworks`NetPath["Outputs", "SurvivalStatus"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[731]=",ExpressionUUID->"92b3a838-1236-4fd1-9525-652f5f0f2eda"]
}, Open  ]]
}, Open  ]],

Cell["Remember to keep some data aside for validation!", "Text",ExpressionUUID->"ca59612c-2a40-4d2d-8af3-d3ed77a2e58f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"training", ",", "validation"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", "titanicdata", "]"}], ",", "800"}], "]"}]}],
   ";"}]}], "Input",
 CellLabel->
  "In[732]:=",ExpressionUUID->"fe40f5a8-df66-492f-ac6b-b9f3f195a7a6"],

Cell["\<\
A common technique to manage the training time is to keep an eye on the \
validation error.\
\>", "Text",ExpressionUUID->"5bcb78cc-419e-4164-b87c-03692493e8fb"],

Cell[TextData[{
 "Use the ",
 StyleBox["TrainingStoppingCriterion", "Code"],
 " option to control early stopping during the training"
}], "Item",ExpressionUUID->"1a867eb4-5120-48dc-96d5-b7650213efd3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use the ",
 StyleBox["TrainingProgressMeasurements", "Code"],
 " option to perform additional measurements"
}], "Item",ExpressionUUID->"e3d35d50-3630-4d5e-aff5-6052a94b9180"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanicnet2", "=", 
  RowBox[{"NetTrain", "[", "\[IndentingNewLine]", 
   RowBox[{"titanicnet", ",", "training", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validation"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingStoppingCriterion", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Criterion\>\"", "\[Rule]", "\"\<Loss\>\""}], ",", 
       RowBox[{"\"\<InitialPatience\>\"", "\[Rule]", "100"}], ",", 
       RowBox[{"\"\<Patience\>\"", "\[Rule]", "10"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingProgressMeasurements", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Accuracy\>\"", ",", "\"\<Precision\>\"", ",", "\"\<Recall\>\"", 
       ",", "\"\<ErrorRate\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[734]:=",ExpressionUUID->"65f37861-f327-451e-8f06-f1e7aaa6d089"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "1456"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "112"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["4.0s"], 
                  TextCell["4.0s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "23300"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "800"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "246"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "93184"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.09\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], ShowStringCharacters -> 
                    False], 0.40858110707582596`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["acc.:"], 
                    TextCell["acc.:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Accuracy\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Accuracy"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["81.5%"], 
                  TextCell["81.5%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["prec.:"], 
                    TextCell["prec.:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Precision\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Precision"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["82.6%"], 
                  TextCell["82.6%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["recall:"], 
                    TextCell["recall:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Recall\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Recall"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["78.9%"], 
                  TextCell["78.9%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["18.5%"], 
                  TextCell["18.5%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.97\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], ShowStringCharacters -> 
                    False], 0.496865767142991, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["acc.:"], 
                    TextCell["acc.:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Accuracy\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Accuracy"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["79.7%"], 
                  TextCell["79.7%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["prec.:"], 
                    TextCell["prec.:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Precision\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Precision"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["79.3%"], 
                  TextCell["79.3%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["recall:"], 
                    TextCell["recall:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Recall\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "Recall"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["78.5%"], 
                  TextCell["78.5%"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["20.3%"], 
                  TextCell["20.3%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJw1lwlcTekbx7Nrkq0kJZPKWlqlpOVp3/fbvljGf2x9koRkJ6ayTBkhSwuG
IiZphOgxJmNLqnvvWW4hS5Yskz2E/zmPM/fT59Pn3HvO+77f9/d8n/ve0bMW
hv2vp5qamnEPNTXxP5+9nxP+XDQ3+Y+eMPQafr9+4sI0e060u3wdfxq3dNa4
pa9dqhN+Gn6+4ob0eZfLEM2q2Uc/3MDg53VBz+u+ugRaZJu1D7wh3d8ThsaY
lF4yq8dCcfTsPnBv7609C2Pqpef7Q7OFxwzT8zdRe9pJrWknNeDY4fef057e
lMYbCH0TlB9M8SZeDhLfGAxnRm4aVWXWII0/FCbl6ZpVVzaigCG8tGGsubIx
ZlADFtF8w+Abb6f2rP4mOonDaw2Hmg61bMuYRmyh+XXhTr6dxeu4Jlw+SxxQ
D6ydfzd9d6wBh9N69KFkE7+0AJrwT/HxaQbwtc7Uacv9WxhO6xsFVwJz/d29
GjGdnjcEWW2jjh3XjFdovYbQMDUlNse6CXVovNGwZmS/5JTdTfg/Wr8RmHov
yClZ3ohVNL4xBIzJdbq4WI69iMcEapbm7QrCRgyj+Uxgmd4I04Gz5VhCfGPg
TEbb4rvfmrBT/DhoLAxP6vt3fp9mdCHecdCQ9Y+58dQm3EbxjoOLW79s0rog
x9vEPx4+WoyQ9fWXo5m4nFkTIP9newtXKwWuIJ6JkLO31OTC6Wa8TjwTYVy8
d/WkZ804gnhM4ez04Qs/JDfjXOIxA4O0+JZTL5RYTTyToPX5xuu6HQrsSzzm
YJyWt+aVXzNGEI85vEvQN1n9SzMeIh4LGLwsrNchhpHysAT5ZrsNG67IsZg+
twSLYfP9e2TKpf21hKQxby8YP5DjS+K3AoPaLzeiihkcRuuzgvGfUrmioXJ0
pP2whkW/yz3yM5RS/VjD46e56Z/TFZhD+2MN9k+7FnncVCDdPs0G0tU7227t
ViJNv98Gdm3tkZDWk8Vv9LKBCUnd/84pk+NY2r/JkLyjcnGfXAYDiW8ytDzf
8DxPT45pxGMLfl0BvYy8GdxLA9rCiRXOo899kuMl4rGF1mK3VQUdDD4lnimQ
crpw85BFHA4mning0O7Q3tKtQDtaoB0U/x3hWJIgx0TisYOV6Ukt8RcUuJF4
7GCf82DbNZUslhOPPdT3Hfxz269KlBOPPRx04s9l7mHwE/HYQ8oS9UMFGgyO
Jp6pkJGxPdDwCIM+xDMVPmxwvWswWIELiccBOvtH9wt6yeJO4nGAoHsdBTVP
GLxAPA7wq/L+g45VCnxIPNNA0cP6XJSCQw3imQa/thy2Ln/BoTXxOMKDw6M2
1oTJMYZ4HKG5JfTOOn0O1xKPI1T1L4so3arEI8TjBKzFqoytVUpsIB4neKix
yc/+IIfviMcJhk0p+Gt4lhJHEo8zaAXb1q8LZdGdeJwhN4ELuDqbwfnE4wIF
nd13j09jMI94XODf9MKS8MsMniEeF9AbELzrai8eU+h+gLQ0j55RhgrMFKeP
BpiUOCMoHVncTc8DHFj0fM3ke9L+1wA8di+eYt7E40UaD6AjTn124Xs5KsTb
DVzBpdi+dpkXh09ov1xh3sGz3zZWKLFbxFnjCmfXJuvYF7FSPbjC1ow/Vl86
yqGJyHffFVb41gUdm6hEe9pPN8g3XSDbuZPDAHE6DzfoWKR5u9SZxRm0v27Q
z677y0chL6rPI26w8nVl4MwiJWbRfrvBsCt8ZbHAu0+8VHeHrt0uM2xPcVhB
++8OA4p+c61jlEjLTXKHkshr50e85SRf3MH9Zqb/n7dZpO1ucAd941UWX0GB
1A7UPOB4tlP/JBP+e/+38oDmHbI7tYd5HE95eUDhjxX9DErZ7/7+5gEV/xoa
wwYlhtCAHrAjcfQgZz8eZ4s87z3gS9GJBXtnKqR+7AmGOjlH9bVZ3EL5eMKn
3U4Trh3npX7iCWmNlTFJd5jv/bfGE65eHjO1yZPHq5SPJ2wfd9BmxgAGWykf
Lzjp/2T9CGE93/utFxRV6u+Niuewt4iz1gu6Ul8/celmUZfy8YKrBeql59qY
7/31vhc8eRdxKzWXRaB8vKHNWDOzWJhPRvl4g+ZEObeLZ6V+6g3T9e9l16sx
uJLy8Yb1M0s0Yr/xmEv5eIM101tuVMh875/qPsAP6bIaGaDCM5SPD/S5+sBB
NpPFesrHB1LLfM3cR7DYRvn4gMLqvYPxAh7fUj4+cKXzS+jOPA77Uz6+0KPN
4nNBpOAP5eML44b5Hn42jEVLyscXtEyH6NfMU6EH5eMLVzmLvy5vZDCa8vGF
kB8zPx4U+nES5eML+13b51dcFnymfPxAqbSHezd43EH5+MGZ5F9WlpbwWEr5
+EGXkZHJsVYFnqd8/GCwy+KWdcL9jZSPH2zm6iaVy1h8SPn4w1T7vHGr9rHY
Rfn4w58fz/dZksHiAMrHH85P6VIr+MqhIeXjDyfu6N1V6bM4mfLxhwNb3n9d
uJdFH8onACbJfd3SD7ViPOUTAKMSA8rWCf0zhfIJgNNLmVdePTnMpHwCIO1R
zjPH6SrcTfkEwPpjvu7q63ksp3wCwU5L137tKhYvUj6BEG39w94hk3lUUD6B
0OdF/D3lXAafUD6BoFGff2aVI4fdlE8glG+J0D22XvCf8gkCu606Hvf7Cv5T
PkEQe+FE7fI+KrSnfIJgy/GmXONmBgMonyA4mFOmfsKfwxmUTxDEp9dvXRrP
YhrlEwSJOSscg5dzmEX5BMM/BwKm6QxncB/lEwyl83sGja3hsYLyCYZ3p2/J
eQ8e6yifYEg1V2vPUmeRo3yCIcY2O7u+QIXv6TgXAs8c99kOePpf/iEw/Y/t
ezKvsfiDiAMhsH22VcJqH1aqhxCoLi1z2L1JhaNEvkUhYDA3J+9YBiPVRwik
7uyqqRwifH+IvAdCoNVzZFOrMP/3egmBSzuTImcpVOgl8stDYOWVzBvRv7FS
/YTAuTe+C95o8hgrXvYOhUFh9h39dFVSPYWCQy+P6qjFLCaLy50SCrNPytos
cjipvkJh+pF3fsxtDteLPHNC4dPD7TZXQhip3kJhr3xeyKOQFtwp8uwOBZ38
oE6vs//VXygk7Zgy3eQRg0dFnmuhsMurOr1np0qqx1BY8ibVVm0bh7Uiz+dQ
2LakVntlLC/VZxiUln22MBDOS83icszCwC0rtKLOmJPqNQx6zfTUmzuax0ci
T0IYHPCvmKP5KyvVbxg0NF7Q0mc5/CTybAuDp07OEwpseamew8BocLyVUyeP
A0Wei2Gw9H/z85yE/vG9vsNgVVrqmIf3OTQSeV6FwTL7BY8W7VNJ9R4O0Ytu
qek9ZnAKHXfDwW3eZ167nZfqPxzmfj54akcgi34iT3g4nDEo6mGY9J8P4dBe
7lbmOoHBRJEnMxwm6ipsN9xSSX6EwySd095VDIupIs/pcDg1W87Yv1dJvoRD
ndvylC/GLG4SeR6HQ2yN0ly/i5f8kUFkgsYvZUI/3kM/B2RgYlsUpT2VlXyS
QXPVp+E1nzg8IfL4ysDxbx+9f7NZyS8ZzHl0Kn+WsL+XRJ4VMohJadVT/chL
vsmAs4laMGglg4zIUy6DijnZBYvVWiX/ZNBw5vyX4loWO0Se2zJYJ9t8o3ks
L/kogyjzp+XjZ7bgV/InAp5t/xAtu62Q/IyAoPh7ubI4FoeSPxGQ7uv8ynd9
i+RrBLi9GbimpyODY8kf4drzwjlLdZXkbwT0tZtvYyzk70D+RECnoWf8H26c
5HME3KzyuRAs1G8Q+SPMr5+fHRXMS35HwP496Tuf6ylxFvkTCScCGpZ9KVfh
c/InEtp/kBu4veJxKfkTCba7wgz2TuJQjX7QRYKmLqwpzOMxh/yJhNgbvNuj
Bha1yZ9I+KPfmN7aV3ksJH8iIXEM65vsI5wPyB/h2idR/e02FivJn0iwNpmb
UP6ZR0fyJxLWDn3x0lBDhf+QP5Fw4Oz43knhHIaQP1Eg77gzaNI0HlXkTxTw
Xbfd4n9ncTb5EwWBWWYdA2by+JL8iYJbg1cNOyach9LJH+F+eVjGpUYWe4o8
26IgaHXBo1FCP9lC/kSBVcB4w01CPeqQP1GAo2aO//0Bi8XkTxS0J8dp72hn
cSL5EwVTjh78y3u+CqvIn2hw/GqkXn6CR2fyJxq0mM1JqrssXiV/oiF+x8Q+
NkJ/CCN/ouF6XekcTVceW8mfaDCeVxUSpcXjz+RPNMyYeSXT4wCDndnfD6zT
O17kj9JqwQzyJxqOLLZxvP5GOM+IPA3RkFKbfOlcAI/byJ9o0L42dPryHRzq
kj8xsHqs2oclB3g8QP7EwMDCzvZkIV8z8icGzhfNuT6mlsPT5E8MDH/80bFM
JZx/yJ8Y+Ny8c2IIqPA6+RMDmjmRH50shfMQ+RMDqRu1KjtjObxD/sRAoFZk
iuYDFc4lf2LA+tUPJQ9HcPia/ImBW0t0d03+WYUryZ8YqP7Up9toO4N9RZ6B
sZCWmLaue55wfiJ/YmGFvdWoqmoe9cifWLhYkfWLlfB9foi2JxayzPN01DtU
aE7+xEKG0Ye2YDMOz5A/sRCZWmI8fiuLbuRPLAQX2285/o7HevInFh6bTfaN
CuQwkvyJha0W3Q5J6SpsI39iYf21rDvdhRzOJ3/iIHPbusXFwv6+JX/iYEnp
18qTpjyuJn/iwGH3hlwNmXA+I3/iIO/yOpdE4ft8O/kTBwMMbT5kCvUykvyJ
g0v79luO0VbhYfInDkZbhhsa7OfRkvyJg7Sfqu+EKzk8R/7Egd8wE/cPMh49
yJ84ODn0heVLjsEG8icOWj5GaFQdV+H/AUrkBgw=
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1: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

                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[CompressedData["
1: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

                    "]]}}}, Prolog -> {{
                    Text[25, 
                    Offset[{-2, -2}, {25., 0.21100000000000002`}], {1., 1.}], 
                    Text[50, 
                    Offset[{-2, -2}, {50., 0.21100000000000002`}], {1., 1.}], 
                    Text[75, 
                    Offset[{-2, -2}, {75., 0.21100000000000002`}], {1., 1.}], 
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.21100000000000002`}], {1., 1.}], 
                    Text[125, 
                    Offset[{-2, -2}, {125., 0.21100000000000002`}], {1., 1.}], 
                    Text[150, 
                    Offset[{-2, -2}, {150., 0.21100000000000002`}], {1., 
                    1.}]}, {
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 112.03846153846152`}, {-0.911, 
                    0.21100000000000002`}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{25., 50., 75., 100., 125., 150.}, {{-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.5228787452803375, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.30102999566398114`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.1549019599857432, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {-0.04575749056067506, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.47712125471966244`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.6989700043360187, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.8450980400142567, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}, {0.9542425094393249, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJxdVXtMzXEUv5LGvGNeySRTCVH0vPl9b0pXSt1u3et2F/OIvFaRVSylWFpo
3uQVwxrmtVFpjAzJH4j1ErZruvfHCLEeNvy+3299vlvttva553vO+ZxzPufk
sjIlNslOpVKlKr/0b+iI8IJpXVapyvG2p67KInHcIbmXZ24ucrNK6lnL7vTr
tifOvnUrXJ1bpfg34zxSO4aSHFPbsd87ZMkncuunlu6RwORs3aTDWWMIcy+3
SZE/vZYu7pxAnOQbB4Y5yT3+zmRZYfORskRZujkqSPm4kKNlico3NsnvnhyV
ss2VNGoL9qU32nryTyXqyseHzGpZqm4Yok8McEM+7c6qtopMD+AX09fvHV3h
Cfz65Ptfl/xmApvC9h2wy/ACH4XLWK+3s4EZ3ZI5pHvcqeKHXTbp9q7r4y/d
9YY9s8nBpm/2AZ/ukZqJziVzYb+/5vjn2sp5wIxeky/q7f/L46vmhB/684QV
4I98hacblU8A8OB6RyVkIPLx+oLgfzDnYUJ1gxr9Gl3xZ3/RsWBg1q7y+aTU
w74kpFSWSlZc9rTWS+jHsChaMQE/3g8C/1fnFv0dsEEDuyMrUAM+6cmUQQj4
MrqfQxBfCabKjlgAzPsncHO+t1JSKOI7lUavG14rcHbE9phWUxj402nek8P6
6G0h8vN+L8R7SxKNGA7M9R0O/90zVrsMNmmRz1pfPNBi0+I919civOfzEfhL
uH1aenIE/LneI0h1FyUkS/t7Gtwbj7JzsC2Gv27VhQfvMiJh5/OMhH87lcva
KPLx2cwzLZbe/YmC/9Hv8x7FGZfAv5MNWGCu92j48/lHg68y3EHLfWIQj41r
u8B0GuorMYiXO/9isHu7sPP91YGvxfZy6r88HfRpl/Eh7cctHfab3wvxnna/
JiQWmK3b5ljw5fsXi/ytrCA98lM15XvrSToTbO/90KM+Js9qPfRcOJlORLyv
/O2a5x8Yh3zK8irfxCE+ZTfmlsD8Hgm8kS10PDDt9oe0eMTj9yAe9X0LogEM
sNPuls0xgC/XswH1prEFM+CesPA/hJ3fQyNw+9XzykkxIh4bz00j9pXrX7xn
11uzFPyPbKGKFpjfJ4HZeVCZgN1ZQlOfe2xC/CwDVbiwU/UVD0wAZu32T0B9
9Hptyk2AP1vPGvGe75fA2U8fP/clZuBrp8zSlD3mPv8PzNDfP/Yj7P8B3zyH
iw==
                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[CompressedData["
1:eJxdVXtMzXEUv5LGvGNeySRTCVH0vPl9b0pXSt1u3et2F/OIvFaRVSylWFpo
3uQVwxrmtVFpjAzJH4j1ErZruvfHCLEeNvy+3299vlvttva553vO+ZxzPufk
sjIlNslOpVKlKr/0b+iI8IJpXVapyvG2p67KInHcIbmXZ24ucrNK6lnL7vTr
tifOvnUrXJ1bpfg34zxSO4aSHFPbsd87ZMkncuunlu6RwORs3aTDWWMIcy+3
SZE/vZYu7pxAnOQbB4Y5yT3+zmRZYfORskRZujkqSPm4kKNlico3NsnvnhyV
ss2VNGoL9qU32nryTyXqyseHzGpZqm4Yok8McEM+7c6qtopMD+AX09fvHV3h
Cfz65Ptfl/xmApvC9h2wy/ACH4XLWK+3s4EZ3ZI5pHvcqeKHXTbp9q7r4y/d
9YY9s8nBpm/2AZ/ukZqJziVzYb+/5vjn2sp5wIxeky/q7f/L46vmhB/684QV
4I98hacblU8A8OB6RyVkIPLx+oLgfzDnYUJ1gxr9Gl3xZ3/RsWBg1q7y+aTU
w74kpFSWSlZc9rTWS+jHsChaMQE/3g8C/1fnFv0dsEEDuyMrUAM+6cmUQQj4
MrqfQxBfCabKjlgAzPsncHO+t1JSKOI7lUavG14rcHbE9phWUxj402nek8P6
6G0h8vN+L8R7SxKNGA7M9R0O/90zVrsMNmmRz1pfPNBi0+I919civOfzEfhL
uH1aenIE/LneI0h1FyUkS/t7Gtwbj7JzsC2Gv27VhQfvMiJh5/OMhH87lcva
KPLx2cwzLZbe/YmC/9Hv8x7FGZfAv5MNWGCu92j48/lHg68y3EHLfWIQj41r
u8B0GuorMYiXO/9isHu7sPP91YGvxfZy6r88HfRpl/Eh7cctHfab3wvxnna/
JiQWmK3b5ljw5fsXi/ytrCA98lM15XvrSToTbO/90KM+Js9qPfRcOJlORLyv
/O2a5x8Yh3zK8irfxCE+ZTfmlsD8Hgm8kS10PDDt9oe0eMTj9yAe9X0LogEM
sNPuls0xgC/XswH1prEFM+CesPA/hJ3fQyNw+9XzykkxIh4bz00j9pXrX7xn
11uzFPyPbKGKFpjfJ4HZeVCZgN1ZQlOfe2xC/CwDVbiwU/UVD0wAZu32T0B9
9Hptyk2AP1vPGvGe75fA2U8fP/clZuBrp8zSlD3mPv8PzNDfP/Yj7P8B3zyH
iw==
                    "]]}}}, Prolog -> {{
                    Text[25, 
                    Offset[{-2, 1}, {25., 0.5126750000000001}], {1., -1.}], 
                    Text[50, 
                    Offset[{-2, 1}, {50., 0.5126750000000001}], {1., -1.}], 
                    Text[75, 
                    Offset[{-2, 1}, {75., 0.5126750000000001}], {1., -1.}], 
                    Text[100, 
                    Offset[{-2, 1}, {100., 0.5126750000000001}], {1., -1.}], 
                    Text[125, 
                    Offset[{-2, 1}, {125., 0.5126750000000001}], {1., -1.}], 
                    Text[150, 
                    Offset[{-2, 1}, {150., 0.5126750000000001}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}], 
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 112.03846153846152`}, {0.5126750000000001,
                     1.004825}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{25., 50., 75., 100., 125., 150.}, {{0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "accuracy", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJw9VAk4VWkYNiqjVCpFSYvSgqRI1nwfWa6LuC6ue00NJYyIW0pllCRFttGi
VBOKlmlIq61ltDAtUkILQ56he34VkjK0zDnHcc/zn+c855zn//7vezft1eEe
axUVFBQi6Jt52o1z3DP3vzdw8lK4iWZ5Gwy+f4aHaZE7XgvbwWrhqqs/9A/H
G9/mPzw+SQZezybrRnwegyP4/zqWBFJg7LKprbF/PFqLb5fPrKMATzydfmCr
OtZsfjd5zhECLh8MfZz7NPHFm/Qsv3KK2z8NbwVXjOMdo6BIzZJe2miX4q+Y
PIsC0+uUa/i22XjHrhUMGmTc+Tq4re9M1jBFCioaRgtXms/DM1aPuyqbZMDb
WdZZvEUXz4qNG6smUfBYLyR5YrE+7lf+UjtjBgW1R//5mG9qgIsS00PEP1Ig
tk/5TTHKEC1uFCqnDsiA7kXD8NUiXF9SdTV8LAVsu1mL5e9X4gun5Jca4eUv
IqLTK4MtL5RkwpfG+IinqmcwioL+8TZa07KWoKFWbJGnNgU3Ag+T+yUmaNRy
ITXPhwK2vRdL8Xxae+e8LRQM+6j7zuaIKeqG/3rztQYF99gBzNDUXdM/ZAkF
icef08scdyeNqoqLoUClfgJd0gLdt6cF708Yms8SN8ZWlQpTKMjY8ZekosEK
36tJNXoyKJhYPJC6L3MZxs1u1vWl8WXhumaNSSYtSSZ+FGT5n9N/Uw8Yf/YD
vSgY68pMjGhred38/GuKwwPRqMBvCgxQ8CTH6duIdTZos5eXX5dDwQR2QBv5
/8hgpgNbfNLXbNT3lgK2XWKLwYVFcyq/UkAXU4jhL8en9horI59QHH7LMX+f
YvknFQIvdxnRI9lh0Afhc9tRBKZmu/2iet8OFfiN9KIghh/t3i62x4z0CQsj
phJg2LxO2eP6UY2y4zzC6c0BvXuzoz8h4fB2wNEvvwq6JQRa1zIVHdH/S/NP
BrqE07cjltvnHBgYQ2D3ggBtFTEPA7TU8jT8CLypT1NulfGwxHBTbYE24fTl
hMknE/semBGOHycsSNBvuxhBoMNxuDQymI8Tc52clmoP6Z2PKmGHqjXNCaRy
AA/1y3SnJHOW1xOsOXWrKcoFMd02pCuWcHy6oEVUSQHvOwU9jFyCXDG+PSzi
3BTC+ccVY/NHij4HETjUZXLbU7QC6zMS2krp8/pYglfgNf69NdVRhNO7G/pd
c9WY3j/Evxsq5f192t+dAE3uyJ+N3bHrY47fld0EWLqi3eX9MWxY/eGOTWN6
I2r8CcRa5y2b3+OOdzJ48/bTeA36V4BupqUnEuj5WmU1Ot/jBPL9ilHN0u6L
AlS0DrzwzIdweSHA+LKjk1q3E2DQr7L1wJrsJKu3dD3Wbhs8sFKqVSkdTTj/
eaByfozPeBsC7exAQqye+8qql67HqGmXkRAjVhnbXS0jXH4IUb27LrPpMAFW
nhVC1AlNz9Wn+UqcyTAilONZ0js7zszCE/Ua/vSq1CJAm5f+4okrcOc0lTQC
THfqFz0xIGG4zHkP4fLIE9vOPEqq/Z1AKGtoLxR9VDXd10iAQbtZ6oX93252
qNLnDeaBF4ZuhbrCuwTeWzIFvOX7GXTPLPbGzZotmxbsGdKzN5pmztEvlBKQ
sgbzRoGDmon+UwJs+W5vDDy6urXCiXB5KEKXMn6udh+tl/O5dKSIsO+0k1LK
DgIsPUUiHHvbo/65egenfxFKntX59wgIsOlt44NmAZ0Hv10ncHAjo2gfDE3V
eV9mS7h88sFkXua07AYCbDwoiOX4zGcPFGNrhN2psJ4hv4jlet7qzShcjJ1p
SQ1G6gQY9aUpS7BOrypYNJMAC7eZBKulepHqzh3ApFdYrAQv+UXvci0mwNqz
SiLHa9BfEuTHdXcMW0MgpvLug6Xoiy0bpCNOPCRQcMwXZu31xQ1nE6/MyiRc
XvpianDQupVjO+A7e/ni5UNpDq9ofv4HJlZm5Q==
                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.083, 1., 0.76], 
                    Point[CompressedData["
1:eJw9VAk4VWkYNiqjVCpFSYvSgqRI1nwfWa6LuC6ue00NJYyIW0pllCRFttGi
VBOKlmlIq61ltDAtUkILQ56he34VkjK0zDnHcc/zn+c855zn//7vezft1eEe
axUVFBQi6Jt52o1z3DP3vzdw8lK4iWZ5Gwy+f4aHaZE7XgvbwWrhqqs/9A/H
G9/mPzw+SQZezybrRnwegyP4/zqWBFJg7LKprbF/PFqLb5fPrKMATzydfmCr
OtZsfjd5zhECLh8MfZz7NPHFm/Qsv3KK2z8NbwVXjOMdo6BIzZJe2miX4q+Y
PIsC0+uUa/i22XjHrhUMGmTc+Tq4re9M1jBFCioaRgtXms/DM1aPuyqbZMDb
WdZZvEUXz4qNG6smUfBYLyR5YrE+7lf+UjtjBgW1R//5mG9qgIsS00PEP1Ig
tk/5TTHKEC1uFCqnDsiA7kXD8NUiXF9SdTV8LAVsu1mL5e9X4gun5Jca4eUv
IqLTK4MtL5RkwpfG+IinqmcwioL+8TZa07KWoKFWbJGnNgU3Ag+T+yUmaNRy
ITXPhwK2vRdL8Xxae+e8LRQM+6j7zuaIKeqG/3rztQYF99gBzNDUXdM/ZAkF
icef08scdyeNqoqLoUClfgJd0gLdt6cF708Yms8SN8ZWlQpTKMjY8ZekosEK
36tJNXoyKJhYPJC6L3MZxs1u1vWl8WXhumaNSSYtSSZ+FGT5n9N/Uw8Yf/YD
vSgY68pMjGhred38/GuKwwPRqMBvCgxQ8CTH6duIdTZos5eXX5dDwQR2QBv5
/8hgpgNbfNLXbNT3lgK2XWKLwYVFcyq/UkAXU4jhL8en9horI59QHH7LMX+f
YvknFQIvdxnRI9lh0Afhc9tRBKZmu/2iet8OFfiN9KIghh/t3i62x4z0CQsj
phJg2LxO2eP6UY2y4zzC6c0BvXuzoz8h4fB2wNEvvwq6JQRa1zIVHdH/S/NP
BrqE07cjltvnHBgYQ2D3ggBtFTEPA7TU8jT8CLypT1NulfGwxHBTbYE24fTl
hMknE/semBGOHycsSNBvuxhBoMNxuDQymI8Tc52clmoP6Z2PKmGHqjXNCaRy
AA/1y3SnJHOW1xOsOXWrKcoFMd02pCuWcHy6oEVUSQHvOwU9jFyCXDG+PSzi
3BTC+ccVY/NHij4HETjUZXLbU7QC6zMS2krp8/pYglfgNf69NdVRhNO7G/pd
c9WY3j/Evxsq5f192t+dAE3uyJ+N3bHrY47fld0EWLqi3eX9MWxY/eGOTWN6
I2r8CcRa5y2b3+OOdzJ48/bTeA36V4BupqUnEuj5WmU1Ot/jBPL9ilHN0u6L
AlS0DrzwzIdweSHA+LKjk1q3E2DQr7L1wJrsJKu3dD3Wbhs8sFKqVSkdTTj/
eaByfozPeBsC7exAQqye+8qql67HqGmXkRAjVhnbXS0jXH4IUb27LrPpMAFW
nhVC1AlNz9Wn+UqcyTAilONZ0js7zszCE/Ua/vSq1CJAm5f+4okrcOc0lTQC
THfqFz0xIGG4zHkP4fLIE9vOPEqq/Z1AKGtoLxR9VDXd10iAQbtZ6oX93252
qNLnDeaBF4ZuhbrCuwTeWzIFvOX7GXTPLPbGzZotmxbsGdKzN5pmztEvlBKQ
sgbzRoGDmon+UwJs+W5vDDy6urXCiXB5KEKXMn6udh+tl/O5dKSIsO+0k1LK
DgIsPUUiHHvbo/65egenfxFKntX59wgIsOlt44NmAZ0Hv10ncHAjo2gfDE3V
eV9mS7h88sFkXua07AYCbDwoiOX4zGcPFGNrhN2psJ4hv4jlet7qzShcjJ1p
SQ1G6gQY9aUpS7BOrypYNJMAC7eZBKulepHqzh3ApFdYrAQv+UXvci0mwNqz
SiLHa9BfEuTHdXcMW0MgpvLug6Xoiy0bpCNOPCRQcMwXZu31xQ1nE6/MyiRc
XvpianDQupVjO+A7e/ni5UNpDq9ofv4HJlZm5Q==
                    "]]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJxFVAtQlFUUXpEIId5IaWASFCIQj02eq+dAIO/nAsvyTAh0gwKMBCQGEkNR
QlMkQshEcNSaTEtZdHAMo4hI1BgQSJhI4b+LFgaG0Az0P5a7O3dn59t7zrnn
8Z3POj03JlNLJBLlsV/u1984cN+r85OQWjV87EzKHyDgOfC951dQ+HASJK+l
Xl6xoI1eyiHnH/QIxPW/YJ83Z4Dj3tqRrTIViMPef/D7ggkm74o44OKhAjxx
Z11tsQXur2HYw0DYP84JoU/XougW3J89uuxvhbGxXUduWqnggpkPe6yx0rF4
o3kWAx4dJDx3tw0m5AwVebcw6vdt8dsUXfYQ6Bx8TpriZYeFZ+3+bAslEPTh
1b+VRfYU9218u9pc6UDxb8dHZ097OFEsD/j4E61CZzReQEXrBANsLs87j7hQ
zKfb4IqPlBLl3A0GLu09v+b0FTd6XzSkw0iHxVi3uK15wYDAgomvpVXD6zja
eiq6kDBwLate1dO+idrz6Q25Y7f82Q5jMYGVs/aPfD/zwH77MvYw8CNfgCe2
9efcHetioKrpLnu8KNYfMGVDetP3hPp8qP+Rsu8TOwcl2Dkle/igmQFz5X81
Bz/dTDHfrrYt6C5fWZx7iUDDtnMOkwOAFrL81bJ8AobhXMWIB2qDqmqDiLof
SP1vnwxefCbbl96b8gX64tE0x/kuUwIFO7gM/PDXXu7DAJ+uyg+d/NOu2tUT
YIOJSkPeoFjonwYPV7ixJfmjYoWdWBlD4MUvIhVGPf641mCvXt9BAqUhJVET
8gBUHM+YfrOLADfNDhKAOC5qb/yAqPm2lb4v9HsrtR/P5CIGUizwOxCntXWd
yBUCHzm+Za0vD8JhBXE4+TmByYFDuuNMELUX+BVM7YX5BNP8pwK18wt2hKDZ
4RN+ealEzfcQnHX1fKlihkCNusHL/eey02FCaf+jM1qu3ysMQ50pvXfFg0Q9
zzC0Ga0uEo8TmOHosj0c3fx7U0aMVOr9Caf+ddObbsTKIqj/U37AGizwPZL6
C/OPRFQYnnoCBNjhrkoTR+HZFE4ACPDjKolCRX15dWUVAW4aki+jaP7lW1o3
b5iJov0Q9jea5jvO3LJd2hON/bUl50vLGdAqHMt/fDEav8tNdjFKZ9R6EY2G
jk33r98hwHW/2y+GYn7ddsbgujqHGuMlot6/GDqPCb4gKc5K+mYkfQQ4NlW4
SdHNJOubXu9l/ZDS+nh6dkqx53L2v2Ysn6vWcxORYvq+1Y0OEgban9js8fSO
pe+xy8v+E0vjc9lZXNRgQY9icXdNSeauNAI5/ELHUcx1eyw/jsYT9CAOLVpC
1vyso4K/fLgA8fSe6+4Z13iqDwKf4+n88vkFi6f6wod/HI8F2y2TtA8v66EM
jV29z02KVDDzVTMrKTKMsBzJuJlNgB/PBRnuDGmzrVy/zH8Z9efV2zeB1nfs
PY7RGizokwbz8iCSU7yBf1CDhX2R03yK4zmGa+459h3STaSYb7dnIrbMuLm8
Ms8Ap17vlCdiDFms1S8jwK9nt8Ze2K9E2u/Sn7p+ccckir9uTIKX9ydRfRD0
MglX3W4KupbMwBL/0dj/D+J1ZO8=
                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[CompressedData["
1:eJxFVAtQlFUUXpEIId5IaWASFCIQj02eq+dAIO/nAsvyTAh0gwKMBCQGEkNR
QlMkQshEcNSaTEtZdHAMo4hI1BgQSJhI4b+LFgaG0Az0P5a7O3dn59t7zrnn
8Z3POj03JlNLJBLlsV/u1984cN+r85OQWjV87EzKHyDgOfC951dQ+HASJK+l
Xl6xoI1eyiHnH/QIxPW/YJ83Z4Dj3tqRrTIViMPef/D7ggkm74o44OKhAjxx
Z11tsQXur2HYw0DYP84JoU/XougW3J89uuxvhbGxXUduWqnggpkPe6yx0rF4
o3kWAx4dJDx3tw0m5AwVebcw6vdt8dsUXfYQ6Bx8TpriZYeFZ+3+bAslEPTh
1b+VRfYU9218u9pc6UDxb8dHZ097OFEsD/j4E61CZzReQEXrBANsLs87j7hQ
zKfb4IqPlBLl3A0GLu09v+b0FTd6XzSkw0iHxVi3uK15wYDAgomvpVXD6zja
eiq6kDBwLate1dO+idrz6Q25Y7f82Q5jMYGVs/aPfD/zwH77MvYw8CNfgCe2
9efcHetioKrpLnu8KNYfMGVDetP3hPp8qP+Rsu8TOwcl2Dkle/igmQFz5X81
Bz/dTDHfrrYt6C5fWZx7iUDDtnMOkwOAFrL81bJ8AobhXMWIB2qDqmqDiLof
SP1vnwxefCbbl96b8gX64tE0x/kuUwIFO7gM/PDXXu7DAJ+uyg+d/NOu2tUT
YIOJSkPeoFjonwYPV7ixJfmjYoWdWBlD4MUvIhVGPf641mCvXt9BAqUhJVET
8gBUHM+YfrOLADfNDhKAOC5qb/yAqPm2lb4v9HsrtR/P5CIGUizwOxCntXWd
yBUCHzm+Za0vD8JhBXE4+TmByYFDuuNMELUX+BVM7YX5BNP8pwK18wt2hKDZ
4RN+ealEzfcQnHX1fKlihkCNusHL/eey02FCaf+jM1qu3ysMQ50pvXfFg0Q9
zzC0Ga0uEo8TmOHosj0c3fx7U0aMVOr9Caf+ddObbsTKIqj/U37AGizwPZL6
C/OPRFQYnnoCBNjhrkoTR+HZFE4ACPDjKolCRX15dWUVAW4aki+jaP7lW1o3
b5iJov0Q9jea5jvO3LJd2hON/bUl50vLGdAqHMt/fDEav8tNdjFKZ9R6EY2G
jk33r98hwHW/2y+GYn7ddsbgujqHGuMlot6/GDqPCb4gKc5K+mYkfQQ4NlW4
SdHNJOubXu9l/ZDS+nh6dkqx53L2v2Ysn6vWcxORYvq+1Y0OEgban9js8fSO
pe+xy8v+E0vjc9lZXNRgQY9icXdNSeauNAI5/ELHUcx1eyw/jsYT9CAOLVpC
1vyso4K/fLgA8fSe6+4Z13iqDwKf4+n88vkFi6f6wod/HI8F2y2TtA8v66EM
jV29z02KVDDzVTMrKTKMsBzJuJlNgB/PBRnuDGmzrVy/zH8Z9efV2zeB1nfs
PY7RGizokwbz8iCSU7yBf1CDhX2R03yK4zmGa+459h3STaSYb7dnIrbMuLm8
Ms8Ap17vlCdiDFms1S8jwK9nt8Ze2K9E2u/Sn7p+ccckir9uTIKX9ydRfRD0
MglX3W4KupbMwBL/0dj/D+J1ZO8=
                    "]]}}}, Prolog -> {{
                    Text[25, 
                    Offset[{-2, 1}, {25., 0.5354}], {1., -1.}], 
                    Text[50, 
                    Offset[{-2, 1}, {50., 0.5354}], {1., -1.}], 
                    Text[75, 
                    Offset[{-2, 1}, {75., 0.5354}], {1., -1.}], 
                    Text[100, 
                    Offset[{-2, 1}, {100., 0.5354}], {1., -1.}], 
                    Text[125, 
                    Offset[{-2, 1}, {125., 0.5354}], {1., -1.}], 
                    Text[150, 
                    Offset[{-2, 1}, {150., 0.5354}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}], 
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 112.03846153846152`}, {0.5354, 1.0046}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{25., 50., 75., 100., 125., 150.}, {{0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "precision", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJw9VAs4lGkUtpJV1EYiKU8XSZuIyOR2jvtdrsOwScktCa1WpVbY2pTu2JLa
SO2mVtdVKYy2Yq2N0hKlyyjzfS6VS4l22f//zcw8/zzzfDPznfOe97zvO2dN
vG+EvJycXALzZj8dpjj/qDckhrWKER1XKtth7DwIiYnyPGMXEVgZhpZ+MayA
i6ufdp9d2w4Bj6cvTBichFEPKlvSL3fAUo9Nb54Nq6KNQN/0tLsY8OdHOtlb
NDBrvvFN+0IxePQZBbl/moHGf+abNZ8XS+7PwqSJM8MyqsVweaol88xBg0jf
tryHYjAvp57xW+dh0e11lxbXiSX9dRHbVXfnBRG406zit3L5Aqy43B2yLZaA
S9qtdzc2L8QGLdPQmGsE6r9el6V+YxE2BuQ8Pygk0Hj8+cBZ88UY9/KVicIl
AgLHfYfkk42wbL5SW/kvBBgsmkZPl6DwRG2bCvN/Dm6esez8+w8Xtc6WmWDx
uZPfrL5KYHOLIvFrXYphp1pM6qsJDKvazpyVZ4r3p+17HvKEQEXk0c7am2ZY
uG1l6cMeAhy8lmXoFd+rYqJHYdzAwh7bY+Z4t2VRqGkdgfvcADzM9Gi4NvKY
QOaJJ8yzHEvWi67H61BQblJjSlpgBXHn1alRyXyWqNNh1T5BmcLh1KrgO81W
mHB6/n41bQrqNz7v3/uTNVoUloQfFxPg6Lpug5PL+KsdHhDIW128SNwEODPN
1ipsGoXJnuzEiBoTUi1V/5Pygahf5WqVw5wfFriOjI+1RSdRaXhDPQE1bkBb
2e9J0SwCO9ykmNDh9YEAB7fTDlO+NxGfmESBKSa33c0etXLCy+qFUv7s0XC5
ivVrpn9rhgkzkgPajB+61VxFQPvUipivah0wco9iZJ8che1uKd4dAkc8alEU
ZdRJgN1mOXXE0N9cKob6iERvTnjt4zQivC/l2wlXrrxXucaSgiiCreiMRVsv
RK19RCT6dkae9dXbvb0EdhqsnaMscEH1oozsqC8piJsOKImICw58XnrYsUmq
L1cMNNtVXtwq3Y8rzn69Nzv/HYEuZ4XEpGg3LLBxF1sx/cf07obFfRuirzJ4
90sIluJl0SkSd1k9n/AiYVuyBzaejOgUDRLJPj1wZ3pL5HlKoJ+VS5Qn9lY+
UtWpJRL/eOLduf/G7BpHIfe92R/+gV44cjFw6u1hAp+4BXvhd23/VNYx+hjT
+wrk7Vt2a/c56f5X4GSDqiPTGfzMciesWuqNrUy3GkbP3LpSvGX42G1YnfdG
lWfWOWnmFHbYnLHW7/fGuIVXbPiMvsb864MT36+a2isiICINuqPpPrL78skv
Enuv+OC6Hu8Kw6dEkhc+OKVGW1MtiwLLfo2dL5bpBHRuXkCBs9tGX3yTWqtK
X0n954slhg2k9SOBDm4gPywV9cf4MHpn1ZRh4of5nrFVj1WoJD/8MDPnlNCb
OXPyvOOH61sMsdKIQuZsdiN+Mj5vfpiXzrPwx67BLDUewx9jXuYbf9xxaAjt
lzD+Y9BpXPHHbQFHhdq6VJJH/mji0ZibyaOwnjN0AAapdOfqM3pi2X6RGIBJ
BUlwZlSaBwFI+vZsCMuh8NaSLcCX3WfZ/dWYjw1qabG6plSiZz7+rXeaHnlB
IJEzGB/lmrGroYYAV76Xjwr6M9SVp1JJHgZi3ehN1VRVCv0XCplICcStWuY4
oEmBW8/lQNRJPdjTNyTVfyCqDygeGakgwKW3bRB2fx/foyOgkPMtq+gg9D9X
YNOtQSX5FISfh5/EpXhS4OJBTiDjR59rKEDlZLu3zbZU4heBTM9b+KzCBWi5
Rd1aa4QAq74DSsF4aGNotOsMChzdvGB8GeF9b8SGAptecTuC0a7GSrPDgAJn
z5pgGV9j/grGsGN6uMeZyYfqe38twxD0UnLU1GbypCQ/BObuDsElUzZqrDGQ
5mUIbriUrWXtRGGUe4WgMFezqxoo/A/edGuc
                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.083, 1., 0.76], 
                    Point[CompressedData["
1:eJw9VAs4lGkUtpJV1EYiKU8XSZuIyOR2jvtdrsOwScktCa1WpVbY2pTu2JLa
SO2mVtdVKYy2Yq2N0hKlyyjzfS6VS4l22f//zcw8/zzzfDPznfOe97zvO2dN
vG+EvJycXALzZj8dpjj/qDckhrWKER1XKtth7DwIiYnyPGMXEVgZhpZ+MayA
i6ufdp9d2w4Bj6cvTBichFEPKlvSL3fAUo9Nb54Nq6KNQN/0tLsY8OdHOtlb
NDBrvvFN+0IxePQZBbl/moHGf+abNZ8XS+7PwqSJM8MyqsVweaol88xBg0jf
tryHYjAvp57xW+dh0e11lxbXiSX9dRHbVXfnBRG406zit3L5Aqy43B2yLZaA
S9qtdzc2L8QGLdPQmGsE6r9el6V+YxE2BuQ8Pygk0Hj8+cBZ88UY9/KVicIl
AgLHfYfkk42wbL5SW/kvBBgsmkZPl6DwRG2bCvN/Dm6esez8+w8Xtc6WmWDx
uZPfrL5KYHOLIvFrXYphp1pM6qsJDKvazpyVZ4r3p+17HvKEQEXk0c7am2ZY
uG1l6cMeAhy8lmXoFd+rYqJHYdzAwh7bY+Z4t2VRqGkdgfvcADzM9Gi4NvKY
QOaJJ8yzHEvWi67H61BQblJjSlpgBXHn1alRyXyWqNNh1T5BmcLh1KrgO81W
mHB6/n41bQrqNz7v3/uTNVoUloQfFxPg6Lpug5PL+KsdHhDIW128SNwEODPN
1ipsGoXJnuzEiBoTUi1V/5Pygahf5WqVw5wfFriOjI+1RSdRaXhDPQE1bkBb
2e9J0SwCO9ykmNDh9YEAB7fTDlO+NxGfmESBKSa33c0etXLCy+qFUv7s0XC5
ivVrpn9rhgkzkgPajB+61VxFQPvUipivah0wco9iZJ8che1uKd4dAkc8alEU
ZdRJgN1mOXXE0N9cKob6iERvTnjt4zQivC/l2wlXrrxXucaSgiiCreiMRVsv
RK19RCT6dkae9dXbvb0EdhqsnaMscEH1oozsqC8piJsOKImICw58XnrYsUmq
L1cMNNtVXtwq3Y8rzn69Nzv/HYEuZ4XEpGg3LLBxF1sx/cf07obFfRuirzJ4
90sIluJl0SkSd1k9n/AiYVuyBzaejOgUDRLJPj1wZ3pL5HlKoJ+VS5Qn9lY+
UtWpJRL/eOLduf/G7BpHIfe92R/+gV44cjFw6u1hAp+4BXvhd23/VNYx+hjT
+wrk7Vt2a/c56f5X4GSDqiPTGfzMciesWuqNrUy3GkbP3LpSvGX42G1YnfdG
lWfWOWnmFHbYnLHW7/fGuIVXbPiMvsb864MT36+a2isiICINuqPpPrL78skv
Enuv+OC6Hu8Kw6dEkhc+OKVGW1MtiwLLfo2dL5bpBHRuXkCBs9tGX3yTWqtK
X0n954slhg2k9SOBDm4gPywV9cf4MHpn1ZRh4of5nrFVj1WoJD/8MDPnlNCb
OXPyvOOH61sMsdKIQuZsdiN+Mj5vfpiXzrPwx67BLDUewx9jXuYbf9xxaAjt
lzD+Y9BpXPHHbQFHhdq6VJJH/mji0ZibyaOwnjN0AAapdOfqM3pi2X6RGIBJ
BUlwZlSaBwFI+vZsCMuh8NaSLcCX3WfZ/dWYjw1qabG6plSiZz7+rXeaHnlB
IJEzGB/lmrGroYYAV76Xjwr6M9SVp1JJHgZi3ehN1VRVCv0XCplICcStWuY4
oEmBW8/lQNRJPdjTNyTVfyCqDygeGakgwKW3bRB2fx/foyOgkPMtq+gg9D9X
YNOtQSX5FISfh5/EpXhS4OJBTiDjR59rKEDlZLu3zbZU4heBTM9b+KzCBWi5
Rd1aa4QAq74DSsF4aGNotOsMChzdvGB8GeF9b8SGAptecTuC0a7GSrPDgAJn
z5pgGV9j/grGsGN6uMeZyYfqe38twxD0UnLU1GbypCQ/BObuDsElUzZqrDGQ
5mUIbriUrWXtRGGUe4WgMFezqxoo/A/edGuc
                    "]]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJxdVA1MlVUYvoExGlFqRn/oIp1xtURBBQF930vABQS5lwv3ci9Z09JUanqV
QnMM8ydzFaSzUpSyNGvVNGwZ5nRES5z9KwNR06KA89EKBUzFlp3znu++39az
h909fO855/2Pm7+0aEGYzWZbJv/Ub+Zw58bx13rARvgFtL4Cnb8qdEH6pMcO
3jQ0DJMJv0NJ6932ZVeicfLZDZICkvKf7To3NAK3bFYQgG+fHLN1VQzm1Pc7
6/t7IL8/oXT21XsxnSDM86NxyWIFAQ13pEnG4abzSZICko8YBUufH4upXbWS
wnx/HH46N1LSgOb2Wz1zZzyI4ftKJQ3IeeFwX+NKO+sfJix5ZVTjRNandpwf
3Jv8MGt/1qubwyoTkGS4AdKXuxLOTmZN7tZNwRcpQAGfrd9/z94vEvn7yo4I
4TmThBcJAoZGOGJH103FCdWt9upWAUcXbus9cWga25N7HdOxcX60pAHhg/Y/
HduTUVnbqwUcowBSsJsgYFP9ackZrKPaRsorU/k9HV8an99S/WWguT0djxIE
jGq8XvPymzNZU7o+n4XzDkZJGlA378OJPW2AjzZESBpwW4GKGHEr9EoKMx/I
5396J/ffm8sd/H0kBejA16hAAioWKQ8ycBdBALnbm4EpNb9JCpCX2aryHmGt
82fpM+sSZUiZOJUaQMB9uwoX334iEz/ZryCgKm+1q9ufhbo/DVDVPGJk4fUh
hVC/ZfP7Ot/ZbN+5QN3oZK3724nPxX0rKWDDQ0/GRflzcM613ZICetpqIztF
Dtvr/sple12fXPb/D+ewYMWiPDx1UkGY/Z6Hx4KxLcFYA2rMBIfyr7yLELM5
/+4n9jT9XJmPb+UOSobqmY/xBAMGVLs8VYB92zMlDXN+Cvj8GxenfVXsm8Pn
r1KBLa37vZDP6/oX4t+XFQTI4t7yeJILT7crCKByrXZhnTLvE6Cqkf6Ri/1f
M+u9mfEDLs6Hnl83+9spfhx3Y60bK1YoCAirvBC8dMD9v33hNufdAJX94xlF
rGnclhehi2CY81fE9eimgDwYU950Z3mTANVN6xI9mE0I7Q8Px0ft2ezBnTsU
ZP3uVxXx4Pv/uCUFHLo8dm1KajG/J4dX/qeY71fexRywtN5HxTiGYMDTNNAl
rFW2LwRL+D69D0pw4eHhkgb8laYu8PJ3ld0Ppnh5P+h+9nL9gjRgXt4vdP0l
L67vmCQZ2oc+PEcQMPDxu3Kl+HC5ar8WAVSeBh9+/52CMPvfx+dpeztKOb7X
V6iOtrTeT5am9WDzs46nBy2t58XP/qzyqg63vqvuq40MsKZ0pwQwghpagNpe
z6wJmPU0gMbzuGWv5yvA+a5q+fqb6VjGet/OMnjgpTLeD3pflmE0JVjADYJl
/x8oqFRU
                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[CompressedData["
1:eJxdVA1MlVUYvoExGlFqRn/oIp1xtURBBQF930vABQS5lwv3ci9Z09JUanqV
QnMM8ydzFaSzUpSyNGvVNGwZ5nRES5z9KwNR06KA89EKBUzFlp3znu++39az
h909fO855/2Pm7+0aEGYzWZbJv/Ub+Zw58bx13rARvgFtL4Cnb8qdEH6pMcO
3jQ0DJMJv0NJ6932ZVeicfLZDZICkvKf7To3NAK3bFYQgG+fHLN1VQzm1Pc7
6/t7IL8/oXT21XsxnSDM86NxyWIFAQ13pEnG4abzSZICko8YBUufH4upXbWS
wnx/HH46N1LSgOb2Wz1zZzyI4ftKJQ3IeeFwX+NKO+sfJix5ZVTjRNandpwf
3Jv8MGt/1qubwyoTkGS4AdKXuxLOTmZN7tZNwRcpQAGfrd9/z94vEvn7yo4I
4TmThBcJAoZGOGJH103FCdWt9upWAUcXbus9cWga25N7HdOxcX60pAHhg/Y/
HduTUVnbqwUcowBSsJsgYFP9ackZrKPaRsorU/k9HV8an99S/WWguT0djxIE
jGq8XvPymzNZU7o+n4XzDkZJGlA378OJPW2AjzZESBpwW4GKGHEr9EoKMx/I
5396J/ffm8sd/H0kBejA16hAAioWKQ8ycBdBALnbm4EpNb9JCpCX2aryHmGt
82fpM+sSZUiZOJUaQMB9uwoX334iEz/ZryCgKm+1q9ufhbo/DVDVPGJk4fUh
hVC/ZfP7Ot/ZbN+5QN3oZK3724nPxX0rKWDDQ0/GRflzcM613ZICetpqIztF
Dtvr/sple12fXPb/D+ewYMWiPDx1UkGY/Z6Hx4KxLcFYA2rMBIfyr7yLELM5
/+4n9jT9XJmPb+UOSobqmY/xBAMGVLs8VYB92zMlDXN+Cvj8GxenfVXsm8Pn
r1KBLa37vZDP6/oX4t+XFQTI4t7yeJILT7crCKByrXZhnTLvE6Cqkf6Ri/1f
M+u9mfEDLs6Hnl83+9spfhx3Y60bK1YoCAirvBC8dMD9v33hNufdAJX94xlF
rGnclhehi2CY81fE9eimgDwYU950Z3mTANVN6xI9mE0I7Q8Px0ft2ezBnTsU
ZP3uVxXx4Pv/uCUFHLo8dm1KajG/J4dX/qeY71fexRywtN5HxTiGYMDTNNAl
rFW2LwRL+D69D0pw4eHhkgb8laYu8PJ3ld0Ppnh5P+h+9nL9gjRgXt4vdP0l
L67vmCQZ2oc+PEcQMPDxu3Kl+HC5ar8WAVSeBh9+/52CMPvfx+dpeztKOb7X
V6iOtrTeT5am9WDzs46nBy2t58XP/qzyqg63vqvuq40MsKZ0pwQwghpagNpe
z6wJmPU0gMbzuGWv5yvA+a5q+fqb6VjGet/OMnjgpTLeD3pflmE0JVjADYJl
/x8oqFRU
                    "]]}}}, Prolog -> {{
                    Text[25, 
                    Offset[{-2, 1}, {25., 0.495}], {1., -1.}], 
                    Text[50, 
                    Offset[{-2, 1}, {50., 0.495}], {1., -1.}], 
                    Text[75, 
                    Offset[{-2, 1}, {75., 0.495}], {1., -1.}], 
                    Text[100, 
                    Offset[{-2, 1}, {100., 0.495}], {1., -1.}], 
                    Text[125, 
                    Offset[{-2, 1}, {125., 0.495}], {1., -1.}], 
                    Text[150, 
                    Offset[{-2, 1}, {150., 0.495}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}], 
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 112.03846153846152`}, {0.495, 1.005}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{25., 50., 75., 100., 125., 150.}, {{0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "recall", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJxFVw1olWUUvpmJZoyhU5dNmbq2tdaa+3d/77ft7udud3f3d/evRJZ/iKSF
DEupERZOZFSGLFMzkYyQ0DAbWTHkbs45r0NnaWmISK0YYmIiJtbe533v834M
xrnnvOec5zznee93F3Vs8K6aYrPZljxms8n/V7r3XZ78E3s+ls8FoexxcW5E
PpfEK1mdHVmdd7T/Z+2/r+0rom0i5pqIPdLxYzp+ilWI54LYL7N3P2Gp+Ev6
/HQrEZ9ScWx2xbGZ1prV8hnV+ZK0Py4GXPKDZPpV/lnaHhaTMCafFB0/Ij5F
vTkWPrbFRZVMP3uejh8Rv6J+qo4fEm90yITztT8u5qGfZ7R/WHwjj1cs0PlG
hQ/9LbSKgO+s2Izz6do+I06j33TWn4t8ixi/Cv0v1vZ5cRz5l9D/OM5lsB8v
6mUw/2fA96y2z4nb0u3KJD4BvFnM3wN6s4jnGvBns16ubKfjOX1+SGwBnhzG
DwNPDus9DTzPs95a4MnV/tPiW+B5QeMfEtPwP0/vw6gIAE8e+zsEPC/q/RjQ
fOSz3gH487X/rJ5vPvm+BfxLtT0o5qC/pTr+vKjEPArIt9qfAva/A/Mp4D4h
vKKQ80H5fYXE9x+eQu5nJuZXRLytwFdE/jYBT7H2D4tPkLCYeE4BTzHP/wk8
JdoeFMnAk7BHRCkaLGX/y4GnlPneBZ5S9n8EeMq0/4y4CDxlnMcD4Cnj+UXA
s4z70AQ8y8jHBuAp5/ndwFPO+B+Ap5z7cxN4KvT5ATETeCoYXwA8ldRLGHgq
ib8LeCrZ32HgqSKeOPBUcb7/AI/xpwFPNevVAU8157cOeATn9QHwCObrAx6h
42NiI+It+rfJ8iGL9Xpx3mI9zP+kxf3sRz6LfI7J8AU1nOc45lXDfXwo4bxd
w/xqHxL2aZEh8d2o4f1QhnnW0nbKcvZa5l+B+Ro/9vNwLfdvO+Zt4vdKc0Yd
449i/nXkA+2ur2M/Si91xI9xx+s4b1XHTj3h/l9q53yywZed+KHfXXbO242E
5vxKieeenfup7uN64tkJfuqZX90n9Zw/7t+Txj8EfupZ7yr4aSA+dd82kI+p
MqyrgfNKBT8NxI/79UYD+7XATyP9fvDTyHzqPm0k/q3gp5Hn3wc/Jh7354wm
HT8o+sBPE/GPgJ8m4rkOfhL2oLgLfprI73R87uB80sCPg+fzwY+D87KDHwf7
CYEfB+e1Hvw4iKcL/DSz34/ATzPrfwF+mln/e/Bj/KPgp5nzuAl+Woj3Pvhp
Yf2nwE8L66eDnxbmKwI/Ley/Cfw4eV+9BH6cPL8R/Dh5fhv4cXKeveDHafQP
flp5vh/8tHKeY+DH+MfBTyvPPwQ/xk7GORftDPDjIv4y8GNsJ/gx9grwY85v
Aj8u4t8Ofto4/73gp43xR8FPG+cbAz/Gfxn8tJGfe3idc7O+4t9NvTwpP7bc
vE/UPri5HwslvteMX+1HIt+wKJB4Dxpb7Yub93WDxH/Rzf7U/rjZX0SaUz3E
r/bJQ3yvynZLPPx+UPvl4fl3JJ41xq/2zfh3Szy9Hs5T7Z/xfynxnPHoecT0
Ppr6P0o8/3o4D7WfXs7vgmwn10t8al+9zP+7xPOyl9/Han+N/4HE0+Pl/NQ+
e1k/SX7c7zXfb9hvYy+WeP72sj+17z7mL8Hrro/9qf33sf9micfn432i9OBj
P8slnm3Gr/ThY/3XJZ4TPupV6cVHPb0n8fyRyDeo9ePnPu3BzwE/45We/Oz3
K4nH4Tffr9CXn3hPSTxb/JyX0pvJ95PEc8Sv68e0/hL2kPhL4rnm57yUHhP5
BsQj6CfA70+lzwD7mwX9BBiv9BrgfDKhnwDnp/Rr/OXQT4B4lJ4D3EcX9GNs
pe8A3787oJ92zncC+mlnP53QTzv5tuEHXTv72QH9tLOfFOjHxO+Hfow/G/ox
57+Gfkx8JfRj+hmEfhL25PsD9BPk/H6BfoLU70roJ8h53IJ+guRrM/QTJL9T
JJ6eIPnbCf0Yey70Y+wD0E+Q+5QD/Zh+jkM/IdrV0E+I9YegnxDxe6EfE38V
+glxH1dDPyHiv92tXlgTenkT+gmxv6kSTzzE/nqgnxDnkYo8YcYfhH7C5n0H
+glz/iegnzD7t6CfMPsfhn7CrOeHfsKc72/QT5j110I/xn8H+jH1tkI/Yd53
0ySepIh5f4J+Isw3H/ox9iGMJ8L9zYN+Iuy/D/qJsN9a6MecH4F+IpxHO/QT
Id7r0I/Jtw76iTL+LvQTZb63oJ+oeT+Dfoz9IfRjzqdBP1Hy+zn0E+U+5EM/
UfbzHfQTJV479BNlf3Hox9j/Awy6pqM=
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJxdVQtMzWEUv1ItQylGIpMaQlLp/fh/N6W3HrdubneYd16ryCotUiwhLUkk
eQzLY6gNxRgZenizVMLWppcR0lQ2+X/fd/2+rXZb+3W+c87vnPM751qtSoha
q6dQKBLlX/rXb1xAzsyBDml/S1H5stwWiePfUkWB8ZSu668kr/nLb44Y1CeP
C7Ve1Y/eSDFvzW0Tf48lBiW+p2316yWn0O2fWwdNgcmp19OOpE0kNpYur1da
P5NCf9ovDem3IEXUvbBB529JeL56qWK8p/yxIhfl5EXlzyTXu11hCTusyanW
tjq7sqe6/DbERGZTYNwg1bwbo1rmPgv5Anff6alKtQV+MWfjwQlVc4HfnPj4
64KrHbDGP69AL8UefGQuk+zfLwBmdEsciEVp/oMB86fSjT3XJl+47Qh7arNh
p6rFCXwGTZVTLUsWwn5v3bHu+mpnYEav2QX1jvxl+1V53BX9ecwKcEO+3JNN
8scdeHSjmRzSA/l4fZ7wP7zrQVzNOy/0a0LVn0MHir2BWbtu+ZBMTU9x3846
qWTlpbkdjRL6YRxGKybgx/tB4P/qTNBfg01K2M1YgUrwSY6nDHzBl9Ht9kV8
OZgiI3gRMO+fwC3ZjnJJfog/5XT4BpN6gTOC0yPaNf7gT6d5t8t/mN4WIz/v
92K8b1tLIwYAc30HwH/vvDVWozWByNfRmG/U1hmI91xfQXjP5yPwlwD9pOT4
YPhzvQeTQXNKqFY6pGvw/3iUnWFnCPwjV5+7/yElFHY+z1D491K5rA8j25sC
c/KSa3X7Ewb/o9+dH0bHLoF/PxuwwFzv4fDn8w8HX3m4o1Y4RSAeG1e6wHQa
XpcjEC/T57z37F5h5/sbCb5tnS9thrIioU+9lE9JPyojsd/8Xoj3tPu1vlHA
bN22RoEv378o5G9nBamQn6op21FF7MuoYJ/r7ocK9TF51qig59zpdCLifXWf
dZabRzTyycsr/yca8Sm7iZUC83sk8Ga20DHAtNufkmIQj9+DGNT3zZMGUMNO
u1vuoAZfrmc16k1iC6bGPWHhfwg7v4exwL1XzsonJRbx2HgqYrGvXP/iPbve
yqXgX7SNKlpgfp8EZudBoQGezRJqht1jDeKnqanChZ2qL98oDpi12y0O9dHr
tSUzDv5sPWvFe75fAmc8edTgQrTAV0u10ox92mHfB1rob4j9CPs/NKJFHQ==

                    "]]}, {
                    AbsolutePointSize[2.2142857142857144`], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[CompressedData["
1:eJxdVQtMzWEUv1ItQylGIpMaQlLp/fh/N6W3HrdubneYd16ryCotUiwhLUkk
eQzLY6gNxRgZenizVMLWppcR0lQ2+X/fd/2+rXZb+3W+c87vnPM751qtSoha
q6dQKBLlX/rXb1xAzsyBDml/S1H5stwWiePfUkWB8ZSu668kr/nLb44Y1CeP
C7Ve1Y/eSDFvzW0Tf48lBiW+p2316yWn0O2fWwdNgcmp19OOpE0kNpYur1da
P5NCf9ovDem3IEXUvbBB529JeL56qWK8p/yxIhfl5EXlzyTXu11hCTusyanW
tjq7sqe6/DbERGZTYNwg1bwbo1rmPgv5Anff6alKtQV+MWfjwQlVc4HfnPj4
64KrHbDGP69AL8UefGQuk+zfLwBmdEsciEVp/oMB86fSjT3XJl+47Qh7arNh
p6rFCXwGTZVTLUsWwn5v3bHu+mpnYEav2QX1jvxl+1V53BX9ecwKcEO+3JNN
8scdeHSjmRzSA/l4fZ7wP7zrQVzNOy/0a0LVn0MHir2BWbtu+ZBMTU9x3846
qWTlpbkdjRL6YRxGKybgx/tB4P/qTNBfg01K2M1YgUrwSY6nDHzBl9Ht9kV8
OZgiI3gRMO+fwC3ZjnJJfog/5XT4BpN6gTOC0yPaNf7gT6d5t8t/mN4WIz/v
92K8b1tLIwYAc30HwH/vvDVWozWByNfRmG/U1hmI91xfQXjP5yPwlwD9pOT4
YPhzvQeTQXNKqFY6pGvw/3iUnWFnCPwjV5+7/yElFHY+z1D491K5rA8j25sC
c/KSa3X7Ewb/o9+dH0bHLoF/PxuwwFzv4fDn8w8HX3m4o1Y4RSAeG1e6wHQa
XpcjEC/T57z37F5h5/sbCb5tnS9thrIioU+9lE9JPyojsd/8Xoj3tPu1vlHA
bN22RoEv378o5G9nBamQn6op21FF7MuoYJ/r7ocK9TF51qig59zpdCLifXWf
dZabRzTyycsr/yca8Sm7iZUC83sk8Ga20DHAtNufkmIQj9+DGNT3zZMGUMNO
u1vuoAZfrmc16k1iC6bGPWHhfwg7v4exwL1XzsonJRbx2HgqYrGvXP/iPbve
yqXgX7SNKlpgfp8EZudBoQGezRJqht1jDeKnqanChZ2qL98oDpi12y0O9dHr
tSUzDv5sPWvFe75fAmc8edTgQrTAV0u10ox92mHfB1rob4j9CPs/NKJFHQ==

                    "]]}}}, Prolog -> {{
                    Text[25, 
                    Offset[{-2, -2}, {25., 0.477225}], {1., 1.}], 
                    Text[50, 
                    Offset[{-2, -2}, {50., 0.477225}], {1., 1.}], 
                    Text[75, 
                    Offset[{-2, -2}, {75., 0.477225}], {1., 1.}], 
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.477225}], {1., 1.}], 
                    Text[125, 
                    Offset[{-2, -2}, {125., 0.477225}], {1., 1.}], 
                    Text[150, 
                    Offset[{-2, -2}, {150., 0.477225}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 112.03846153846152`}, {-0.004725, 
                    0.477225}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{25., 50., 75., 100., 125., 150.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 5, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["accuracy", 
                    Column[{
                    Row[{"Measurement: ", "Accuracy"}]}]], 
                    Tooltip["precision", 
                    Column[{
                    Row[{"Measurement: ", "Precision"}]}]], 
                    Tooltip["recall", 
                    Column[{
                    Row[{"Measurement: ", "Recall"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 5, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    
                    ImageSizeCache->{
                    256., {8.658691307716072, 14.341308692283928`}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    
                    ImageSizeCache->{
                    313., {94.53359379926695, 98.66640620073304}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> 
         ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellLabel->
  "Out[734]=",ExpressionUUID->"65b597ca-525b-4475-abd6-ab29d51e1569"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomChoice", "[", 
   RowBox[{"validation", ",", "4"}], "]"}], "//", 
  "Transpose"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"titanicnet2", "[", "\"\<TrainedNet\>\"", "]"}], "[", 
  RowBox[{"Normal", "[", "%", "]"}], "]"}]}], "Input",
 CellLabel->
  "In[743]:=",ExpressionUUID->"8e0794ea-f4f6-440c-adc3-12cb8beccef3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"Class" -> {"1st", "3rd", "3rd", "3rd"}, "Age" -> {
         Quantity[33., "Years"], 
         Quantity[20., "Years"], 
         Quantity[11., "Years"], 
         Quantity[45.5, "Years"]}, 
       "Sex" -> {"female", "female", "female", "male"}, 
       "SurvivalStatus" -> {"survived", "died", "died", "died"}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Class"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Age"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Sex"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"SurvivalStatus"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"Class", "Age", "Sex", "SurvivalStatus"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "3rd"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          Quantity[1, "Years"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]], 4]}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Class"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Age"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Sex"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"SurvivalStatus"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{"Class", "Age", "Sex", "SurvivalStatus"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "3rd"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          Quantity[1, "Years"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 4], 
        TypeSystem`Vector[
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]], 4]}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Class", 
                  Style[
                  "Class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Class"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Class"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"1st", "3rd", "3rd", "3rd"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"1st", "3rd", "3rd", "3rd"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Class"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Class"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age", 
                  Style[
                  "Age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Age"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Quantity[33., "Years"], 
                    Quantity[20., "Years"], 
                    Quantity[11., "Years"], 
                    Quantity[45.5, "Years"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Quantity[33., "Years"], 
                    Quantity[20., "Years"], 
                    Quantity[11., "Years"], 
                    Quantity[45.5, "Years"]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Age"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sex", 
                  Style[
                  "Sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sex"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sex"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"female", "female", "female", "male"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"female", "female", "female", "male"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Sex"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Sex"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SurvivalStatus", 
                  Style[
                  "SurvivalStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SurvivalStatus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SurvivalStatus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"survived", "died", "died", "died"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"survived", "died", "died", "died"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SurvivalStatus"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SurvivalStatus"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{292., {62.63403328722343, 68.36596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{292., {62.63403328722343, 68.36596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[743]=",ExpressionUUID->"cf638cfd-b0b8-47c2-89dd-937bf5a256bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"survived\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[744]=",ExpressionUUID->"c489ba6d-5db4-41e7-b82a-6c756b0e7b25"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2f5dd794-ae62-48b3-bbc3-c7c005ac7e3e"],

Cell[CellGroupData[{

Cell["References", "Section",ExpressionUUID->"a21c4e5e-143c-4b3b-9e36-7f978e9cab43"],

Cell[TextData[{
 ButtonBox["NeuralNetworks",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/NeuralNetworks"],
 " main guide page"
}], "Item",ExpressionUUID->"5817eeb8-9f4e-4592-baa7-1617e32c67b3"],

Cell[TextData[{
 ButtonBox["NeuralNetworks",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/NeuralNetworksOverview"],
 " tutorial"
}], "Item",ExpressionUUID->"87bd7de5-c668-41d9-8314-6de91275f144"],

Cell[TextData[{
 "Machine Learning courses on ",
 ButtonBox["Wolfram U",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-u/catalog/machine-learning/"], None},
  ButtonNote->"https://www.wolfram.com/wolfram-u/catalog/machine-learning/"]
}], "Item",ExpressionUUID->"51c156f1-6d1f-4823-b689-ab6436a02169"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"cde8ac14-228d-4d69-8d62-566ec0a37406"],

Cell[CellGroupData[{

Cell["Exploration: Losses", "Section",
 CellChangeTimes->{{3.7933528234207373`*^9, 3.793352827123807*^9}, {
  3.793355470606286*^9, 3.793355474461987*^9}, {3.7933616988153954`*^9, 
  3.793361721581335*^9}, {3.7933670137875643`*^9, 
  3.7933670141548433`*^9}},ExpressionUUID->"879bddef-f86a-47aa-8374-\
df8e4334a6b5"],

Cell[TextData[{
 StyleBox["Background",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["The loss layers specifies the functional form of loss to be \
computed, which measures the compatibility between a prediction (e.g. the \
class scores in classification) and the actual value of the label. The data \
loss takes the form of an average over the data losses for every individual \
example. In the iteration of training the network, this explicit loss \
function is minimized by tuning the parameters (via back propagation). When a \
loss layer is chosen automatically for a port, the loss layer to use is based \
on the layer within the net whose output is connected to the port. For \
SoftmaxLayer and LogisticSigmoid, CrossEntropyLossLayer is chosen, for \
non-loss layers, MeanSquaredLossLayer is chosen. If a loss layer is \
specified, it is used unchanged. You can also specify custom losses using the \
option ",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["LossFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LossFunction"],
  FontSlant->"Plain"],
 StyleBox[". ",
  FontSlant->"Plain"]
}], "Abstract",
 CellChangeTimes->{{3.7910838457868886`*^9, 3.791083850474415*^9}, {
   3.791083953864298*^9, 3.7910841735238543`*^9}, {3.79108420703699*^9, 
   3.791084267056748*^9}, {3.79108432500803*^9, 3.791084462849882*^9}, {
   3.7910845191502542`*^9, 3.7910847876607246`*^9}, {3.7910848179013386`*^9, 
   3.7910850325849977`*^9}, {3.7910850670469847`*^9, 3.791085070109441*^9}, {
   3.791085392782931*^9, 3.791085410226676*^9}, {3.791088418729452*^9, 
   3.791088448625541*^9}, {3.791115899797901*^9, 3.7911159338992767`*^9}, {
   3.791116217884245*^9, 3.791116370118617*^9}, {3.7911165175087633`*^9, 
   3.791116517738956*^9}, {3.7911166469677725`*^9, 3.791116865828082*^9}, {
   3.79111694225998*^9, 3.7911170359945803`*^9}, {3.7911172145395417`*^9, 
   3.791117288584258*^9}, {3.7911173245586185`*^9, 3.791117433444224*^9}, {
   3.791118447925729*^9, 3.7911184654578156`*^9}, {3.7916807845275917`*^9, 
   3.791680788196971*^9}, {3.7916809376208963`*^9, 3.791680940631131*^9}, 
   3.792247198171977*^9, {3.792247323942341*^9, 3.792247448338916*^9}, {
   3.7922485388203583`*^9, 3.792248569051941*^9}, {3.792405046353099*^9, 
   3.792405387080571*^9}, {3.7924054189537907`*^9, 3.79240552830215*^9}, {
   3.792405599259572*^9, 3.7924058995759487`*^9}, {3.7924064406107197`*^9, 
   3.792406561649805*^9}, {3.793353108903316*^9, 3.793353121804906*^9}, {
   3.793353151940961*^9, 3.7933531522779303`*^9}, {3.7933533467049932`*^9, 
   3.7933533471134033`*^9}, {3.793353833974112*^9, 
   3.79335384152493*^9}},ExpressionUUID->"1da854e9-5038-4c7a-abab-\
228d1795fe30"],

Cell[CellGroupData[{

Cell["Examples of some implemented loss layers", "Subsection",
 CellChangeTimes->{{3.698163362495778*^9, 3.698163382527815*^9}, {
  3.7933532972177277`*^9, 
  3.793353310296303*^9}},ExpressionUUID->"feba72e3-6005-4455-b391-\
2eb00f103e26"],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["MeanSquaredLossLayer",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MeanSquaredLossLayer"],
 " : represents a loss layer that computes the mean squared difference \
between the ",
 Cell[BoxData[
 "\"\<Input\>\""], "InlineFormula",ExpressionUUID->
  "eed5eb18-33e2-431f-a61e-5b2187ea8f60"],
 " port and ",
 Cell[BoxData[
 "\"\<Target\>\""], "InlineFormula",ExpressionUUID->
  "241a0848-8adf-4b00-ae3f-fcda0049d52c"],
 " port. (Gaussian type used for regression problem)"
}], "Item",
 CellChangeTimes->{{3.688381240743415*^9, 3.688381241570215*^9}, {
  3.693775104763894*^9, 3.6937751067334814`*^9}, {3.697831210585802*^9, 
  3.697831212213247*^9}, {3.697888100420549*^9, 3.6978881272905693`*^9}, {
  3.6978885578067713`*^9, 3.69788867554893*^9}, {3.702925116402741*^9, 
  3.702925116821825*^9}, {3.7029252205144253`*^9, 3.7029252744693346`*^9}, {
  3.7029253803276434`*^9, 
  3.702925383521128*^9}},ExpressionUUID->"5b3cbb84-0532-4b37-a11f-\
2303b4b7875a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}]}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MeanSquaredLossLayer", "[", "]"}], "[", "data", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meanSquaredLoss", "=", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Mean", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#Input", "-", "#Target"}], ")"}], "^", "2"}], "]"}], "]"}],
       "]"}], "&"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSquaredLoss", "[", "data", "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.702926592146823*^9, 3.7029266081862955`*^9}, 
   3.709040494060669*^9, 3.769802974514093*^9},
 CellTags->{"Mean", "Flatten"},
 CellLabel->"In[77]:=",ExpressionUUID->"6d2566c6-633b-49ff-a4bc-cafb1410cab7"],

Cell[BoxData["2.6666667461395264`"], "Output",
 CellChangeTimes->{3.713096273188836*^9, 3.769802975023213*^9, 
  3.793366740031382*^9, 3.824779080730527*^9},
 CellTags->{"Mean", "Flatten"},
 CellLabel->"Out[78]=",ExpressionUUID->"edb3224c-3805-46a5-abf8-79e4f91ff2b2"],

Cell[BoxData["2.6666666666666665`"], "Output",
 CellChangeTimes->{3.713096273188836*^9, 3.769802975023213*^9, 
  3.793366740031382*^9, 3.824779080733893*^9},
 CellTags->{"Mean", "Flatten"},
 CellLabel->"Out[80]=",ExpressionUUID->"d442ff8a-d881-4f91-921f-1773e780fc2f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["CrossEntropyLossLayer",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CrossEntropyLossLayer"],
 " : represents a net layer that computes the information- theoretic distance \
by comparing probabilities with specified target values. (used for \
classification problem)"
}], "Item",
 CellChangeTimes->{{3.6883811932318153`*^9, 3.688381193983615*^9}, {
   3.688381502148015*^9, 3.688381515209215*^9}, {3.688472200291486*^9, 
   3.6884722122575326`*^9}, {3.6937750992707295`*^9, 3.69377510229711*^9}, {
   3.6978311789610767`*^9, 3.697831179710894*^9}, 3.697886560450691*^9, {
   3.697886635291339*^9, 3.697886661677109*^9}, {3.697888039239934*^9, 
   3.697888057650634*^9}, {3.7029252900736628`*^9, 
   3.7029253922973757`*^9}},ExpressionUUID->"71b44a2d-0b8a-4500-8d3b-\
9d41b5363318"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.2", ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.12", ",", "0.3", ",", "0.6"}], "}"}]}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CrossEntropyLossLayer", "[", "\"\<Probabilities\>\"", "]"}], "[", 
  "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ceLoss", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Total", "[", 
      RowBox[{"#Target", "*", 
       RowBox[{"Log", "@", "#Input"}]}], "]"}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ceLoss", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.7040179905101337`*^9, 3.7040180061012897`*^9}, {
   3.7090404967727413`*^9, 3.709040541858317*^9}, 3.769802977322342*^9},
 CellTags->"CrossEntropyLossLayer",
 CellLabel->"In[81]:=",ExpressionUUID->"d2b0d301-3135-4cf6-9284-2924bd885684"],

Cell[BoxData["0.9731465578079224`"], "Output",
 CellChangeTimes->{3.7130963006274495`*^9, 3.769802977746882*^9, 
  3.79336674006174*^9, 3.824779080820157*^9},
 CellTags->"CrossEntropyLossLayer",
 CellLabel->"Out[82]=",ExpressionUUID->"d537bb1c-bd6e-421e-b925-f9c876cb8a0e"],

Cell[BoxData["0.9731465512527551`"], "Output",
 CellChangeTimes->{3.7130963006274495`*^9, 3.769802977746882*^9, 
  3.79336674006174*^9, 3.82477908082306*^9},
 CellTags->"CrossEntropyLossLayer",
 CellLabel->"Out[84]=",ExpressionUUID->"548661f3-a5c6-4854-9c43-3f05c6bddc04"]
}, Open  ]],

Cell["Implement a MeanSquareAbsoluteLoss using ThreadingLayer.", \
"ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 
   3.793354818574264*^9}},ExpressionUUID->"f306696a-6872-4e8a-bd39-\
7660ac8f81b5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Hint: ",
  FontWeight->"Bold"],
 "Refer to the documentation of ",
 Cell[BoxData[
  TemplateBox[{"\"ThreadingLayer\"", "paclet:ref/ThreadingLayer"},
   "HyperlinkPaclet"]],ExpressionUUID->"e60c6369-5f32-4d64-9381-da1c3b9315d5"]
}], "Text",
 CellChangeTimes->{{3.771583364377034*^9, 3.771583465866859*^9}, {
   3.771584014012298*^9, 3.771584041395439*^9}, {3.772391884342811*^9, 
   3.772391914673118*^9}, {3.772976956499324*^9, 3.77297699550671*^9}, {
   3.7910858978693485`*^9, 3.791085942022373*^9}, {3.7910868415697255`*^9, 
   3.7910868680779347`*^9}, {3.791118822882831*^9, 3.7911188448426476`*^9}, {
   3.791119068031641*^9, 3.7911191050724373`*^9}, {3.7911194298494024`*^9, 
   3.7911194607283044`*^9}, {3.791142479255427*^9, 3.791142547670724*^9}, {
   3.791144197676152*^9, 3.7911442227785196`*^9}, {3.7912951849334917`*^9, 
   3.791295193261408*^9}, {3.791295244491641*^9, 3.791295280786448*^9}, {
   3.791295397706025*^9, 3.7912954033701124`*^9}, {3.7912954385494366`*^9, 
   3.7912954491742725`*^9}, {3.791297497970095*^9, 3.791297658973446*^9}, {
   3.791297739165211*^9, 3.7912977393973727`*^9}, {3.7912978258514223`*^9, 
   3.7912979288007526`*^9}, {3.791297985679435*^9, 3.7912980014002137`*^9}, {
   3.791298866608861*^9, 3.791298871854828*^9}, {3.7916515453269806`*^9, 
   3.7916515607302074`*^9}, {3.791652959017645*^9, 3.7916529676656723`*^9}, {
   3.7916530554169188`*^9, 3.791653078912707*^9}, {3.7916542568834085`*^9, 
   3.791654259348013*^9}, {3.792406093643731*^9, 3.79240615463975*^9}, 
   3.793008078457498*^9, {3.793354976723575*^9, 3.793354988898571*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8376c06e-cb5a-4015-a3d4-2fde30a0c95f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meansquareloss", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ThreadingLayer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", "#2"}], ")"}], "^", "2"}], "&"}], "]"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], ",", 
        RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}]}], "}"}], "\[Rule]", 
      "1"}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Real\>\""}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793354325516818*^9, 3.793354355201346*^9}, {
  3.793354445082045*^9, 3.7933544699826393`*^9}},
 CellLabel->"In[85]:=",
 CellID->1037295504,ExpressionUUID->"4c63fba5-b9cf-4541-8204-1dd07361a50a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}
                    , {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {162.99999999999997`, 94.99999999999997}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{26.49999852628066, 26.5}, {25., 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract[#, #2]^2& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[Automatic]|>, 
                    "Inputs" -> <|
                    "Input1" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "Target" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.793354470702339*^9, 3.793366740298485*^9, 
  3.824779081002076*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"368ebfd3-299e-4fcd-a1f3-c2f4eb03b926"]
}, Open  ]],

Cell["\<\
Perform linear regression using the created layer on the following layer: \
data={1\[Rule]1, 2\[Rule]2, 3\[Rule]3, 4\[Rule]9, 5\[Rule]5}.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354387192741*^9, 3.793354431385222*^9}, {
   3.793354554668207*^9, 
   3.79335458618745*^9}},ExpressionUUID->"ccee2728-6b8d-4e37-8a0c-\
7644a929976a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "2"}], ",", 
     RowBox[{"3", "\[Rule]", "3"}], ",", 
     RowBox[{"4", "\[Rule]", "9"}], ",", 
     RowBox[{"5", "\[Rule]", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{
    RowBox[{"LinearLayer", "[", "]"}], ",", "data", ",", 
    RowBox[{"LossFunction", "->", "meansquareloss"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "10000"}]}], "]"}]}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.79335444126553*^9, 3.793354451168581*^9}, {
  3.7933544922252913`*^9, 3.793354537460985*^9}},
 CellLabel->"In[86]:=",
 CellID->553289382,ExpressionUUID->"091e819c-9424-4fd0-90e9-b0b7863e0001"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Input Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Port", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.793354452510089*^9, 3.793354499447451*^9}, {
   3.793354531871552*^9, 3.7933545447660227`*^9}, 3.793366747870798*^9, 
   3.824779090884515*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"e857eab5-34e9-41e0-ac51-1942eb01c5d4"]
}, Open  ]],

Cell["Plot the solution.", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354387192741*^9, 3.793354431385222*^9}, {
   3.793354548885322*^9, 
   3.7933545886595163`*^9}},ExpressionUUID->"4702eb06-2b86-450e-b294-\
624b2d795b67"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"List", "@@@", "data"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"dataPlot", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"trained", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->"In[88]:=",
 CellID->530451764,ExpressionUUID->"fff8ac58-6d59-438b-8236-259aeddd0db6"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 9.}, {5., 
      5.}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwl0ntMU2cYB+CDlHtRLiLgN6EYJgO5yJIxnNPzTpaMq5tDICA6KHJxIgxC
MwU2KpMB2WBViQKOICAYJSCS6gJznK4yUS7doJMxiqOhdgSErNh1tAXt6Hv+
ODnnyfd7L19yfPj5H2duoigqbuMxv5u+5FuHnig5sPFJ6U2zzKCcF5vES6Y3
yIucnmVMDwe+4vFOmg314lmmSVLjbcU7a7Yw/OQsk7tfcHrVu9ps6uzEX4x8
LadO492A9cbrTxkbxZzfsvdNrF+PUjAtw80Fz737sJ6qm2S6b1crcoOHsf7D
/kdMNj3esFQoR4u/72Dy1P4qcfefmE/06Kftfc77zYYrzU5ru/UbXes0EtCS
psJ5Cz7TNF9xhLEc/Rvztm/O0QW/nOfn+y2aLfHfN0/f+Ywb7xG1jPvcWH5O
t5ScWtyTpMH8cLmGLm9eP/zv0grm81UvaEquhPvFWjwn4Tp6V1HWmSMBOjwv
Y1bpZ7oriQ4//YfzLxIjHa3+9IuLBXqzr6XeWqcPPRPt9vIy4nlwkIlefMAX
Pupaw/pEKQXBzpM7Ij55iflCm01gT+vSZ7SvcJ46zBI+WE5Z3ZlAgTkvLuPA
lPSERUqghdlQKbWCu1WDx3k6tKTnH2vIshIoZbJNZgvDwmwho7DkLrfREvOu
2XYQkr1bFpvOQWsv2MOvLoEOgr1WmA+ZdIAfu8uvBlpam62UchyhxCLgo9Gn
6Gu9sZvBfqY4Mk9sY3Zae+0WUHf41DWX2uL8z485Qd0bnpy+BDt0NOUMosas
oXSePc6LqneGlLpjMu48WhgV5AL699sNzQMOgP+fzAVU6oNnpJVcnD+e6Qqt
+0PJWLoj9ku22wpdFQLn7KDN2M+xdStUJmTEWOrQadK33eCtmZablWNbcN/X
p92g3v9q11iME+bFBdugTFJTH9PHesXNHeJIQvuwrzP2D/nBHd7LGzrqXI1W
NsR5QPNrfN9RHZrq1XiA74Mblw8ddcG8rsoTREHSgIkBNLXPaztkaTnjjwNc
cX6wZDvw77zgVX+HTotLIpBbHr8efQENmmQCgnjxH9xLaOpSKoEqnaBWdBkt
nEon0L3XsHalCS3JyCVg+Nk02dHJ5ovPERBNcGsGh9h8RyeBxrbTOV8/ZvtH
dRNoK5JFRI6geUs9BO5tExlHZGy/0HsEZlJcc+RPWN+XEPBTeUbMqdi8/AmB
PeJir+tqtFIwReCdCoUhc57NeygIxPo19Swssvc7riRQeIrntbLCemGRQOm7
5wy9Wnafb5cJVDjO/V6kY/cP0RCov932jV7P7l+kI9Aq5GT3G9m8u55A5+HM
g6Xr7D79RgLinQ93HHjF7pP6ksCAdpfBZGL3MZkI/A88/L+C
        "]]},
      Annotation[#, "Charting`Private`Tag$42099#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.7933544882440357`*^9, 3.793354501097866*^9}, {
   3.793354532065887*^9, 3.793354544909196*^9}, 3.79336674800784*^9, 
   3.82477909109587*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"e4051ed4-a628-4c87-82d5-da8c8cd7520f"]
}, Open  ]],

Cell["\<\
Do a validation of your implementation by comparing the solution with the \
implemented MeanSquaredLossLayer[].\
\>", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354387192741*^9, 3.793354431385222*^9}, {
   3.793354548885322*^9, 3.793354550844301*^9}, {3.793354656978799*^9, 
   3.793354703833641*^9}, {3.793354792758898*^9, 
   3.793354834102057*^9}},ExpressionUUID->"bee27a07-e2be-4ac9-9cf1-\
89de423e9f24"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net1", ",", "net2"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetTrain", "[", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "]"}], ",", "data", ",", 
       RowBox[{"LossFunction", "->", "#1"}], ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "10000"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MeanSquaredLossLayer", "[", "]"}], ",", "meansquareloss"}], 
     "}"}]}]}], ";"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793354711650103*^9, 3.793354738489341*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"32fd8cf5-e05d-44a4-89e4-5676efb8573e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"net1", "[", "x", "]"}], ",", "\"\<implemented\>\""}], "]"}],
        ",", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"net2", "[", "x", "]"}], ",", "\"\<built-in\>\""}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "dataPlot"}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793354763809207*^9, 3.7933547761520243`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"69ac844e-b622-4401-a4f8-ab16e1bfe1b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl0ntMU2cYB+CDlHtRLiLgN6EYJgO5yJIxnNPzTpaMq5tDICA6KHJxIgxC
MwU2KpMB2WBViQKOICAYJSCS6gJznK4yUS7doJMxiqOhdgSErNh1tAXt6Hv+
ODnnyfd7L19yfPj5H2duoigqbuMxv5u+5FuHnig5sPFJ6U2zzKCcF5vES6Y3
yIucnmVMDwe+4vFOmg314lmmSVLjbcU7a7Yw/OQsk7tfcHrVu9ps6uzEX4x8
LadO492A9cbrTxkbxZzfsvdNrF+PUjAtw80Fz737sJ6qm2S6b1crcoOHsf7D
/kdMNj3esFQoR4u/72Dy1P4qcfefmE/06Kftfc77zYYrzU5ru/UbXes0EtCS
psJ5Cz7TNF9xhLEc/Rvztm/O0QW/nOfn+y2aLfHfN0/f+Ywb7xG1jPvcWH5O
t5ScWtyTpMH8cLmGLm9eP/zv0grm81UvaEquhPvFWjwn4Tp6V1HWmSMBOjwv
Y1bpZ7oriQ4//YfzLxIjHa3+9IuLBXqzr6XeWqcPPRPt9vIy4nlwkIlefMAX
Pupaw/pEKQXBzpM7Ij55iflCm01gT+vSZ7SvcJ46zBI+WE5Z3ZlAgTkvLuPA
lPSERUqghdlQKbWCu1WDx3k6tKTnH2vIshIoZbJNZgvDwmwho7DkLrfREvOu
2XYQkr1bFpvOQWsv2MOvLoEOgr1WmA+ZdIAfu8uvBlpam62UchyhxCLgo9Gn
6Gu9sZvBfqY4Mk9sY3Zae+0WUHf41DWX2uL8z485Qd0bnpy+BDt0NOUMosas
oXSePc6LqneGlLpjMu48WhgV5AL699sNzQMOgP+fzAVU6oNnpJVcnD+e6Qqt
+0PJWLoj9ku22wpdFQLn7KDN2M+xdStUJmTEWOrQadK33eCtmZablWNbcN/X
p92g3v9q11iME+bFBdugTFJTH9PHesXNHeJIQvuwrzP2D/nBHd7LGzrqXI1W
NsR5QPNrfN9RHZrq1XiA74Mblw8ddcG8rsoTREHSgIkBNLXPaztkaTnjjwNc
cX6wZDvw77zgVX+HTotLIpBbHr8efQENmmQCgnjxH9xLaOpSKoEqnaBWdBkt
nEon0L3XsHalCS3JyCVg+Nk02dHJ5ovPERBNcGsGh9h8RyeBxrbTOV8/ZvtH
dRNoK5JFRI6geUs9BO5tExlHZGy/0HsEZlJcc+RPWN+XEPBTeUbMqdi8/AmB
PeJir+tqtFIwReCdCoUhc57NeygIxPo19Swssvc7riRQeIrntbLCemGRQOm7
5wy9Wnafb5cJVDjO/V6kY/cP0RCov932jV7P7l+kI9Aq5GT3G9m8u55A5+HM
g6Xr7D79RgLinQ93HHjF7pP6ksCAdpfBZGL3MZkI/A88/L+C
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$42753, {1}}]& ], 
         Annotation[#, "Charting`Private`Tag$42753#1"]& ], 
        TagBox[
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl0ntMU2cYB+CDlHtRLiLgN6EYJgO5yJIxnNPzTpaMq5tDICA6KHJxIgxC
MwU2KpMB2WBViQKOICAYJSCS6gJznK4yUS7doJMxiqOhdgSErNh1tAXt6Hv+
ODnnyfd7L19yfPj5H2duoigqbuMxv5u+5FuHnig5sPFJ6U2zzKCcF5vES6Y3
yIucnmVMDwe+4vFOmg314lmmSVLjbcU7a7Yw/OQsk7tfcHrVu9ps6uzEX4x8
LadO492A9cbrTxkbxZzfsvdNrF+PUjAtw80Fz737sJ6qm2S6b1crcoOHsf7D
/kdMNj3esFQoR4u/72Dy1P4qcfefmE/06Kftfc77zYYrzU5ru/UbXes0EtCS
psJ5Cz7TNF9xhLEc/Rvztm/O0QW/nOfn+y2aLfHfN0/f+Ywb7xG1jPvcWH5O
t5ScWtyTpMH8cLmGLm9eP/zv0grm81UvaEquhPvFWjwn4Tp6V1HWmSMBOjwv
Y1bpZ7oriQ4//YfzLxIjHa3+9IuLBXqzr6XeWqcPPRPt9vIy4nlwkIlefMAX
Pupaw/pEKQXBzpM7Ij55iflCm01gT+vSZ7SvcJ46zBI+WE5Z3ZlAgTkvLuPA
lPSERUqghdlQKbWCu1WDx3k6tKTnH2vIshIoZbJNZgvDwmwho7DkLrfREvOu
2XYQkr1bFpvOQWsv2MOvLoEOgr1WmA+ZdIAfu8uvBlpam62UchyhxCLgo9Gn
6Gu9sZvBfqY4Mk9sY3Zae+0WUHf41DWX2uL8z485Qd0bnpy+BDt0NOUMosas
oXSePc6LqneGlLpjMu48WhgV5AL699sNzQMOgP+fzAVU6oNnpJVcnD+e6Qqt
+0PJWLoj9ku22wpdFQLn7KDN2M+xdStUJmTEWOrQadK33eCtmZablWNbcN/X
p92g3v9q11iME+bFBdugTFJTH9PHesXNHeJIQvuwrzP2D/nBHd7LGzrqXI1W
NsR5QPNrfN9RHZrq1XiA74Mblw8ddcG8rsoTREHSgIkBNLXPaztkaTnjjwNc
cX6wZDvw77zgVX+HTotLIpBbHr8efQENmmQCgnjxH9xLaOpSKoEqnaBWdBkt
nEon0L3XsHalCS3JyCVg+Nk02dHJ5ovPERBNcGsGh9h8RyeBxrbTOV8/ZvtH
dRNoK5JFRI6geUs9BO5tExlHZGy/0HsEZlJcc+RPWN+XEPBTeUbMqdi8/AmB
PeJir+tqtFIwReCdCoUhc57NeygIxPo19Swssvc7riRQeIrntbLCemGRQOm7
5wy9Wnafb5cJVDjO/V6kY/cP0RCov932jV7P7l+kI9Aq5GT3G9m8u55A5+HM
g6Xr7D79RgLinQ93HHjF7pP6ksCAdpfBZGL3MZkI/A88/L+C
            "]]}, 
          Annotation[#, {{Legended}, Charting`Private`Tag$42753, {2}}]& ], 
         Annotation[#, "Charting`Private`Tag$42753#2"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[Medium]], 
         PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 9.}, {5., 
          5.}}]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"implemented\"", "\"built-in\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.793354777743787*^9, 3.793366764343781*^9, 
  3.824779113308029*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"f03a714e-bc47-4c8f-bd25-5404ff4c2797"]
}, Open  ]],

Cell["\<\
You can further repeat the same experiment with the functional form of \
MeanAbsoluteLossLayer[]\
\>", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354387192741*^9, 3.793354431385222*^9}, {
   3.793354548885322*^9, 3.793354550844301*^9}, {3.793354656978799*^9, 
   3.793354703833641*^9}, {3.793354792758898*^9, 3.793354834102057*^9}, {
   3.793355496413538*^9, 
   3.793355540877049*^9}},ExpressionUUID->"8ac628be-1629-480b-9389-\
52a8fdd32c05"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exploration: Debugging", "Section",
 CellChangeTimes->{{3.7933512415364017`*^9, 3.7933512970303917`*^9}, 
   3.793352399421979*^9, {3.7933596684712267`*^9, 
   3.793359672570657*^9}},ExpressionUUID->"c794cdd8-1e93-4f33-bed2-\
5d851c806474"],

Cell["Identify the mistake in the code:", "Text",
 CellChangeTimes->{{3.7933513015503197`*^9, 
  3.793351310046178*^9}},ExpressionUUID->"2621e8a3-a3c0-47de-ab58-\
2a362b9c43b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet2", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"500", ",", "Ramp", ",", "12", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "1000"}], ",", " ", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "9"}], "]"}]}], "}"}], "]"}]}]}], "  ", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"10d8bd75-7994-47d1-9cee-8a26bbf622c1"],

Cell[BoxData[
 TemplateBox[{
  "NetChain", "tyfail2", 
   "\"Inferred inconsistent \
\\!\\(\\*RowBox[{\\\"\\\\\\\"dimension\\\\\\\"\\\"}]\\)s for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"output of layer 4\\\\\\\"\\\"}]\\) \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"a length-10 vector of real \
numbers\\\\\\\"\\\"}]\\) versus \\!\\(\\*RowBox[{\\\"\\\\\\\"a length-12 \
vector of real numbers\\\\\\\"\\\"}]\\)).\"", 2, 4, 4, 34311705340070999455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"57a43911-a6c4-43d2-a89c-ea4216646328"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"7bdad379-7634-4fb9-8941-1161dbfce633"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exploration: Regularization andNetwork Training", "Section",ExpressionUUID->"bc90481c-6240-44fd-9c05-5da642e3bbe7"],

Cell["\<\
Generate a noisy data, by adding random noise , with an underlying gaussian \
distribution and visualize it.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.793358652696858*^9}, 
   3.793358770933984*^9},ExpressionUUID->"991a5a23-d6b7-4014-8c9c-\
77a7c057acbd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}], "]"}], "+", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", ".15"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"List", "@@@", "data"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7933586281626463`*^9, 3.7933586285073957`*^9}},
 CellTags->"NormalDistribution",
 CellLabel->"In[110]:=",
 CellID->1098178851,ExpressionUUID->"34fcb662-dc16-45fc-b871-53d1fe696119"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
    1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3., 3.}, {-0.34301783250612206`, 1.0312314435622048`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.793358628987965*^9, 3.793359232512658*^9, 
  3.793367007868937*^9, 3.824779457534869*^9},
 CellTags->"NormalDistribution",
 CellLabel->
  "Out[111]=",ExpressionUUID->"5277c016-2575-4ec8-8860-bebf3caacff0"]
}, Open  ]],

Cell["Use a low \[OpenCurlyDoubleQuote]capacity\[CloseCurlyDoubleQuote] \
perceptron network for training.", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, {3.7933587511833353`*^9, 3.793358821955263*^9}, {
   3.793358870131806*^9, 3.793358887354498*^9}, 3.793359030966908*^9, {
   3.7933592076017523`*^9, 
   3.79335923007909*^9}},ExpressionUUID->"4d8a120e-0654-450c-9af1-\
22f6bab2d533"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "Tanh", ",", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net3", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot"}], 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793358896701003*^9, 3.7933589467921343`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"cbbc67f8-b30d-49fc-963f-e076f829b159"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt2Xk4lFsYAPCJRCplqUShtLjatKhccdRtUQkVUoRsRQpli8qS7DTKXjdU
tpJkmYlwxjWkrEmFFJUkzHzKGsX9nNdf/J73Pe97tu+beZ5Zaul42EaAwWDE
TGMwJv9aPWZSExPCHPpfho5EHZIak1mp/hs8NFKLuHtSTN1GwDfbatHKjwUv
evvAWZm1qHv2l3vNn8DH9tQiJ3tV49wycKJ7DbqyooVjGwiWb6hCCbcUb9SI
gS/aVaLEtiDHQzNnQL9/OWhB/RG9v+YLEW/RzUGV+kd2Va2YTmy6MBIpx0mk
FC0FM9czUVjbK6GsJWAOMwLpn9N/zpwP7hoKQU2hB/cbCYGV6q+iroq9+p86
BIm1OmyRiMZ20+F7YGbANWzvP1bUlQietz4QV1cVLmm5BVZ5G4SZx9Xaim5O
xRXCsLTHFku/q2DpQ5FYKVfl9BwrcFxWLNb+a4WL4jIwozMZmwrzlx+XAwto
3MVOX1lvmDLgOzfv4thk7a3jEuBUdA93LnIYbRIE19+4j/1Fc30ivgoQb16R
hkt7tMJ/pYNZgw9x44uZmiop4CbNTNyV1sC3TQb7BGbiedbW+o3xYLOFj7BF
a6Dk45Apb8jC49W18dYO4NaV2fjvLNPUuvXgUfEc/OjNPJX81eBKlRys8Idb
kLAKvEcvB8/QWVtjIw/eG5qDG77/6R8TA9tN5GD7FYk7lPjTiF+/y8UfdI5U
zekGm//Ixfouwob9X8HRonl4S5nj6ZIP4EH1PCxwUuu6QQ34dkIeTrj9qdUn
E6ywNx/P4Ubb2qaDpU3ysU/Pvr4D98F55/Kx7d85ggtvgz9E5eONTX7Kj0LB
ja35OGViS96NQHAnLx9Lr+rR8LgKThzPx+OuRw794wX+KcfCLyWXezTbg9eY
sLCGetM0bAvWs2PhbMuw0PuW4DnuLBzzZOCO43GwUyQLz2xOVzI0AovfYeFL
jBM5fx8GH37AwpZ65eVC+8HZpSz8xu2iXs9ucF01C2vfWdtcvwMc9o6F1/Gi
e2+pgT/2sHCy1H43X1Ww6yALS20fn7DdAM4YZ+HREFvJjX+BeXPZOMvfsVx5
xdR+LGRjyyse7opLwSfk2filc8h7qUVg/bVsfOXMzfA588GFm9h4o81tNEMc
zFFj4wTjrHvDImD2LjbWPcw27Js+dX772FhAhyP8nQFepcvGrN0vCj79ZhDr
HGZje9RwpmUELGnExnJq75e8HgB7HGPjho0ddVV9YE9TNg5Yw/Pl9oJlzdlY
beXQpuIusMlJNu6Vn/ia3wFWt2LjpEUicVntYLY1GxtIiu9PawU32LCxyByZ
34lN4GBbNi6aoZgV1whupe3EWGMRWT+VT3v56GaJkGqwNe2mfg2uXyWYSdcL
4+1x8+KCj9P9tL7pKblwwFxLNh5oN25xKAJXWrBxesvJMJunYAczNjZttNc0
ywNnmrDxvNoLfUbZ4ABjNuY+v3RXLxM8bsDGHqXXDLTTp/bvEBuveRYxY8d9
cIUOG7fnxT5VSwJLaLNxVFaS/cbb4N872Vg7PWPx6jiwjwYb/07OqVWMAidv
ZePsW898FjPBFhvYeOH1mo45QeDHivR9CXobM8MfjBbT98WvTXvCe2o9Umzc
6fojs88dHCdI3xfHUbPvF8Dxoyysayco/tkRvOkHC7NM57u+PgXW/MDC9kZy
q6qtwA8aWFhOf1Uz13yq/3MWDvhHTYN1lNjnejYLGymfEIrfO9XvMguLLrdl
R/4D/uDIwiVLHO1CELjkJAuvFPet8doK4/V2sfDg8P1os1XgwuksfDyIHXtb
EfJ/DeRjjvTL+BZ5iHd25OMwNepfI2mI55fl42Veaqm6M8Gql/Nx0Cyd9DCh
qftnn4/5t8wevJwG/nI0H5+/KHwifGACT9ZT3ZCPk37fOnv5LbigLQ87LCl1
/lUL9nuZh7dqdrq6Pgf35+XhWm+VK2efgiuD8vBvgfKIEwlgyzV5+OhM/mMN
M2KGplUuXqYsmVdgBPEb2rmYv3/bU1U98M21udg/zI+zVgscMZSDc+YufLVk
GYx398/BYgu0fv75Ok78N/MJ5i67sbnkLDikPgvrvg3vjrUBP/HOwk3BwUnO
J8Bz1mXh3j6f2SsOTuUHPcKS2LEjdA3Yc3MmtjQ5GHWs5w9x/OkMzIgSGRg4
DZbdfQ+H7J3+oNYC3Nh6F0uNTZinG4M/X7iLlSyHq0y0wZ8Sk7GeSue9/1aB
d7Yl4jvVZUeYnb+Jt32Iw+pC3rmrrcGZRVexUmf4TKYpuLrLFy94ftt8wACc
LeGD+4IKZxXvBp/meODU2UNWuqvASYFWWELqrJRz9xgxZ9QFdS0zcWU5gUOO
R6Mora1bd1weJY6WzURWt42/dieOTDrpbTAH1aXJzZyWMDRpi4PxVUhudvYG
zBogftzXgEQVOuu+P/hJzuf8uibkYHAtLj29b9Ic57etyKKsrUruBo/Uz7Vq
R8s0xg+V+34n422dPqOM07mfnrG+wnlc7kD2/U9MQxM+kXqiS76hdVeEjs1Q
fD/pdmXJbiRTWB/bNZ1Y66RcNxIauvX2ZWcLyY/+qxu1nt1ocP0BsdYQ6kYh
J8z1pDcSJ0U5dKNv2wt2K+9oJvkK5d0oacxho675OzJfdL4HhW3d5qyygzip
6VIPcr8gmC2hCHG7wB6k2xO/9l3n20kruNzuQX9aKpQszhH7LK/oQccLFeTP
X35D8l8t7EWSFxtnxdx6TeL7c3vRyMQvccqTmHGquBd9DJCX1j4Odn3ei9Kj
7JePSoOt3/cizWyGhllMA6kXIsBDdt/WnFsZ+YrEWw7ykO65wy7eTsQWv4x4
aPOgu2eTHrGCiAUPjQuUBYSIEfv8cOahKLljifzQelKvP4qHrjwUTT47p47E
/33HQ/sKDB/JV9cSJ7XxkNTzpIJXIcQc5jceyvi8pUFVhFhBbZiHGhdZCY4L
1JD5pM/nI+WgZzYRIy9JPl+XjwajZ5zXYhNrcQz5iHPv0JWfruArpnxkiL/F
GPW/IPnYjo98hiQr5fiVpL/RVT56Z+2g/PhLBcmvy+Gjkg/6W1mpxO0znvJR
qpHqrmI7YsbaYj5y0R4/UUWVk/G7n/PRvDXMyG9jXDLf1BY+Gr7vcodfQsw4
0sZHH5ccezjoS5zE/8JHmXOXlQuKcGG/evloX3/uiLxUGbHSOB+pOMQJrXr3
Hxl/QIBC0l8vSaxLIPYxnUGhzre712xXAB8Qo5Bf4Ttz4zWlpL7JEgq5Cg6H
Lw0uIfF92yi0axCnrZ9L3H5cnUIS34JKNaKLyX6YaFIo66XM4LHkIpKvvIuu
H6lpeqOgkPRn6FEo76qwWxIi5oQeovu51l/PKi8gcWEDCskfsyx7+eopiVcZ
U8hYIUBZsJtF4syTFFopobdL3ImYE2dFoQFBaTP5oXzSj2lDochvGZHqAsRa
+nYUsmg+/3Af/V6fzF94hkLrqtTLj4rlwfk4UOhlVs3IBZlcYjEnCsUlxUj4
JeWQfjHOFLK9Yb6GuZLYZ84FCgm6/TDP3PiExGtcKfTqVOHFwqfZ5D7Pd6dQ
4rGrNys1idsPelDI3VM54kV0Ful/3ZNCuvy+t49TH5F+UV70eizZ8jHsTHi/
XaLQ+JvLpy9VPiTjnS5T6M2+XU8smx+Q8dpXKJRZLDqq3Z1BLO5NIf8Nr3au
H0sn9appm6bEhs6fTZzk7kOhTYvMGscWp5F8KV8KiYYvX/J5bSq5X/dof2b0
2FRqppD+in4UKnR5kpWldx/mRzuyy304yuIeiQ/TPm2qqeXlfBfu01UKadVP
Dz7pl0wcSVt6V9WrvTeTSL9K2h8dFVVNtRNJvZ+0w49mVyjZ/0s8x59C25GG
8WDoLTJehnbPypffSx/Fk/HStBPEjnpF1MWS/Z9Je9/Ql9kmP6JJvIeuN/LB
6c4qySgS59BOK/+zfmDzDbK+QNpGj0JKOUZMeF/SFlVenyrzI4z0755czy/t
F7mbg4kDaVdUWvbqeFwjXkBbMe7S3M5nvuQ8Yun9EqhbYzM+7kXOexbt4rMW
D1UCXEi+M73f9ZlybQaHjWC/6fOYfvKAQtA/mmgyfpg+v4x1d91nF1pOmuNL
n++HZrvHyboeJF5A34dl6lvsHJ97T5pRSt+XTbq+kXJJV0n82UX6Pj0+eKBX
OnTSFkH0fZNp36R05E0EiZu4UchMJFzgg3Ykqa9A30+G2oW2f4SiSb1r5+nn
NwHFi1+5TeJP6PsfnZMjvNv0zqTbF9PPx4WvEurblyRNWsGLfn64f65lOI4l
k3xxW/p5WOcQ8JadMmmfNDMKRRSmaPSlppL8R6YUYu9pG5gZk0b6pR2nkIj5
YSsNlwwyP1cjCj24vk3rvsoj4isH6f3hJhYJb84i+fz9FDIfmaF2Zutj0k9P
m0Ih2d3SixKzSbxrJ4U0FxWIt6fkkPHOWyl0Jre3LnJVLrHTZvr5PagQ8U8G
sc/JDRT66RsompaZR8bLrqZQareh4LlcFsn/Tr/fXvsHl8qrskncS4beL/li
71cs8MQCCh0/svz35sKnZD4f51JobtHPgTFOIak/zqCQR/j1zuDaErL+inY+
SllVdl9dH8N+t/JRQ+mQJe8Vsc+WJj5aMJblmG7PmXTShTo+clq/oHfWuVJS
35D+PFgR19HR4FJGjGP4KMLO962F33OSb6fFR0FV0/I7Sojbp6nzkd9av5un
x8DXVfnI/YefvpNLJckPV+Yji4v+L71tX5D5zZXiow3BgSV39leR+az9Sn8e
poentkrUkfkK+vBQrajYNQs9Yp8TF3mo0iHCqiOUmJN1nofM4vbOcxOoJ/dv
sw0PHTHVrrnsRaxVs4+Htnfs2xt+9hUZrybOQ3MGdNQzD70mlo3vRfNaNlq5
nydm3Gf2IimOdOjOm8TtS4N6kUxYR0tTIzHnj1svUlp+yVPIuJHkbzXoRTsN
HhaYmb0h68mf3Yvc8mZuEz/zjuQLufWgdpeKzW7+74l1VtPfryqFZNLvEzOY
Ct2oafHuiWYucfuL+d2onlv2QkOolezXckY34kiVmgkFEFucb/yOEvOeBUUF
fiDrc/f6jswGsltzQtrIeszLuhC/4OB/7pWfiB9s/4ZSA5MtrIO/knzt5R1o
xdBDSY9b30n/u7Ht6GOOfLH6aR7Jz0psQYax7UE9zD7i8juN6E5KWLFOzE+S
v7OoBrko6dx99y+4NKoG7Xs4K9AyBXzsbA0ayA7R98gDN8nVoANFQV/uNYAl
r1ajkQb/mWNi/cSO+lXoEOOyYUYg+M14JZpucpYndHGA+FsGF8keMFLY5Ate
HsBFG9XREYtgsI8lF1nIihcUxoOZslxU/D7P37EQvPB6GXIz/S3bPAZ+4vUf
+n4idH/mlUHiEvre11pkpB32HyL+T60A+Sl6/z0YClaaXoBUOw1qYm+Ci2qf
ottnGP2td8EO1k/RGbejmqdKwd2RbCQSJvTGaxysNZiPdrJPCqR4DBN7tOag
/DkyJ4YdRoiTDjxAnav3JF5wAXcNZSDp/ec/UV5gj7sZ6FLAS5uuELDTaDra
NeF5rjkdnPkoDTX0vfd+1gHevjQF8V//e9fb9BcxQz0JrUxY2iWsMwr9HoWh
+BXuHisNwNlXQ9HsJ9Uiu03BnOMhqP+5+19+DuB5s4MQZ7DG/ncYmOF1FZkc
8uT11UzVE3dFTJHXP5v1xuA8wuzxqJv/n4dHfsN8lW9i0TcVPGQy5YSbWGbT
zI+vLcEqolFYjQovGXMG+3RFYY9Tsd4HmGDj5Bg8dPTBtJ5qsJZgAv65rV5I
ec8f4tu7k3DPqKxY+rZxYgvzVLy9IlDnoxa4PTIVR0T2h0jtA2txU7GKUpWw
7zGwj1IadjP0nHbcE6xD0d9LspsGZhWB57ll4AU20e8d0QRxmF0mTjoV2Cir
yNCadPVINmbuqA5btGIaMbcmH4s5PtxZNl+A2Lq0AJfselrMkhEkXhxbjP+c
Nd9iJDad+KEDB08Tbohf/Qd88Vsp3qJ9/r/9jBnEe0+V4dHWzK75P8GKT7l4
l0Ml8+AQuLmYi8PHvmy7Ngq+XsbFCjKywQMCwsT9tVy892jwX68lwY+/cnHU
Kxt7piq4Q6Icr6uQ6xW9CD7kUI49DP+O2nkZ/MG5HJd2GG739AWfci/HBoLh
Yd+DwR5+5dhLa2xNZQI4NK4cVxa+O3utCOzGLccS+/vnF3PAvBfl2LRZrGSA
C7auK8fU8G4x6xrwwZZyvEA1L2vnR/DcvnJswa0z8vwMvjJYjjOO9Iw/6QR3
j5bj7eeX6S2lwFioAgdM0xw27gcrzarA9cxjicxh8PV5FVhGwXVv5Rh4cH4F
nvo9hdhEtgL/DyJzSyM=
        "]]},
      Annotation[#, "Charting`Private`Tag$74211#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.17270982265472412`, 0.9848756790161133}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.793358920129492*^9, 3.793358956146235*^9}, 
   3.793359242772317*^9, 3.7933670172268753`*^9, 3.824779471283033*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"72b4c81f-c1ca-428c-bf01-a4624456a9a0"]
}, Open  ]],

Cell["Train the network with a \[OpenCurlyDoubleQuote]large\
\[CloseCurlyDoubleQuote] capacity perceptron model.", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, 3.7933587652628927`*^9, {3.7933589703607473`*^9, 
   3.793358973431026*^9}},ExpressionUUID->"2b9f1bef-6338-431d-8ed1-\
405571e1f137"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "Tanh", ",", "150", ",", "Tanh", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net1", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[115]:=",ExpressionUUID->"25942ab8-b9c1-483f-b50a-00c607da4b9b"],

Cell["\<\
Visualize the training to see how the model overfits to the noise.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, {3.7933587511833353`*^9, 
   3.7933587684209623`*^9}, {3.7933590521813927`*^9, 
   3.793359059525375*^9}},ExpressionUUID->"ff9a0794-4956-4701-b9d2-\
195493cdf991"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot"}], 
  "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[117]:=",ExpressionUUID->"bfb1b375-9cac-4cb8-a0fc-44dba98d5de4"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
DmJriyLqf93E3Qs=
        "]]},
      Annotation[#, "Charting`Private`Tag$74648#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.1904418170452118, 1.057354211807251}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.793358773244624*^9, 3.793359257452742*^9, 
  3.7933670277230263`*^9, 3.824779486799881*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"9c6e8837-3c47-42e9-8344-8b5900519c1e"]
}, Open  ]],

Cell[TextData[{
 "Now add a \[OpenCurlyDoubleQuote]Regularization\[CloseCurlyDoubleQuote] \
parameter  to ",
 StyleBox["NetTrain", "Input"],
 " to prevent overfitting (hint: look at the documentation page for ",
 StyleBox["NetTrain", "Input"],
 " under the ",
 StyleBox["Method", "Input"],
 " option)."
}], "ItemNumbered",ExpressionUUID->"5d72856d-9b25-4181-ab68-4ae5a6e48006"],

Cell[TextData[{
 StyleBox["Hint: ",
  FontWeight->"Bold"],
 " look at the documentation page for ",
 StyleBox[ButtonBox["NetTrain",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NetTrain"], "Input"],
 " under the ",
 StyleBox["Method", "Input"],
 " option"
}], "Text",
 Background->GrayLevel[
  0.85],ExpressionUUID->"f0bcbbd5-5672-45b0-ab94-2197e3f80c0c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net2", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ADAM\>\"", ",", 
        RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.001"}]}], "}"}]}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.69979025356257*^9, 3.6997902540658975`*^9}, {
  3.769805645657312*^9, 3.7698056625266953`*^9}, {3.793358845023705*^9, 
  3.793358846259119*^9}},
 CellLabel->"In[118]:=",
 CellID->1617486439,ExpressionUUID->"c3997696-047f-45a5-bdd8-ac91ef4e36dd"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt2Xk8lN0XAPCJtHijLPWiRBSSSlKpcFQqSShSSUipSFHJksqS7ETZZ94s
RUgS/YRwR5aRpZCESiokZp4UIVu/x73+4vs5555z7nPvM+bzsczG8YAtH4PB
qJzBYEz9PPE4/Mffv7PZ9K/shF8cEB+TUtg6ji3b2caB8l0pFi4j2B1ryjig
0F7wkttP8l/d4UDvvK/3Wj+TuOEGDjjZbzicW4aduNe9Eq6vaGOf8ifxgwIV
EM+Uv10njO2lsfYFJHwKcNw/d9aUGdsa82FRvYnRyoUC2HyWWSD5SvHdWRFs
L79/s2BJ7ZhllhCxasMjWFZ17/z6WSRfdOcjUGEPhGoNz8RuXJMJ27Pv1O5v
xfa6IJgBjuFv9lz5j8SVvqbAxbAHDUVxxBrJKeAc4nHkbxTJdz6eAlcC5O18
w0j8Wsd98PO6FBDmSczuuAcsJzFO8nHidb1JUGVsoluzgth2BwuUY0VTipYR
p5cxIeRTg0CWNPE5XSYYnzfmhC8kttwdDy3B+/TNBIjfHYiFnsrdxp87+bGb
vCJhjpamxfA94nkuQWDvO1bUk0DcEhUItTWF0m1M4sy8AAg33/yp6A6x05gf
SLhttPG5QWwccQOUclXPCJ0g1mt3B72VK5zl5YgZS9aAxWxqufnSaQcsQU5d
eW/DpYi91LRQTJLepklRYh2tA6hb0mG0hZ9/+vmcQL6CuV5hXXykv4kziu3x
WFfxmbgl+jLKrNT9MvaRWKnFBb3xad5h10zMOOiO5Mb+zNLlEOtsvI5K+3RC
/6QRa9TcQE0v52qrphCHW/iingeN1Kkk4n6uL1pw8qRxUxyxg6Afsv7gL/Y4
iLhKIwBN1r6KO+kwbZsQtCXLIvX1WmLzgQj06O0C1f+tIrZZexvJTpQXxCsS
N9vfRrMMVtfZyhCnfbqNGr9PDIwJE58pvYPsVyRsU6JmYH85GYU+GpjUCPUS
b4+OQsbOsw8OdBEPVUahjWWOZ0o+Ep9SiEZ8x3VumdYRD36IRvGszx+8MolH
lGKRUHnUqVNpxOZGscirb0//3vvE486x6NSWHP5/WcSqJbFIrcVH+VEwsZxe
HEr5u/HpbX/itjNxSEKxT8vtBnFTQByavGyyf4cHcWZlHKoWW+7Wak+cvzke
aW1tmYFOEaeZxqNsm5Dg+zbT+z0fj6KfDN51NCdWTopHc1vTlA6aEW8siEdX
Gcdythwg9q2PRzZGFRUC+sST4/HorYu7Ud9OYnFRJtK7u7q1fhuxswITreFF
cZmbiWfuY6IkcX0X7w3EKlZMJK45+ffUOuJYJyYaDTolprZyOh7BRFm+jhXK
K4glEpnI5rqbq/wyYt0sJlrk5r1yiTQx+zkTVV8Iei8uSexVxUTXz94JFVo4
PX8TE6nZsmCWCHH9JyaKP5x1b3gOscYgExkeeHawfyax2QQT8RmwZ39nEBcK
sFDezpcFn8cZ2IeFWMgeGs+2jRDvEmehpZvfS78ZJHaWYqFGtc7XNf3E7TIs
5KfC8y7nEocsZ6HNCkPri3uIA5RYiCvzt+t/ncQvVrFQouSc2KwO4i1rWMhU
TET/wQfiX2tZaI6Q1HhCCzFXlYWKZslnxTYRa65jISeGinVEPXE2HV8+qi4a
VEt8nl7fMqBV7lNFfHE1C4Xwdrl4lBOnKbOQzjcjJWc28RpFFhrsONzmUETc
KcdCaW3HQ2zziXulWciiyV7b8imxnAQLLXh1qd8sm/i+CAuVc64mG2USWwqy
kFvpTVO9NGJ9PhZSeR42a9t9Yp8/TNTxNCZ/cyJxzw8misxKtFdjEcd20fct
LX3Jqljiq21MNJ6U80o+crrfKybKZj73WhJOzPeCif69VdcpFDCdn0rfl4Dm
6Fm+xL4x9H3x+aT315O4xZ+Jui//zOx3JRY/Rd8Xx1HL75eIhU3p+2LHL/LF
cfp8tjFRnsXCy29OExtKMpG92VLF2hPEsjOZaKmxYmu51fTzpOKR347NWnmH
iEdRPDJTPiYQt5t4uXk8Elx+6lnEDuIM7XhUIu1oFwTT90suHimIeNd5bCJO
/haHfg/fj7JUJD5Df16YBzyLYckTd9OfJ2yJ6rg2GeKnSnEoZPOP/8wkiNW6
Y5Gcx+ZUw7nE9YdjUcA/BmkhAsQ562MRxbTMqJ4xfR5Cseii++xjoYN/0ZRV
2DEocZx57lozsfqSGOQgXXrhzytil5/RaJN29+XLHOLximj0ylP1+rl84k6H
aDTOVxF2LJ5YKScKHZpLPdayJNaQikRyymJPC8yIh77eQZS+Rv4Go+l6mXeQ
b4gPe7UOcYfmHZQz/98GaTnifpPbSHiRzq+Jrknsdstw1LbRdsi9nZhaEo5S
DgWN/m4mDnl6C2nGNfFRHGLrlDBkt8ROrD192pdDULncbfWSc8QLXvkjw+bQ
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
JA==
        "]]},
      Annotation[#, "Charting`Private`Tag$75060#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.793358837294611*^9, 3.7933588555135117`*^9}, 
   3.793359266788804*^9, 3.793367038110344*^9, 3.824779501973028*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"318bfa2a-e2c7-4706-a819-b0ae897c2e86"]
}, Open  ]],

Cell["Stop the training immediately and visualize the results.", \
"ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, {3.7933587511833353`*^9, 3.793358821955263*^9}, {
   3.793358870131806*^9, 3.793358887354498*^9}, {3.7933589848644733`*^9, 
   3.793359033451825*^9}},ExpressionUUID->"e1835691-419d-494f-bb0e-\
e0fb4e100f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "Tanh", ",", "150", ",", "Tanh", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net3", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot"}], 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793358896701003*^9, 3.7933589467921343`*^9}, 
   3.7933590090917892`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f316c491-4cdf-46f4-9a67-812352d40fbf"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
DmJriyLqf93E3Qs=
        "]]},
      Annotation[#, "Charting`Private`Tag$75502#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.1904418170452118, 1.057354211807251}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.793358920129492*^9, 3.793358956146235*^9}, 
   3.793359012406192*^9, {3.793359271139532*^9, 3.7933592821179533`*^9}, 
   3.793367047549608*^9, {3.793367469138125*^9, 3.793367485458613*^9}, 
   3.82477951791245*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"8eb4a3fa-e463-43a4-873f-5c522ff3522e"]
}, Open  ]],

Cell[TextData[{
 "Do it programmatically using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TrainingStoppingCriterion"]], 
    "paclet:ref/TrainingStoppingCriterion"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3d3f7117-faa4-4f15-9c98-796c98c0a99e"]
}], "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, {3.7933587511833353`*^9, 3.793358821955263*^9}, {
   3.793358870131806*^9, 3.793358887354498*^9}, {3.7933589848644733`*^9, 
   3.793359033451825*^9}, {3.79335916353754*^9, 
   3.793359179443062*^9}},ExpressionUUID->"77a8b371-4e85-4f3d-9ac9-\
6c72c5dbe23f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net4", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}], ",", 
     RowBox[{"TrainingStoppingCriterion", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Criterion\>\"", "\[Rule]", "\"\<Loss\>\""}], ",", " ", 
        RowBox[{"\"\<AbsoluteChange\>\"", "\[Rule]", "0.00001"}]}], 
       "|>"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot"}], 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793359187578877*^9, 3.793359193529759*^9}, {
   3.7933592975836*^9, 3.793359299447712*^9}, 3.793359585658983*^9, {
   3.793359690328639*^9, 3.7933596920590467`*^9}, 3.793367491523828*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"c4fea7ee-1ed6-4850-abde-cbd384634bd4"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain", "novalidation", 
   "\"No validation set provided, defaulting to training set for stopping \
criterion.\"", 2, 123, 3, 25154128251670627016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellOpen->False,
 CellChangeTimes->{3.793359300134697*^9, 3.793367047722561*^9, 
  3.7933674921306477`*^9, 3.824779518049151*^9},
 CellLabel->
  "During evaluation of \
In[123]:=",ExpressionUUID->"02e2df48-c3fc-401e-b6df-537f546effad"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
DmJriyLqf93E3Qs=
        "]]},
      Annotation[#, "Charting`Private`Tag$75602#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.1904418170452118, 1.057354211807251}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.793359300497781*^9, 3.793367048296577*^9, 
  3.7933674925869713`*^9, 3.824779518859178*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"20d06859-0120-4238-8f14-fe287ffbcb83"]
}, Open  ]],

Cell[TextData[{
 "An alternate approach is to use ",
 StyleBox["DropoutLayer", "Input"],
 ". It represents a net layer that sets its input elements to zero with \
probability 0.5 during training and is a commonly used form of regularization."
}], "ItemNumbered",
 CellChangeTimes->{{3.688330838096793*^9, 3.688330846074881*^9}, {
   3.6905663420538816`*^9, 3.69056639373532*^9}, {3.690566438109663*^9, 
   3.690566441780292*^9}, {3.6905710303367653`*^9, 3.690571033808012*^9}, {
   3.6954878349741793`*^9, 3.695487835971795*^9}, {3.772391878214961*^9, 
   3.772391881077839*^9}, {3.7729768876253023`*^9, 3.772976943163039*^9}, {
   3.772977827451022*^9, 3.772977828718154*^9}, {3.772977947427915*^9, 
   3.772977966189499*^9}, {3.792405029643174*^9, 3.792405033031185*^9}, {
   3.7924059033255663`*^9, 3.79240592729873*^9}, {3.7924059761124363`*^9, 
   3.7924059773057213`*^9}, 3.792406013223281*^9, {3.792406071694319*^9, 
   3.792406071694501*^9}, {3.7924062020844717`*^9, 3.792406206520812*^9}, {
   3.792406429724194*^9, 3.792406438047538*^9}, {3.7933534102950287`*^9, 
   3.7933534165661907`*^9}, {3.793354054616589*^9, 3.793354097950597*^9}, {
   3.793354150246916*^9, 3.7933541528454933`*^9}, {3.793354215492736*^9, 
   3.793354229315667*^9}, 3.793354263544188*^9, {3.79335429594713*^9, 
   3.793354299145843*^9}, {3.793354593372376*^9, 3.7933545960272923`*^9}, {
   3.793354811294039*^9, 3.793354818574264*^9}, {3.793358558453044*^9, 
   3.7933587166795464`*^9}, {3.7933587511833353`*^9, 3.793358821955263*^9}, {
   3.793358870131806*^9, 3.793358887354498*^9}, {3.7933589848644733`*^9, 
   3.793359033451825*^9}, {3.79335916353754*^9, 3.793359179443062*^9}, {
   3.793359814571269*^9, 3.793359825888378*^9}, {3.793359896979033*^9, 
   3.79335992869643*^9}},ExpressionUUID->"ca84ed67-39af-42de-a40b-\
f2ff63240efb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "Tanh", ",", 
       RowBox[{"DropoutLayer", "[", "0.8", "]"}], ",", "150", ",", "Tanh", 
       ",", 
       RowBox[{"DropoutLayer", "[", "0.8", "]"}], ",", "1"}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net3", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"net3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", "plot"}], 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.793359770161166*^9, 3.793359795597166*^9}, {
  3.7933675054908743`*^9, 3.793367525000732*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"714895bd-cc38-463f-bf9e-c93d639fbe4b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
T7rxYeL8zbiftgIv1xJMq9jCQz3bVues2EXiDVt5yDvAi7+EQfr9NOOhjKkz
61U1iPea85CcEqP/b8cY5AdY81Cpxr3lhWfATK2zPLSzKVAUepw45RwPvffz
Y58/BBYYnOeh//pYsgt2gFnmzjykQJ1rv61D6hVe4SG7gzseWH/7C/lXfXG+
3NZtBl/BbDN/HrpUbEqb0gJmqQfwkP8iI0d+FZj+/g4PPR/WNl2YRPIDQ3mI
9kD6589TJE5PxPmbJZNqmcTmSTz8vfzPNtGK5Puk8JCW3XD1wS1g5uTnPLRL
rzO2eCGxYx4PPakp2Rvc+Qf6c2txPouScWgFC47W4/MyeEGZNIHpqg08VBaR
sXi4jMRTmvF+TkVLHI4HMzd08NBaKU/u4mMkfnEM1+sMlAm2AdMeimUipYpI
25/7SL0iyUzU55s3uWAjseHkTJQgO3R050Li7FmZSF7xjOJ50SjUl16ZiWiD
7g6NbcS9azLR90Z//poW4nbjTFQZmugoXkM8ujETXZvdXno/FSxotcxE3RoH
XbKcwPxy90zUJOFQrWIPZvNYmaik3XWu5xEwK/NmJnqSEPJq8x4wbeBOJtqr
/WZBswGpZxefiRiTv7gb65D4z6RMtPS/3vro+aT+I04mkk6b4uEwg8yjm5+J
CpdtbRodGoH1FxoyUYq8lQ6zF0wv/pCJwgdOeJV2gdnaXzKRc6b30sD3JN+s
JxMtWsO/pZZH8ptlstADxqpV66+BaU82ZSGJ8t5P1S4kHr0zC10wS/S2PEtc
ZpmFdlsqvzltC2a4nMxCco6jjiHrSX1v/yx07QdXYa4h6Z9wPwv9d8kxL1mf
uDcyC1Vf/zSxaB6pN5KehXxDqZhvUiQu+T4LDc9x3Xpp7DfUc27LQidi9Ppo
w2Cm/PcstDE12lipm8SbxbOReMmN94wq4ud62ehqz2a5kCAw/XhINvp2kZZJ
9yHr6XHZ6MDvnIPJniRfOSMbrZHUfsZ3AvOrarPRkLKs6bc9JH/L5Bx0PKpU
5GIGZs2YnYMa5l+7SzMlce3FOYir29M6YwWYrb89BzltrHNjzATTvt7NQZ+r
fOnVU0lcOS4H7TRfX2EhTeaLy8pBSw5mKJ7+/QvmefExB4mcHqQ/bAGzNZfk
oqORVh2iKDDTQ5CLgnldxm9DSf6XkVxUWHMp5MUdkl89Iw+p/H2wOcATTF+3
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
        "]]},
      Annotation[#, "Charting`Private`Tag$76071#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEcB35UlUoz/DtjnwYGbAcqZJ/x91qetj97BgRY
DlgweAt4eazabwwGzAdW18/fmOS93X7WTBBgPPArbe5WJY2T+6EGHoh7I7Lu
RvDa/WDtZ/7sf7niWvXsi/vtwcpn/twvV3fZ+LjGyv0Q+77tv2LJtmbrlHX2
EPM/72/b8b/x8LaH9hDjPuzXsXgxMzTjqf0MsP6X+z/xP62YeOWyvQFY/eP9
s3ceFNwc9Awqf3O/8e+PAWnRb+0ngPkn98/VTz8qvOaNPczHf3xPd72p/2C/
ACJvz3Vd1Dln1yso/6Y9w7VQ9wmN7+xNIObbu3woWy3E99R+DsR++0ubjn+P
Cb0Dc5/9guWGbM2596HqP9vPkzEI5p2zyz4D4j/7mT5TnA/sOwbV/9P+VxZ/
vPn7TfsvQMLHfoZWsY1+YhMs/ByuyQb5vws8uh8avg5xHAn3psYchJrP7KBV
LpB0Xm3j/nOQ+HFIPSlx8Gv96f0Q+9gcpA4oCzJ+uQo1j8PBQP5ATrHViv0A
9kTnGQ==
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.06492456048727036, 0.8252279758453369}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.793359785506113*^9, 3.793359808216881*^9}, 
   3.793367058534597*^9, {3.793367519493265*^9, 3.793367534337566*^9}, 
   3.824779534560177*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"3e21dedb-4439-4441-b295-57689dcf6c85"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e0c3b5b4-d621-4748-8f6d-e4117ff989f4"]
},
WindowSize->{1141.2, 412.79999999999995`},
WindowMargins->{{105, Automatic}, {27.600000000000023`, Automatic}},
WindowTitle->"Neural Networks in WL",
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WSSBanner"], CellFrameMargins -> {{0, 8}, {10, 20}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 42, FontWeight -> "Regular", 
          FontSlant -> "Plain", FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["WSSBanner", "SlideShow"], LineSpacing -> {1, 2}, 
          FontSize -> 42], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Working", StyleDefinitions -> 
           StyleData["WSSBanner", "SlideShow"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.2, 0.02 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{200, 0}, {0, 140}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{200, 0}, {0, 50}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TitleGraphic"], CellMargins -> {{200, 0}, {0, 80}}, 
             CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, DefaultFormatType -> 
             DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
             FormatType -> StandardForm, ShowStringCharacters -> False, 
             FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
             GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], 
             Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
             StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
             1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData["TitleGraphic", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
             "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> 
             True, CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             "NaturalLanguage", FormatType -> StandardForm, 
             ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
             FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
             Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> 
             False, StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 
             10, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
             FontOpacity -> 1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
              StyleData["TitelGraphic", "SlideShow"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
             ShowGroupOpener -> "Inline", CellMargins -> {{200, 0}, {0, 100}},
              FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}},
              ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}},
              LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", 
             FontSize -> 70, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{200, 0}, {0, 80}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{200, 0}, {0, 80}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 30, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             30, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Open]]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{200, 0}, {0, 30}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{200, 0}, {0, 30}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{200, 0}, {0, 30}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{200, 0}, {0, 30}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{220, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{200, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{215, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{200, 10}, {5, 30}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 10}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{200, 10}, {7, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{200, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{200, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"06c15ca4-036d-4bea-b4a7-6cffbce868e0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[615, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
   CellTags->"SlideShowHeader"],
  Cell[17485, 316, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"acbee411-c6df-4ed8-8927-02c53c67df2b",
   CellTags->"SlideShowHeader"],
  Cell[18529, 344, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d0b799b1-f1c4-42cd-a653-7c0d6a315472",
   CellTags->"SlideShowHeader"],
  Cell[18777, 353, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8f3e4b9a-8cc0-4eb3-8377-44256f0a8670",
   CellTags->"SlideShowHeader"],
  Cell[20724, 407, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e1198a58-413d-4588-be21-22fde4db4cf3",
   CellTags->"SlideShowHeader"],
  Cell[22827, 470, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0f7bb2fb-f2c0-4ea5-aebb-145ef1a92ecf",
   CellTags->"SlideShowHeader"],
  Cell[24775, 526, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1c459f35-782c-4116-b3f0-f3c25e012695",
   CellTags->"SlideShowHeader"],
  Cell[26331, 566, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"43e9098a-812b-4e75-8875-d40ec2c4a4c1",
   CellTags->"SlideShowHeader"],
  Cell[26593, 575, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"dff7e46d-8b84-4d33-87de-18c576ac5dbb",
   CellTags->"SlideShowHeader"],
  Cell[41426, 932, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2833d099-724b-468b-8133-2b65bfe93a4e",
   CellTags->"SlideShowHeader"],
  Cell[58145, 1325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"62ff2068-dad5-448b-a851-fc71593ce729",
   CellTags->"SlideShowHeader"],
  Cell[74294, 1731, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"182269cb-18d5-4b54-9a3d-3c802811ca99",
   CellTags->"SlideShowHeader"],
  Cell[87536, 2065, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0da7fb31-0982-463d-bf3f-63a3b6b7db22",
   CellTags->"SlideShowHeader"],
  Cell[101586, 2459, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5d54f699-7eff-40aa-baf6-660d716e1bc9",
   CellTags->"SlideShowHeader"],
  Cell[389568, 7386, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fd7bf7c0-df33-48a8-8c12-dba7a39c4e2a",
   CellTags->"SlideShowHeader"],
  Cell[389819, 7395, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a2cc711f-d784-4f41-90a8-92ae9f231c09",
   CellTags->"SlideShowHeader"],
  Cell[508803, 9676, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"accfff00-9944-43e4-ae1e-0f6fda8de627",
   CellTags->"SlideShowHeader"],
  Cell[540464, 10460, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3b89d28b-e207-430b-b311-dffc86c8eba4",
   CellTags->"SlideShowHeader"],
  Cell[545365, 10633, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2ffaa2eb-ce0d-43c7-85ed-543b104e87e4",
   CellTags->"SlideShowHeader"],
  Cell[547929, 10723, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1b3c3cd6-32d2-4504-9b9b-bd805ac7b3db",
   CellTags->"SlideShowHeader"],
  Cell[566214, 11169, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d8155c68-39e6-4f47-b96e-d0ddd90ea299",
   CellTags->"SlideShowHeader"],
  Cell[683162, 13551, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d49ccd24-6ed1-4c8c-8688-2a545b42afba",
   CellTags->"SlideShowHeader"],
  Cell[760467, 15280, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"825c3de1-1203-447d-a691-4e51086b87e5",
   CellTags->"SlideShowHeader"],
  Cell[853121, 17164, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d5451202-2ff9-4d79-aa30-3d2fa74877f2",
   CellTags->"SlideShowHeader"],
  Cell[982335, 19658, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d07896c2-14e3-4c20-b4dc-a42e3c1a310e",
   CellTags->"SlideShowHeader"],
  Cell[982586, 19667, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"108ac2fd-8035-424a-96d5-4dae9f3f544a",
   CellTags->"SlideShowHeader"],
  Cell[1262505, 25265, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4d90153b-c0c1-456b-b76e-cfd9d7b814c7",
   CellTags->"SlideShowHeader"],
  Cell[1578613, 31171, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b2220ff7-56f5-4c13-ab53-cc0034589e5c",
   CellTags->"SlideShowHeader"],
  Cell[1694613, 33589, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c1095d58-de2e-4052-8756-dd15ed2438b6",
   CellTags->"SlideShowHeader"],
  Cell[2009331, 39886, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2f5dd794-ae62-48b3-bbc3-c7c005ac7e3e",
   CellTags->"SlideShowHeader"],
  Cell[2010357, 39921, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cde8ac14-228d-4d69-8d62-566ec0a37406",
   CellTags->"SlideShowHeader"],
  Cell[2269140, 45065, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e0c3b5b4-d621-4748-8f6d-e4117ff989f4",
   CellTags->"SlideShowHeader"]},
 "Mean"->{
  Cell[2014789, 40017, 1110, 31, 116, "Input",ExpressionUUID->"6d2566c6-633b-49ff-a4bc-cafb1410cab7",
   CellTags->{"Mean", "Flatten"}],
  Cell[2015902, 40050, 268, 4, 34, "Output",ExpressionUUID->"edb3224c-3805-46a5-abf8-79e4f91ff2b2",
   CellTags->{"Mean", "Flatten"}],
  Cell[2016173, 40056, 268, 4, 34, "Output",ExpressionUUID->"d442ff8a-d881-4f91-921f-1773e780fc2f",
   CellTags->{"Mean", "Flatten"}]},
 "Flatten"->{
  Cell[2014789, 40017, 1110, 31, 116, "Input",ExpressionUUID->"6d2566c6-633b-49ff-a4bc-cafb1410cab7",
   CellTags->{"Mean", "Flatten"}],
  Cell[2015902, 40050, 268, 4, 34, "Output",ExpressionUUID->"edb3224c-3805-46a5-abf8-79e4f91ff2b2",
   CellTags->{"Mean", "Flatten"}],
  Cell[2016173, 40056, 268, 4, 34, "Output",ExpressionUUID->"d442ff8a-d881-4f91-921f-1773e780fc2f",
   CellTags->{"Mean", "Flatten"}]},
 "CrossEntropyLossLayer"->{
  Cell[2017326, 40085, 1032, 27, 116, "Input",ExpressionUUID->"d2b0d301-3135-4cf6-9284-2924bd885684",
   CellTags->"CrossEntropyLossLayer"],
  Cell[2018361, 40114, 273, 4, 34, "Output",ExpressionUUID->"d537bb1c-bd6e-421e-b925-f9c876cb8a0e",
   CellTags->"CrossEntropyLossLayer"],
  Cell[2018637, 40120, 272, 4, 34, "Output",ExpressionUUID->"548661f3-a5c6-4854-9c43-3f05c6bddc04",
   CellTags->"CrossEntropyLossLayer"]},
 "NormalDistribution"->{
  Cell[2156180, 42921, 914, 26, 19, "Input",ExpressionUUID->"34fcb662-dc16-45fc-b871-53d1fe696119",
   CellOpen->False,
   CellTags->"NormalDistribution",
   CellID->1098178851],
  Cell[2157097, 42949, 1950, 50, 19, "Output",ExpressionUUID->"5277c016-2575-4ec8-8860-bebf3caacff0",
   CellOpen->False,
   CellTags->"NormalDistribution"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 2303393, 45805},
 {"Mean", 2308104, 45870},
 {"Flatten", 2308526, 45877},
 {"CrossEntropyLossLayer", 2308962, 45884},
 {"NormalDistribution", 2309407, 45891}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[615, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
 CellTags->"SlideShowHeader"],
Cell[754, 27, 16465, 277, 163, "WSSBanner",ExpressionUUID->"3bb2d191-b234-4a2e-a519-8cc81e1dbc97"],
Cell[CellGroupData[{
Cell[17244, 308, 93, 0, 243, "Title",ExpressionUUID->"90a5bf89-1d1c-4e3e-a294-98910a6f1695"],
Cell[17340, 310, 96, 0, 101, "Subtitle",ExpressionUUID->"68a43722-ad61-4450-984a-df422291b743"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17485, 316, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"acbee411-c6df-4ed8-8927-02c53c67df2b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[17632, 322, 214, 4, 189, "Section",ExpressionUUID->"03ada23f-8298-4c02-8abc-775ed1e8b4bd"],
Cell[17849, 328, 113, 0, 50, "Item",ExpressionUUID->"ed82ca1f-d182-4611-b0c0-b26d0c2fac0e"],
Cell[17965, 330, 90, 0, 50, "Item",ExpressionUUID->"ccd6e00e-b75a-4dcd-9a64-146ad9cdca51"],
Cell[18058, 332, 122, 0, 50, "Item",ExpressionUUID->"0407bf62-a71e-4c62-8927-20a320cd7235"],
Cell[18183, 334, 97, 0, 50, "Item",ExpressionUUID->"e6449eb6-c433-480a-a28b-da7599ce42e3"],
Cell[18283, 336, 89, 0, 50, "Item",ExpressionUUID->"9fd7f33d-9bde-4877-a82a-08c4e3dd032b"],
Cell[18375, 338, 105, 0, 50, "Item",ExpressionUUID->"919eb348-20c6-4e70-8c91-5be8ad63d590"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18529, 344, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d0b799b1-f1c4-42cd-a653-7c0d6a315472",
 CellTags->"SlideShowHeader"],
Cell[18654, 348, 86, 0, 69, "Chapter",ExpressionUUID->"b2a5d562-5443-4195-b307-46dfdb113255"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18777, 353, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8f3e4b9a-8cc0-4eb3-8377-44256f0a8670",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[18924, 359, 106, 0, 280, "Section",ExpressionUUID->"c4a9049a-d33d-4344-86eb-9b2354ba8141"],
Cell[CellGroupData[{
Cell[19055, 363, 94, 0, 131, "Subsection",ExpressionUUID->"1a2e5310-eb28-4abe-b777-858d8578f786"],
Cell[19152, 365, 124, 0, 50, "Item",ExpressionUUID->"7228a061-d10f-479e-95c8-42a317f83002"],
Cell[19279, 367, 124, 0, 50, "Item",ExpressionUUID->"e21cf8e7-4179-4410-9014-2839654fd4e1"],
Cell[CellGroupData[{
Cell[19428, 371, 111, 0, 50, "Item",ExpressionUUID->"a53d4e49-c7af-4afa-8c29-463d4bef2882"],
Cell[19542, 373, 178, 4, 33, "Subitem",ExpressionUUID->"494b64da-d2eb-4108-ac1b-cc26f1522362"]
}, Open  ]],
Cell[19735, 380, 100, 0, 50, "Item",ExpressionUUID->"f7ae4139-55a0-4e3b-9b21-13aead792094"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19872, 385, 110, 0, 131, "Subsection",ExpressionUUID->"18c009ed-4529-4aea-8998-78221fff806a"],
Cell[CellGroupData[{
Cell[20007, 389, 101, 0, 50, "Item",ExpressionUUID->"f041fcc3-94e5-4076-949a-7d1246240f24"],
Cell[20111, 391, 92, 0, 33, "Subitem",ExpressionUUID->"b33c8af3-9757-45e6-903f-c11cf2083a6b"],
Cell[20206, 393, 116, 0, 33, "Subitem",ExpressionUUID->"70950ec3-017d-4ad5-86e0-a3ae1090d211"],
Cell[20325, 395, 97, 0, 33, "Subitem",ExpressionUUID->"00d73a68-0273-4f73-94ef-c04031f31273"],
Cell[20425, 397, 95, 0, 33, "Subitem",ExpressionUUID->"ed09a595-bdeb-4ddd-a61e-96247aaca5d6"]
}, Open  ]],
Cell[20535, 400, 128, 0, 50, "Item",ExpressionUUID->"d389ae9c-d1ea-4ec4-96cd-4a4ec4b6360b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20724, 407, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e1198a58-413d-4588-be21-22fde4db4cf3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[20871, 413, 106, 0, 280, "Section",ExpressionUUID->"e9718128-6d58-470e-acbd-3fa92beb2504"],
Cell[CellGroupData[{
Cell[21002, 417, 106, 0, 131, "Subsection",ExpressionUUID->"feeb7617-4c07-4845-aea2-9bc57db72d26"],
Cell[CellGroupData[{
Cell[21133, 421, 82, 0, 50, "Item",ExpressionUUID->"88979ec5-c588-4748-b44d-2d92ac51abb3"],
Cell[21218, 423, 153, 2, 33, "Subitem",ExpressionUUID->"8f791383-24e6-415a-b303-17a2c8738c97"],
Cell[21374, 427, 99, 0, 33, "Subitem",ExpressionUUID->"14e5fba2-39e2-4dc6-bf6d-1770e61a109e"],
Cell[21476, 429, 155, 2, 33, "Subitem",ExpressionUUID->"fe1dc0ff-dc7a-401e-bdf2-ecaa3158df83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21668, 436, 85, 0, 50, "Item",ExpressionUUID->"aa63ba71-b09b-41bd-8b28-ba5166ad592e"],
Cell[21756, 438, 178, 3, 33, "Subitem",ExpressionUUID->"7b653659-0cd9-4d02-a8fe-4850841a72e8"],
Cell[21937, 443, 129, 0, 33, "Subitem",ExpressionUUID->"2402db4d-5148-40b3-8498-5fe7f8f8c0bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22103, 448, 82, 0, 50, "Item",ExpressionUUID->"54a3ea34-91ff-4b59-a585-89539a465803"],
Cell[22188, 450, 134, 0, 33, "Subitem",ExpressionUUID->"7d739cea-7cc5-438f-95e7-da7f7c09c5ac"],
Cell[22325, 452, 132, 0, 33, "Subitem",ExpressionUUID->"f8e276fa-3db7-4e2a-b43e-0053c34bb148"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22494, 457, 89, 0, 50, "Item",ExpressionUUID->"8f0e007d-542c-42b8-94f6-a70b353385f4"],
Cell[22586, 459, 168, 3, 33, "Subitem",ExpressionUUID->"bd908720-b8e2-4ec4-847b-7ae485851065"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22827, 470, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0f7bb2fb-f2c0-4ea5-aebb-145ef1a92ecf",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[22974, 476, 106, 0, 280, "Section",ExpressionUUID->"a44408b2-9a1c-4c02-9175-76f6bef6583a"],
Cell[CellGroupData[{
Cell[23105, 480, 89, 0, 131, "Subsection",ExpressionUUID->"0fea256d-c3f9-42da-b6ae-203299691acf"],
Cell[23197, 482, 120, 0, 50, "Text",ExpressionUUID->"c7ce2a52-4470-445d-bf7e-edece4bad4ba"],
Cell[CellGroupData[{
Cell[23342, 486, 92, 0, 50, "Item",ExpressionUUID->"99fec734-092a-4a4a-be2e-005929507761"],
Cell[23437, 488, 273, 5, 33, "Subitem",ExpressionUUID->"ab15388d-97dc-4908-b93e-166e19ba02d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23747, 498, 117, 0, 50, "Item",ExpressionUUID->"8711736f-3b69-4b3d-b860-cd2413f07450"],
Cell[23867, 500, 91, 0, 33, "Subitem",ExpressionUUID->"d0a97116-184a-42fc-a3b2-2efe2ce68ff6"],
Cell[23961, 502, 91, 0, 33, "Subitem",ExpressionUUID->"3d97bf39-8545-4978-a830-1dc8a655c321"]
}, Open  ]],
Cell[24067, 505, 84, 0, 50, "Item",ExpressionUUID->"957bfb5c-ce46-4f64-92de-06e546243f2a"],
Cell[24154, 507, 305, 6, 50, "Item",ExpressionUUID->"9eeb9d26-263c-4f44-a76a-2db025616e28"],
Cell[24462, 515, 85, 0, 50, "Item",ExpressionUUID->"7eec2272-d322-4437-b2e3-4ceeb4362cef"],
Cell[24550, 517, 87, 0, 50, "Item",ExpressionUUID->"68dc9270-345f-48e0-b703-de5e526a0780"],
Cell[24640, 519, 74, 0, 50, "Item",ExpressionUUID->"5c81ea2d-23d2-4028-a989-ba9a22537ba0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24775, 526, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1c459f35-782c-4116-b3f0-f3c25e012695",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[24922, 532, 95, 0, 189, "Section",ExpressionUUID->"15df5c85-2bcd-44bf-a0ab-4d56d6338ddf"],
Cell[25020, 534, 303, 4, 73, "Text",ExpressionUUID->"2495e29a-93c7-4c81-bfa7-7bd553735dd1"],
Cell[25326, 540, 156, 2, 50, "Text",ExpressionUUID->"951ca2e3-78ed-4b27-9726-5055ecde0cab"],
Cell[25485, 544, 120, 0, 50, "Item",ExpressionUUID->"a3144b9f-0651-4aba-b967-4fd3fc0f1ba6"],
Cell[25608, 546, 111, 0, 50, "Item",ExpressionUUID->"801c641e-cac3-40ed-9dea-2ddd2ac547f7"],
Cell[25722, 548, 162, 4, 50, "Item",ExpressionUUID->"202aa652-72c3-45eb-82fa-1117214d5bfd"],
Cell[25887, 554, 293, 4, 50, "Text",ExpressionUUID->"2e6d4e69-435e-41bc-9abf-3569b398e7af"],
Cell[26183, 560, 99, 0, 50, "Text",ExpressionUUID->"43cc1a58-e6f1-4c5d-a54c-07f3e2446999"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26331, 566, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"43e9098a-812b-4e75-8875-d40ec2c4a4c1",
 CellTags->"SlideShowHeader"],
Cell[26456, 570, 100, 0, 69, "Chapter",ExpressionUUID->"c8568110-5720-4c8f-95c4-7742c5d7cc23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26593, 575, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"dff7e46d-8b84-4d33-87de-18c576ac5dbb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[26740, 581, 98, 0, 189, "Section",ExpressionUUID->"67bdb204-637c-4267-8f77-ca0d0cc837cd"],
Cell[26841, 583, 161, 3, 50, "Text",ExpressionUUID->"7c91a302-8895-4b17-928b-2a507144bbec"],
Cell[27005, 588, 185, 5, 50, "Input",ExpressionUUID->"e368cbf3-31d1-442a-bff2-e4093c816afc"],
Cell[CellGroupData[{
Cell[27215, 597, 137, 3, 50, "Input",ExpressionUUID->"da42c95f-fe8e-44bf-b7fa-15e5c5332400"],
Cell[27355, 602, 111, 2, 32, "Output",ExpressionUUID->"fa77d51f-dfee-4a23-af45-2fe75d34dbe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27503, 609, 272, 8, 50, "Input",ExpressionUUID->"f87f8c3b-8e82-4200-a767-ccf1ff810ba9"],
Cell[27778, 619, 7471, 142, 241, "Output",ExpressionUUID->"1888b621-7477-493c-aca7-9e5a74583dbb"]
}, Open  ]],
Cell[35264, 764, 266, 4, 50, "Text",ExpressionUUID->"016413ce-d212-4c3f-a1f9-1368bdf97aa2"],
Cell[CellGroupData[{
Cell[35555, 772, 155, 4, 50, "Input",ExpressionUUID->"3862251f-d219-4d71-98c4-bdb8d980a345"],
Cell[35713, 778, 133, 3, 32, "Output",ExpressionUUID->"a73600ed-8c6f-494f-bd65-320d9c003f79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35883, 786, 155, 4, 50, "Input",ExpressionUUID->"2873caaf-524a-4aab-87b0-003bbe2e3610"],
Cell[36041, 792, 111, 2, 32, "Output",ExpressionUUID->"91becc52-5de4-42eb-be81-30b36d1d3978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36189, 799, 2742, 74, 199, "Input",ExpressionUUID->"2c0daeaf-0e9c-43c5-9ec8-bdfc32356e99"],
Cell[38934, 875, 2434, 50, 313, "Output",ExpressionUUID->"763b1580-c87e-4e0c-bcd3-e8adaee0df91"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41426, 932, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2833d099-724b-468b-8133-2b65bfe93a4e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[41573, 938, 98, 0, 189, "Section",ExpressionUUID->"dfa776d2-808b-4166-82fb-003ef2434cc5"],
Cell[41674, 940, 227, 5, 50, "Text",ExpressionUUID->"68267115-acdd-4921-86dd-57cf5363103b"],
Cell[41904, 947, 456, 15, 50, "Input",ExpressionUUID->"5b22d2ab-0e66-48dd-bae0-776250ae234c"],
Cell[CellGroupData[{
Cell[42385, 966, 155, 4, 50, "Input",ExpressionUUID->"1b008205-f8c2-463d-aaed-347051d673d1"],
Cell[42543, 972, 1445, 45, 82, "Output",ExpressionUUID->"b34701f0-a72c-4177-a6db-54a24508c8c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44025, 1022, 530, 16, 50, "Input",ExpressionUUID->"cda066d9-ed1f-4729-a4f4-ca050232fae5"],
Cell[44558, 1040, 13526, 278, 241, "Output",ExpressionUUID->"e7b2a06e-9f98-416a-bfa9-dc1c5193e4c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58145, 1325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"62ff2068-dad5-448b-a851-fc71593ce729",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[58292, 1331, 98, 0, 189, "Section",ExpressionUUID->"faedd495-fafd-436d-9571-11330e6fcec5"],
Cell[58393, 1333, 279, 4, 96, "Text",ExpressionUUID->"3fdbb2cd-7560-47db-985f-0c053935243e"],
Cell[58675, 1339, 265, 7, 50, "Input",ExpressionUUID->"14881753-eaae-4cbc-9548-a11d343bd542"],
Cell[CellGroupData[{
Cell[58965, 1350, 3512, 93, 262, "Input",ExpressionUUID->"5f7dc513-5e3f-4195-8376-1e1916999db8"],
Cell[62480, 1445, 2833, 60, 299, "Output",ExpressionUUID->"86176a6f-37fd-4c4d-b6a2-47f1d6287577"]
}, {2}]],
Cell[65325, 1508, 183, 3, 50, "Text",ExpressionUUID->"e047c723-f20a-456b-b4a1-ccfcaeb27186"],
Cell[CellGroupData[{
Cell[65533, 1515, 5086, 131, 367, "Input",ExpressionUUID->"8ed37e9c-84db-406c-bfda-ace585692a53"],
Cell[70622, 1648, 3614, 76, 299, "Output",ExpressionUUID->"212c8569-1fea-4f39-80d9-892fee4e0198"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74294, 1731, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"182269cb-18d5-4b54-9a3d-3c802811ca99",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[74441, 1737, 102, 0, 189, "Section",ExpressionUUID->"b01579d1-f074-4c66-a9a9-634a162516a3"],
Cell[74546, 1739, 381, 5, 96, "Text",ExpressionUUID->"4fe70d9a-f96f-4947-a051-cd224132eded"],
Cell[CellGroupData[{
Cell[74952, 1748, 167, 3, 50, "Item",ExpressionUUID->"b640d757-ee0b-425a-a921-ba1d96af23db"],
Cell[75122, 1753, 335, 9, 50, "Input",ExpressionUUID->"cc8d6b06-0694-4720-8129-f182eac0ce48"],
Cell[75460, 1764, 456, 13, 50, "Input",ExpressionUUID->"81b4478a-7c25-4446-8754-9717d83df2e5"],
Cell[CellGroupData[{
Cell[75941, 1781, 7248, 185, 305, "Input",ExpressionUUID->"2f43b847-1007-4201-aca9-b0e8fb2f7815"],
Cell[83192, 1968, 4274, 89, 299, "Output",ExpressionUUID->"14969cf7-cb3c-4b25-94c6-72190f002398"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87536, 2065, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0da7fb31-0982-463d-bf3f-63a3b6b7db22",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[87683, 2071, 96, 0, 189, "Section",ExpressionUUID->"a1de6819-2b4e-4ccf-9373-7c50eeaa4c14"],
Cell[87782, 2073, 262, 4, 73, "Text",ExpressionUUID->"e779a7e9-f2fd-4f67-b249-c6e64d7f01ee"],
Cell[CellGroupData[{
Cell[88069, 2081, 1597, 37, 57, "Input",ExpressionUUID->"67d845ef-2fa4-454d-8321-a3ab54b41aa6"],
Cell[89669, 2120, 2524, 68, 90, "Output",ExpressionUUID->"4b6136c6-63a3-4f8e-a5d9-abfeeb52aad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92230, 2193, 147, 3, 50, "Input",ExpressionUUID->"a68edc65-4c7f-48ef-a96a-30b7b8910f56"],
Cell[92380, 2198, 1761, 45, 240, "Output",ExpressionUUID->"00ad22c5-eca1-4e33-b22c-75382e430377"]
}, Open  ]],
Cell[94156, 2246, 214, 3, 50, "Text",ExpressionUUID->"f3a902bd-c6cc-4f1a-875a-dafe00a6f5c9"],
Cell[94373, 2251, 291, 8, 50, "Input",ExpressionUUID->"bc567ac2-6266-4f2d-94b3-5164e7f3b2f9"],
Cell[CellGroupData[{
Cell[94689, 2263, 402, 12, 70, "Input",ExpressionUUID->"3dddf05e-9cc0-47c7-9089-0eaa22e68e9f"],
Cell[95094, 2277, 912, 19, 52, "Output",ExpressionUUID->"b5dfe86e-67ab-4648-bb2f-d238015bd165"],
Cell[96009, 2298, 978, 21, 52, "Output",ExpressionUUID->"6606678f-8eb6-4800-842e-b707e93a4b46"]
}, Open  ]],
Cell[97002, 2322, 424, 8, 96, "Text",ExpressionUUID->"40343737-f3f2-4b44-adef-7359e9340c51"],
Cell[97429, 2332, 665, 20, 50, "Input",ExpressionUUID->"c9576668-68d4-4864-9772-6cb71921bf45"],
Cell[98097, 2354, 137, 1, 50, "Text",ExpressionUUID->"a567309e-ea43-44a1-a703-ff4604add5aa"],
Cell[CellGroupData[{
Cell[98259, 2359, 423, 13, 50, "Input",ExpressionUUID->"b9b087e7-6746-48d9-b169-025249ede5c8"],
Cell[98685, 2374, 715, 20, 32, "Output",ExpressionUUID->"80c48abb-4194-494b-8c36-fc0f748dba67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99437, 2399, 144, 3, 50, "Input",ExpressionUUID->"6735a235-616f-409b-8e04-88359dbd14bd"],
Cell[99584, 2404, 1941, 48, 249, "Output",ExpressionUUID->"d7618618-bc3e-4cd6-946c-96e8199b9798"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101586, 2459, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5d54f699-7eff-40aa-baf6-660d716e1bc9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[101733, 2465, 93, 0, 189, "Section",ExpressionUUID->"5fa9bfe5-cd34-412c-a124-839f2914945e"],
Cell[101829, 2467, 274, 4, 73, "Text",ExpressionUUID->"b9ff3d5b-16bb-4fb9-915b-389d075b8a41"],
Cell[CellGroupData[{
Cell[102128, 2475, 378, 11, 50, "Input",ExpressionUUID->"dc9290cf-2c27-454d-abe0-9c3b366bdfb9"],
Cell[102509, 2488, 498, 11, 32, "Output",ExpressionUUID->"318ed1e3-e415-4dc4-a2b6-158f19055b1f"]
}, Open  ]],
Cell[103022, 2502, 140, 1, 50, "Text",ExpressionUUID->"15d6b120-5661-423f-8408-af8c01753815"],
Cell[CellGroupData[{
Cell[103187, 2507, 505, 15, 50, "Input",ExpressionUUID->"430738af-17cc-4e8d-aa58-03f11ce5a116"],
Cell[103695, 2524, 314, 8, 32, "Output",ExpressionUUID->"d6cb917f-9cc5-4533-aefb-210f117cdd28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104046, 2537, 1928, 53, 157, "Input",ExpressionUUID->"52620174-dd7b-4220-8562-4953496cbffc"],
Cell[105977, 2592, 110722, 1822, 377, "Output",ExpressionUUID->"f6196161-506c-4e3b-a64f-7c1cc814f0d1"]
}, {2}]],
Cell[216711, 4417, 303, 7, 73, "Text",ExpressionUUID->"7d9d359d-cbcb-47d6-9eae-f2f653b2940e"],
Cell[217017, 4426, 599, 17, 70, "Input",ExpressionUUID->"90448577-1cc7-47d8-a656-daf90391600e"],
Cell[CellGroupData[{
Cell[217641, 4447, 160, 4, 50, "Input",ExpressionUUID->"06f2b32f-bb88-4493-895c-f05fc29fc90b"],
Cell[217804, 4453, 231, 6, 32, "Output",ExpressionUUID->"5f476ff1-da7c-4674-af39-a0da1801e9d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218072, 4464, 3213, 87, 184, "Input",ExpressionUUID->"7f0c1461-93d5-4679-b5fa-2ed801499c29"],
Cell[221288, 4553, 110755, 1821, 377, "Output",ExpressionUUID->"e53203df-d5ab-44fd-bd35-17b11a2d9308"]
}, Open  ]],
Cell[332058, 6377, 184, 3, 50, "Text",ExpressionUUID->"eae09b27-70e3-42da-8a32-1063aa084b79"],
Cell[CellGroupData[{
Cell[332267, 6384, 605, 18, 50, "Input",ExpressionUUID->"347d2fae-514b-4e76-a3d7-2c84f12e03a5"],
Cell[332875, 6404, 56154, 962, 205, "Output",ExpressionUUID->"9ea52deb-83c1-4b6f-a964-735827cbc90b"]
}, Open  ]],
Cell[389044, 7369, 475, 11, 96, "Text",ExpressionUUID->"03f256d7-85b6-412e-b311-2354aeecb0f2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389568, 7386, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fd7bf7c0-df33-48a8-8c12-dba7a39c4e2a",
 CellTags->"SlideShowHeader"],
Cell[389693, 7390, 89, 0, 69, "Chapter",ExpressionUUID->"89982d9e-38e8-425f-bbbb-07db7d077c7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389819, 7395, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a2cc711f-d784-4f41-90a8-92ae9f231c09",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[389966, 7401, 96, 0, 189, "Section",ExpressionUUID->"dfc5dbf1-a782-4f1c-8828-a1861da45ee8"],
Cell[390065, 7403, 284, 4, 73, "Text",ExpressionUUID->"6a7c4885-0735-42f7-b9d8-b258decf53f6"],
Cell[CellGroupData[{
Cell[390374, 7411, 175, 3, 50, "Item",ExpressionUUID->"fb99a21e-d141-4f8f-95aa-266405694f2c"],
Cell[CellGroupData[{
Cell[390574, 7418, 272, 6, 50, "Input",ExpressionUUID->"2d3d76f0-6443-4db3-923b-c7a80cce9790"],
Cell[390849, 7426, 52921, 970, 53, "Output",ExpressionUUID->"92231c68-db4b-47ce-a15c-ac28e701bf6c"]
}, Open  ]]
}, Open  ]],
Cell[443797, 8400, 296, 4, 73, "Text",ExpressionUUID->"587d20c5-8994-4b01-b281-35664b301212"],
Cell[CellGroupData[{
Cell[444118, 8408, 169, 3, 50, "Item",ExpressionUUID->"e20a6cb1-e019-4606-9f50-f5276708e460"],
Cell[CellGroupData[{
Cell[444312, 8415, 246, 5, 50, "Input",ExpressionUUID->"c7cf4196-7bf3-46af-bbee-c21ed2174206"],
Cell[444561, 8422, 52143, 955, 166, "Output",ExpressionUUID->"1f827845-3756-454d-ad03-19bda8aa8fd0"]
}, Open  ]]
}, Open  ]],
Cell[496731, 9381, 243, 6, 50, "Item",ExpressionUUID->"b3732d55-ffc0-45fb-b64e-f826e90e2a7b"],
Cell[CellGroupData[{
Cell[496999, 9391, 168, 3, 50, "Item",ExpressionUUID->"d057aea6-be44-497d-bb35-c7fbddda11f1"],
Cell[CellGroupData[{
Cell[497192, 9398, 298, 7, 50, "Input",ExpressionUUID->"fb15d08f-3cb2-45c2-adcf-9699cef0ae9d"],
Cell[497493, 9407, 9280, 197, 80, "Output",ExpressionUUID->"0e52870d-c91d-4088-a1ba-baf487860db4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506822, 9610, 178, 4, 50, "Item",ExpressionUUID->"3adcc359-a66d-4a0d-8037-21a19bdc6b2a"],
Cell[CellGroupData[{
Cell[507025, 9618, 221, 5, 50, "Input",ExpressionUUID->"16ab2ad8-1d88-4fa4-8c38-38c544c52b07"],
Cell[507249, 9625, 287, 7, 32, "Output",ExpressionUUID->"d0c58f43-4907-4eeb-8341-267c6527b203"]
}, Open  ]]
}, Open  ]],
Cell[507563, 9636, 162, 3, 50, "Text",ExpressionUUID->"96afc5ff-5dc9-45a8-b030-417125b04c58"],
Cell[CellGroupData[{
Cell[507750, 9643, 206, 4, 50, "Input",ExpressionUUID->"e6594195-f0c7-4926-a215-33b1c8da1c39"],
Cell[507959, 9649, 216, 3, 32, "Output",ExpressionUUID->"214ce95f-8ae4-4a7b-bb9f-0a3714d13eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508212, 9657, 239, 5, 50, "Input",ExpressionUUID->"84629a13-fbb4-4ec6-b178-49ba88008786"],
Cell[508454, 9664, 214, 3, 55, "Output",ExpressionUUID->"8dec11d4-3eac-4933-978b-89f6f30c18d7"]
}, Open  ]],
Cell[508683, 9670, 71, 0, 50, "Text",ExpressionUUID->"254457fa-d3a7-4bf5-b68e-61b9e170f80b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[508803, 9676, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"accfff00-9944-43e4-ae1e-0f6fda8de627",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[508950, 9682, 96, 0, 189, "Section",ExpressionUUID->"fbef179d-ff1f-4fa9-ba4d-8d466c0d6ae1"],
Cell[509049, 9684, 243, 4, 73, "Text",ExpressionUUID->"9e3ffe94-ff35-4847-bbcb-3a230fcb320d"],
Cell[CellGroupData[{
Cell[509317, 9692, 1902, 38, 57, "Input",ExpressionUUID->"ee334ef6-9193-4585-bb3f-7b93d90518ee"],
Cell[511222, 9732, 2159, 48, 90, "Output",ExpressionUUID->"f8438dd1-0396-4f6d-8474-7fd8cb0c95c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513418, 9785, 709, 22, 52, "Input",ExpressionUUID->"cf7d1365-0230-435d-8cf3-09a51abaf0d1"],
Cell[514130, 9809, 8558, 195, 241, "Output",ExpressionUUID->"df142364-fad6-4ffe-aa65-edeaf9dc2a41"]
}, {2}]],
Cell[522700, 10007, 228, 3, 73, "Text",ExpressionUUID->"dbdc6d64-4943-4a30-a32d-4fcf920d839f"],
Cell[CellGroupData[{
Cell[522953, 10014, 743, 20, 52, "Input",ExpressionUUID->"3c9a990b-2332-4ea9-a845-f9392b68726d"],
Cell[523699, 10036, 2496, 56, 238, "Output",ExpressionUUID->"abf649cc-1de6-41af-9323-e646b04f2da8"]
}, {2}]],
Cell[526207, 10095, 326, 9, 73, "Text",ExpressionUUID->"c2d959a6-c6ee-4e74-b018-1a4a6766d3e8"],
Cell[526536, 10106, 265, 6, 50, "Item",ExpressionUUID->"be8034bf-33a0-44e0-afae-969e35500166"],
Cell[526804, 10114, 300, 5, 71, "Item",ExpressionUUID->"6b11df0e-df57-4875-8c61-bd07db35ff5f"],
Cell[CellGroupData[{
Cell[527129, 10123, 181, 3, 50, "Item",ExpressionUUID->"6149c770-583c-4de6-9e47-a181a2c86341"],
Cell[CellGroupData[{
Cell[527335, 10130, 1760, 41, 86, "Input",ExpressionUUID->"d94f1559-3e93-488b-b144-94039769e3e5"],
Cell[529098, 10173, 574, 13, 28, "Message",ExpressionUUID->"5af7553a-096c-479c-8338-e7ebcd915276"],
Cell[529675, 10188, 155, 2, 32, "Output",ExpressionUUID->"fead7884-83b1-4d64-99b8-0601d1328dfc"]
}, Open  ]]
}, Open  ]],
Cell[529857, 10194, 166, 3, 50, "Text",ExpressionUUID->"8a1e59b7-8434-4eec-9fd4-c62097981f3a"],
Cell[CellGroupData[{
Cell[530048, 10201, 334, 8, 50, "Input",ExpressionUUID->"4b5db42a-783d-4fd1-aa52-8f4ebdf12881"],
Cell[530385, 10211, 391, 9, 28, "Message",ExpressionUUID->"2430d388-85c8-42f9-9348-f061152144b7"],
Cell[530779, 10222, 344, 8, 32, "Output",ExpressionUUID->"81cec0f8-dabc-4466-804f-2704bc9de233"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531160, 10235, 680, 21, 52, "Input",ExpressionUUID->"bf268d3d-b5da-4251-9fad-3dc5e04b9c2a"],
Cell[531843, 10258, 8563, 195, 243, "Output",ExpressionUUID->"33f7a4e8-69de-44e2-bd47-55aac9e04b62"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540464, 10460, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3b89d28b-e207-430b-b311-dffc86c8eba4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[540611, 10466, 101, 0, 189, "Section",ExpressionUUID->"b9e9586e-38f3-464b-8cac-20fb23d66204"],
Cell[CellGroupData[{
Cell[540737, 10470, 95, 0, 131, "Subsection",ExpressionUUID->"c3c73acc-a408-4478-96d0-cc857bfc7c13"],
Cell[540835, 10472, 173, 3, 50, "Text",ExpressionUUID->"954c5940-f0e0-48cd-9e30-554c422edc7f"],
Cell[CellGroupData[{
Cell[541033, 10479, 200, 4, 50, "Item",ExpressionUUID->"642f39ff-4ebc-4af2-97a9-cee767db5d71"],
Cell[CellGroupData[{
Cell[541258, 10487, 222, 5, 50, "Input",ExpressionUUID->"e247060f-a2e1-4828-86f4-528a7158a109"],
Cell[541483, 10494, 151, 3, 32, "Output",ExpressionUUID->"52f5b17b-f9f7-4b5d-903e-e1c9b02f5a16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541671, 10502, 277, 6, 53, "Input",ExpressionUUID->"9ab84631-fe7f-48fe-bbd6-543d9b5ea242"],
Cell[541951, 10510, 235, 5, 34, "Output",ExpressionUUID->"03bc8b8c-5ce3-487f-bf66-761b19bb775b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542223, 10520, 354, 9, 53, "Input",ExpressionUUID->"1014d456-31ef-406a-89a9-1737536cb6c3"],
Cell[542580, 10531, 236, 4, 32, "Output",ExpressionUUID->"25c33f24-223c-4575-bf9c-ebff2dae98f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542853, 10540, 363, 11, 53, "Input",ExpressionUUID->"6fbf59ea-0e6e-4130-b65b-db3e520f5af5"],
Cell[543219, 10553, 235, 5, 34, "Output",ExpressionUUID->"3bda7277-5e38-4080-9b94-b67121cd25d1"]
}, Open  ]]
}, Open  ]],
Cell[543481, 10562, 166, 3, 50, "Text",ExpressionUUID->"b6fc43ac-5abd-40a6-99dc-b8284d549473"],
Cell[CellGroupData[{
Cell[543672, 10569, 224, 5, 50, "Input",ExpressionUUID->"62a52a63-23f7-47e1-9979-962ab6cd07de"],
Cell[543899, 10576, 159, 4, 32, "Output",ExpressionUUID->"28ba0216-a48c-4a8d-905d-eb0f9d96a8cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544095, 10585, 223, 5, 50, "Input",ExpressionUUID->"fd1d0834-abfd-4ec8-8cfb-e13a44e09851"],
Cell[544321, 10592, 135, 3, 32, "Output",ExpressionUUID->"db4b972f-df1d-4c71-8489-b7b0b3af6d34"]
}, Open  ]],
Cell[544471, 10598, 233, 6, 50, "Text",ExpressionUUID->"7ffcc0b4-c1a4-423e-adee-32bdd53ff933"],
Cell[CellGroupData[{
Cell[544729, 10608, 385, 11, 50, "Input",ExpressionUUID->"aba2a4d4-1ab1-4486-950b-70057310ff04"],
Cell[545117, 10621, 175, 4, 32, "Output",ExpressionUUID->"f3157d8d-adda-486c-8f36-fd91cc03c584"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[545365, 10633, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2ffaa2eb-ce0d-43c7-85ed-543b104e87e4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[545512, 10639, 101, 0, 189, "Section",ExpressionUUID->"8dabacc9-9a6d-401d-996f-317b3248060a"],
Cell[CellGroupData[{
Cell[545638, 10643, 94, 0, 131, "Subsection",ExpressionUUID->"3cda8dd3-322d-4b8c-9282-4feb756ffde4"],
Cell[545735, 10645, 212, 3, 73, "Text",ExpressionUUID->"df5b00e7-e3a6-43c3-96ca-aabeefa57b09"],
Cell[CellGroupData[{
Cell[545972, 10652, 204, 4, 50, "Item",ExpressionUUID->"0862386e-7f59-4730-99a7-f8d7470b37ca"],
Cell[CellGroupData[{
Cell[546201, 10660, 213, 5, 50, "Input",ExpressionUUID->"33494580-1608-4b21-a587-89006192f571"],
Cell[546417, 10667, 152, 3, 32, "Output",ExpressionUUID->"723fb0e7-5da7-4498-ac6a-753854e86ad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546606, 10675, 214, 5, 50, "Input",ExpressionUUID->"06574a45-9b79-4127-a216-42fbca2a4208"],
Cell[546823, 10682, 152, 3, 32, "Output",ExpressionUUID->"fe47aa4e-bee7-466b-a565-ed877d4123d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547024, 10691, 124, 0, 50, "Item",ExpressionUUID->"816e1dd7-e9f2-49f2-9478-03a577fecbae"],
Cell[CellGroupData[{
Cell[547173, 10695, 214, 5, 50, "Input",ExpressionUUID->"beaba41d-0f70-4f80-a901-5a60ff0dd06d"],
Cell[547390, 10702, 333, 8, 28, "Message",ExpressionUUID->"5a3ebefd-e1f0-4fda-9bc5-351d29346394"],
Cell[547726, 10712, 118, 2, 32, "Output",ExpressionUUID->"75ed6f2e-b7f9-4dee-b6b4-0ff69a984888"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547929, 10723, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1b3c3cd6-32d2-4504-9b9b-bd805ac7b3db",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[548076, 10729, 101, 0, 189, "Section",ExpressionUUID->"c21f026f-6807-4d88-848f-e79c458744ad"],
Cell[CellGroupData[{
Cell[548202, 10733, 96, 0, 131, "Subsection",ExpressionUUID->"83da5d5d-3e76-4e2b-9687-e93eaa3d3ae1"],
Cell[CellGroupData[{
Cell[548323, 10737, 177, 4, 50, "Item",ExpressionUUID->"ac2649a4-47be-4872-abe5-39585588e63c"],
Cell[CellGroupData[{
Cell[548525, 10745, 153, 3, 50, "Input",ExpressionUUID->"798a3cbb-88ed-4804-9f20-6fafc5e4673b"],
Cell[548681, 10750, 5527, 136, 177, "Output",ExpressionUUID->"9f029bf3-2386-4f9c-bc62-73a638894877"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[554257, 10892, 122, 0, 50, "Item",ExpressionUUID->"93327428-2e6b-43d1-a5a2-a732d72c982a"],
Cell[CellGroupData[{
Cell[554404, 10896, 193, 4, 50, "Input",ExpressionUUID->"361582cb-9aee-41cc-9e8e-b9ab29acbf9a"],
Cell[554600, 10902, 1187, 21, 109, "Output",ExpressionUUID->"1fe6be1e-4b0e-4ff9-9bff-23462d182aa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555824, 10928, 199, 4, 50, "Input",ExpressionUUID->"bb409282-e324-48b4-912a-37288cb29330"],
Cell[556026, 10934, 404, 11, 32, "Output",ExpressionUUID->"003a8488-7de6-4ef2-8323-3e7244c56edb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556479, 10951, 214, 4, 50, "Item",ExpressionUUID->"4172dd88-2ff9-463c-860d-de475ce4cbe4"],
Cell[CellGroupData[{
Cell[556718, 10959, 177, 4, 50, "Input",ExpressionUUID->"7712f88a-6d74-4d65-bb49-63e4f647b30a"],
Cell[556898, 10965, 9231, 195, 65, "Output",ExpressionUUID->"19bcddea-85bb-405f-b995-9a0a30493e45"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566214, 11169, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d8155c68-39e6-4f47-b96e-d0ddd90ea299",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[566361, 11175, 101, 0, 189, "Section",ExpressionUUID->"4a45febd-01ab-4cd3-aef1-49a164bdd922"],
Cell[566465, 11177, 268, 4, 73, "Text",ExpressionUUID->"19b5ce26-372b-4a3d-92bd-200fbac5e3f1"],
Cell[CellGroupData[{
Cell[566758, 11185, 1073, 33, 127, "Input",ExpressionUUID->"234ddf41-e684-4010-b866-fd7d969d2b85"],
Cell[567834, 11220, 2648, 70, 90, "Output",ExpressionUUID->"7207029d-dab3-47ac-9699-f674b345f207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570519, 11295, 142, 2, 30, "Input",ExpressionUUID->"d5ff130f-886b-4c77-8a04-361fdfdf1422"],
Cell[570664, 11299, 2315, 52, 243, "Output",ExpressionUUID->"d3b123a9-cab2-47f0-8a80-08154ad19a36"]
}, {2}]],
Cell[572991, 11354, 141, 2, 50, "Text",ExpressionUUID->"5be5c8b7-94c4-43bb-b176-eeb12aa8d853"],
Cell[CellGroupData[{
Cell[573157, 11360, 1313, 37, 157, "Input",ExpressionUUID->"38c72a25-5dac-47b9-856a-28de2ac616cd"],
Cell[574473, 11399, 52084, 857, 256, "Output",ExpressionUUID->"3c75e235-69f9-4ae0-9492-067a43556e59"]
}, {2}]],
Cell[626569, 12259, 197, 3, 50, "Text",ExpressionUUID->"d9334a72-d531-4a81-a3d7-17a1867a822b"],
Cell[CellGroupData[{
Cell[626791, 12266, 174, 4, 50, "Item",ExpressionUUID->"085bf079-c12e-412e-bcfc-bad5778133ef"],
Cell[CellGroupData[{
Cell[626990, 12274, 1237, 33, 52, "Input",ExpressionUUID->"e6cc4c13-ea56-45f1-ba77-717eb85354a6"],
Cell[628230, 12309, 2629, 61, 91, "Output",ExpressionUUID->"2bf5afca-aae4-4d48-8976-ccf38fb3549c"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[630905, 12376, 180, 3, 50, "Item",ExpressionUUID->"d022011a-6bdd-4d72-8160-b6c82085c03c"],
Cell[CellGroupData[{
Cell[631110, 12383, 3317, 88, 263, "Input",ExpressionUUID->"b8a2ff09-6620-4caf-aa29-3c4a3d150e26"],
Cell[634430, 12473, 2935, 55, 153, "Output",ExpressionUUID->"3a4ad0fb-994c-4060-9735-4a3a6d485187"]
}, {2}]],
Cell[CellGroupData[{
Cell[637399, 12533, 573, 13, 146, "Input",ExpressionUUID->"fcabd5cc-f5e2-4582-97ca-5d293c1bad60"],
Cell[637975, 12548, 19305, 401, 52, "Output",ExpressionUUID->"293d9a40-3084-4942-ba9b-3531121105c5"]
}, Open  ]]
}, Open  ]],
Cell[657307, 12953, 244, 4, 73, "Text",ExpressionUUID->"40045316-ccc0-41ef-b82e-9ed5176c8d01"],
Cell[CellGroupData[{
Cell[657576, 12961, 324, 9, 50, "Input",ExpressionUUID->"ad6645aa-6a44-4bd2-9092-f51379248459"],
Cell[657903, 12972, 3155, 95, 109, "Output",ExpressionUUID->"28e3f531-de5b-4453-b5fa-fd06b90b0557"]
}, Open  ]],
Cell[661073, 13070, 197, 3, 50, "Text",ExpressionUUID->"bfc3a790-0db2-49b4-a8b0-da5f49f87545"],
Cell[CellGroupData[{
Cell[661295, 13077, 1631, 42, 59, "Input",ExpressionUUID->"6008300d-b54b-47a4-b295-3df7c723718a"],
Cell[662929, 13121, 18124, 369, 52, "Output",ExpressionUUID->"9d689d7a-2a8f-40b2-a4a3-3aa6a3340f90"]
}, Open  ]],
Cell[681068, 13493, 161, 3, 50, "Text",ExpressionUUID->"93001557-5077-45c0-b981-16ca0e670a3b"],
Cell[CellGroupData[{
Cell[681254, 13500, 405, 10, 89, "Input",ExpressionUUID->"d5af8750-652d-47fc-ba2b-7fb2cb835858"],
Cell[681662, 13512, 739, 14, 52, "Output",ExpressionUUID->"6e002146-e1b2-4a77-ad8f-f51892d792b2"],
Cell[682404, 13528, 347, 7, 32, "Output",ExpressionUUID->"212a42c1-b213-43b3-9de0-79fec887c14a"],
Cell[682754, 13537, 347, 7, 32, "Output",ExpressionUUID->"7c998456-37fb-4a25-8e5a-9fa34001ab56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[683162, 13551, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d49ccd24-6ed1-4c8c-8688-2a545b42afba",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[683309, 13557, 103, 0, 189, "Section",ExpressionUUID->"5b2b2449-4031-4ec5-a5d8-b571012f0163"],
Cell[683415, 13559, 306, 4, 73, "Text",ExpressionUUID->"50d4b2c9-ee73-47c8-a263-c5fd0d0b6b77"],
Cell[683724, 13565, 1533, 47, 146, "Input",ExpressionUUID->"55d37e47-f408-4ddc-a8e2-29b5a053d101"],
Cell[CellGroupData[{
Cell[685282, 13616, 148, 3, 30, "Input",ExpressionUUID->"25a53c75-082c-41c0-b609-86d0cc513633"],
Cell[685433, 13621, 2937, 63, 239, "Output",ExpressionUUID->"2d1e2199-557e-4c8c-94ce-8c5020a59391"]
}, {2}]],
Cell[688382, 13687, 285, 4, 73, "Text",ExpressionUUID->"f9b7c4fb-f9e5-4dcb-b78c-28d71e31a7ae"],
Cell[688670, 13693, 1481, 30, 132, "Output",ExpressionUUID->"b4d8ea58-bb06-4a1f-aef2-7fd4421422ee"],
Cell[CellGroupData[{
Cell[690176, 13727, 167, 3, 50, "Item",ExpressionUUID->"c8b9a552-5924-47b9-afd9-ab3d970e446d"],
Cell[CellGroupData[{
Cell[690368, 13734, 583, 14, 146, "Input",ExpressionUUID->"888edd9d-b061-4ff7-9a69-747e4958c213"],
Cell[690954, 13750, 18943, 381, 52, "Output",ExpressionUUID->"b531b437-84c2-4436-972e-1a2290e9ff41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709934, 14136, 195, 5, 50, "Input",ExpressionUUID->"daf5c0cb-6ad1-476b-a00c-d221caa16aeb"],
Cell[710132, 14143, 229, 6, 32, "Output",ExpressionUUID->"16c151c2-8bd5-4bfe-b475-5fd7c2ffdec6"]
}, Open  ]]
}, Open  ]],
Cell[710388, 14153, 321, 5, 73, "Text",ExpressionUUID->"bf01353a-3ad1-40b1-88d5-dbf10973c94d"],
Cell[710712, 14160, 234, 5, 50, "Item",ExpressionUUID->"1e890e86-4e0b-454d-950d-7f86fd2b80cb"],
Cell[710949, 14167, 262, 5, 50, "Item",ExpressionUUID->"8f526371-19f2-4792-80fe-a8508a6ee19b"],
Cell[CellGroupData[{
Cell[711236, 14176, 187, 3, 50, "Item",ExpressionUUID->"4ef0c2c3-9265-4f8d-958e-989547086c58"],
Cell[CellGroupData[{
Cell[711448, 14183, 532, 12, 108, "Input",ExpressionUUID->"abc51e9c-c5a5-43f4-9b89-d539739f45e7"],
Cell[711983, 14197, 18736, 378, 52, "Output",ExpressionUUID->"3e3b0d4b-9b2e-443d-814a-8494ab872edf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730756, 14580, 196, 5, 50, "Input",ExpressionUUID->"bd633943-4076-4250-b76d-841604684f6a"],
Cell[730955, 14587, 119, 2, 32, "Output",ExpressionUUID->"a4a7157a-20a2-4535-a1af-5b0468094d92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731111, 14594, 244, 7, 50, "Input",ExpressionUUID->"f743f4b2-cc6f-4377-82a1-ad83c3a13218"],
Cell[731358, 14603, 374, 8, 32, "Output",ExpressionUUID->"5b7ebb03-71d1-477a-997d-49fc625c035b"]
}, Open  ]]
}, Open  ]],
Cell[731759, 14615, 150, 2, 50, "Text",ExpressionUUID->"557835c4-3cd7-4c7d-8592-d3e63312fe30"],
Cell[CellGroupData[{
Cell[731934, 14621, 364, 10, 50, "Input",ExpressionUUID->"a1b30c25-5543-4592-bbb9-4033bf66b956"],
Cell[732301, 14633, 4981, 154, 147, "Output",ExpressionUUID->"295bda85-faaf-4054-9527-92708baa4065"]
}, Open  ]],
Cell[737297, 14790, 484, 8, 96, "Text",ExpressionUUID->"57d42e84-4322-46c8-ab24-209bcb546644"],
Cell[CellGroupData[{
Cell[737806, 14802, 253, 6, 50, "Item",ExpressionUUID->"72ed2de2-114c-41da-b70f-f98ea66608f3"],
Cell[CellGroupData[{
Cell[738084, 14812, 1774, 40, 57, "Input",ExpressionUUID->"b767f7f1-8945-41db-be39-365a021ea841"],
Cell[739861, 14854, 18736, 378, 52, "Output",ExpressionUUID->"47cca181-11d3-4448-a4d6-a930eaa46512"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758634, 15237, 346, 9, 70, "Input",ExpressionUUID->"ea58a9aa-38e9-4725-9274-d91fd6b0fdbb"],
Cell[758983, 15248, 704, 11, 32, "Output",ExpressionUUID->"76b06922-c593-4a06-a496-0205ef6285a9"],
Cell[759690, 15261, 704, 11, 32, "Output",ExpressionUUID->"8321df06-45b9-4189-a6e0-de8e73cf0eb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[760467, 15280, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"825c3de1-1203-447d-a691-4e51086b87e5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[760614, 15286, 87, 0, 189, "Section",ExpressionUUID->"459fd154-1a7d-4ce5-8813-e17ff1c31470"],
Cell[760704, 15288, 293, 4, 73, "Text",ExpressionUUID->"61e427c6-9d6b-45d3-96e1-bcc6f53cd0be"],
Cell[761000, 15294, 520, 16, 70, "Input",ExpressionUUID->"9c4704b9-51be-4184-ac32-0881de27ba4b"],
Cell[761523, 15312, 190, 3, 50, "Text",ExpressionUUID->"7024e0a7-d4f9-4084-b884-6144f8e01fcf"],
Cell[761716, 15317, 353, 10, 50, "Input",ExpressionUUID->"aa407458-7178-4795-80ce-b1d59f868a45"],
Cell[CellGroupData[{
Cell[762094, 15331, 220, 6, 50, "Input",ExpressionUUID->"6ea8161d-8c0a-4e47-8cb4-c19c52c8c319"],
Cell[762317, 15339, 249, 5, 32, "Output",ExpressionUUID->"13c52a3d-cbb8-4d39-a1b0-cfda7862024d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762603, 15349, 222, 4, 50, "Item",ExpressionUUID->"b9d08f2a-c6d2-40a0-8afd-9b92e6103122"],
Cell[CellGroupData[{
Cell[762850, 15357, 289, 7, 50, "Input",ExpressionUUID->"700357ba-ba42-459b-88f2-88b7825a3331"],
Cell[763142, 15366, 4836, 102, 51, "Output",ExpressionUUID->"56b11f93-5821-46d8-b5e4-79dc5ea89c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768015, 15473, 212, 6, 50, "Input",ExpressionUUID->"017e30cf-8fb0-4d85-b72f-cb4820455770"],
Cell[768230, 15481, 251, 5, 32, "Output",ExpressionUUID->"754c02b2-e435-4b8f-ba35-135d8b3f524b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[768530, 15492, 151, 2, 50, "Item",ExpressionUUID->"f90e73f8-bbae-45d3-9a63-6f4e6c76a036"],
Cell[CellGroupData[{
Cell[768706, 15498, 484, 11, 146, "Input",ExpressionUUID->"22c9eb08-1d25-46b6-b136-66f83df10ed0"],
Cell[769193, 15511, 18743, 387, 52, "Output",ExpressionUUID->"4cc6ce92-02e2-4121-8ad8-e0bd72221cac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[787973, 15903, 262, 6, 50, "Input",ExpressionUUID->"2da0df94-ca6e-427f-be91-63e4faec7838"],
Cell[788238, 15911, 54972, 1002, 53, "Output",ExpressionUUID->"af775c33-a59b-41d4-81e3-289966f3a773"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[843259, 16919, 456, 10, 50, "Item",ExpressionUUID->"6170d22f-b436-4510-a918-718e2aab25a0"],
Cell[CellGroupData[{
Cell[843740, 16933, 294, 8, 50, "Input",ExpressionUUID->"d30212e7-922c-4b88-a337-a65744e3e58e"],
Cell[844037, 16943, 6105, 131, 51, "Output",ExpressionUUID->"da7de75c-7cd5-4975-b65b-a34b100099f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[850179, 17079, 684, 17, 114, "Input",ExpressionUUID->"5e00d470-86d9-4d25-ac0e-13fc694ac699"],
Cell[850866, 17098, 2182, 58, 99, "Output",ExpressionUUID->"2ab4d09e-43c4-49a3-a563-5a503dd1eb0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[853121, 17164, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d5451202-2ff9-4d79-aa30-3d2fa74877f2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[853268, 17170, 97, 0, 189, "Section",ExpressionUUID->"59f4ce48-7f18-4fd0-bcbd-6f9f5a462280"],
Cell[853368, 17172, 359, 6, 73, "Text",ExpressionUUID->"17cbf5b1-1f68-4747-a512-4f0685a7c40c"],
Cell[853730, 17180, 954, 32, 89, "Input",ExpressionUUID->"8e962c65-40ea-489b-902e-daf4aa7dfc98"],
Cell[CellGroupData[{
Cell[854709, 17216, 535, 15, 30, "Input",ExpressionUUID->"9dd1fde5-dc1f-4504-bed7-b236f340a2e0"],
Cell[855247, 17233, 20679, 449, 364, "Output",ExpressionUUID->"1d1a9c94-7669-4285-a837-ab3f1d4bb098"]
}, {2}]],
Cell[875938, 17685, 190, 3, 50, "Text",ExpressionUUID->"e9c64e20-168e-45ab-a50b-ba7aa5a80d5e"],
Cell[CellGroupData[{
Cell[876153, 17692, 335, 8, 50, "Input",ExpressionUUID->"e34bad94-a6ff-417b-bc97-94e22abedc7d"],
Cell[876491, 17702, 17562, 355, 52, "Output",ExpressionUUID->"486daad5-fb38-45bd-8396-9347bc0918d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894090, 18062, 1178, 33, 115, "Input",ExpressionUUID->"beacdef6-b0c5-4c02-8895-8f5e2f340998"],
Cell[895271, 18097, 87006, 1554, 358, "Output",ExpressionUUID->"b43bb519-97b2-4c46-a4eb-bc880f3da5ec"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[982335, 19658, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d07896c2-14e3-4c20-b4dc-a42e3c1a310e",
 CellTags->"SlideShowHeader"],
Cell[982460, 19662, 89, 0, 69, "Chapter",ExpressionUUID->"6e76729e-08b9-41b8-ba97-f60bafeb7f73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982586, 19667, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"108ac2fd-8035-424a-96d5-4dae9f3f544a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[982733, 19673, 94, 0, 189, "Section",ExpressionUUID->"2622ec79-c94b-4d5f-9771-e5b753d9f32a"],
Cell[982830, 19675, 425, 6, 119, "Text",ExpressionUUID->"2f43c278-7e6a-4cdb-9871-a1e3c33cdbb1"],
Cell[983258, 19683, 440, 12, 73, "Text",ExpressionUUID->"518a00c5-4be0-45de-8aa6-4bb436264470"],
Cell[983701, 19697, 173, 3, 50, "Item",ExpressionUUID->"db2d6636-f26e-4733-93ec-65930eda5a5e"],
Cell[CellGroupData[{
Cell[983899, 19704, 237, 5, 50, "Item",ExpressionUUID->"bb4e1bbd-26cd-4a4a-a7f4-0ea04f4ca488"],
Cell[CellGroupData[{
Cell[984161, 19713, 309, 7, 50, "Input",ExpressionUUID->"e81f6ab2-5d0c-4c4f-b1da-82e536614eeb"],
Cell[984473, 19722, 26560, 541, 52, "Output",ExpressionUUID->"bf36b04b-0759-4d3e-bcd7-fc8fdce58e74"]
}, Open  ]]
}, Open  ]],
Cell[1011060, 20267, 440, 8, 96, "Text",ExpressionUUID->"c068aef1-0558-4bf3-ab8e-32cc93ee576f"],
Cell[CellGroupData[{
Cell[1011525, 20279, 19969, 329, 262, "Input",ExpressionUUID->"cf5704ab-ff5c-4f03-8e98-754ba9128ccb"],
Cell[1031497, 20610, 22517, 576, 244, "Output",ExpressionUUID->"63cfb923-8c34-4812-9770-5a1813905843"]
}, Open  ]],
Cell[1054029, 21189, 151, 2, 50, "Text",ExpressionUUID->"6e6e446a-bc62-4c2a-b8c7-1a9502af7ded"],
Cell[CellGroupData[{
Cell[1054205, 21195, 7900, 190, 157, "Input",ExpressionUUID->"06f69807-33c8-4d73-99be-4e982c4b0317"],
Cell[1062108, 21387, 13561, 388, 204, "Output",ExpressionUUID->"13333111-6992-4042-946d-63ef54ba3018"]
}, {2}]],
Cell[CellGroupData[{
Cell[1075703, 21780, 308, 7, 71, "Item",ExpressionUUID->"e91cdc3d-03dd-4e8c-a155-248158592cb8"],
Cell[CellGroupData[{
Cell[1076036, 21791, 358, 8, 50, "Input",ExpressionUUID->"e645b9da-cb09-452c-b45c-8ddae96c17c1"],
Cell[1076397, 21801, 24601, 519, 507, "Output",ExpressionUUID->"424d6b55-a367-4f08-b700-0d1e29915b66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101035, 22325, 180, 4, 50, "Input",ExpressionUUID->"cde6f1c2-b4ba-451e-9075-1438beec6c00"],
Cell[1101218, 22331, 128, 2, 32, "Output",ExpressionUUID->"962908ec-5b68-4176-b686-7f7cb666c218"]
}, Open  ]]
}, Open  ]],
Cell[1101373, 22337, 177, 3, 50, "Text",ExpressionUUID->"5fb963af-3f07-4bcf-aba7-9280de4fd3a0"],
Cell[CellGroupData[{
Cell[1101575, 22344, 207, 4, 50, "Input",ExpressionUUID->"455889a3-e1fa-4f16-ab57-96219bc2a7b7"],
Cell[1101785, 22350, 25335, 508, 52, "Output",ExpressionUUID->"27288c7f-29fe-4dfb-a0c1-ddcb72cd4ef0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127157, 22863, 1470, 41, 157, "Input",ExpressionUUID->"9e637e10-c50b-4243-9053-550c6b85d731"],
Cell[1128630, 22906, 133817, 2352, 358, "Output",ExpressionUUID->"8e3e69c3-79d6-4cee-8056-7b3f86899df9"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262505, 25265, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4d90153b-c0c1-456b-b76e-cfd9d7b814c7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1262652, 25271, 94, 0, 189, "Section",ExpressionUUID->"b2eb7fe4-d75d-4930-9a0f-750d930bca0d"],
Cell[1262749, 25273, 258, 4, 73, "Text",ExpressionUUID->"1389e95f-5857-44d4-8af1-87b9053c37fb"],
Cell[CellGroupData[{
Cell[1263032, 25281, 3539, 89, 157, "Input",ExpressionUUID->"ff365c63-7e49-4fa2-bb65-6f937071d060"],
Cell[1266574, 25372, 115376, 2055, 489, "Output",ExpressionUUID->"d9e1de8c-ff00-4e5b-8de1-1eb01f572f64"]
}, {2}]],
Cell[1381962, 27430, 144, 1, 50, "Text",ExpressionUUID->"8151a44d-3282-46e9-b172-52551b302625"],
Cell[CellGroupData[{
Cell[1382131, 27435, 168, 3, 50, "Item",ExpressionUUID->"47db3110-5bd8-4a15-9062-89712232251e"],
Cell[CellGroupData[{
Cell[1382324, 27442, 412, 9, 108, "Input",ExpressionUUID->"d9bbd5bd-986c-4f09-82da-ccf52ad9ee8f"],
Cell[1382739, 27453, 26800, 545, 52, "Output",ExpressionUUID->"fbb20144-cb51-4fa1-a3d0-42ef51aaa236"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409576, 28003, 360, 8, 50, "Input",ExpressionUUID->"8fd2400c-6217-4fa1-a1d7-a8fc477a8fe4"],
Cell[1409939, 28013, 24609, 517, 507, "Output",ExpressionUUID->"667bb644-bb43-46a2-95ae-fd1eaaa7bbca"]
}, Open  ]]
}, Open  ]],
Cell[1434575, 28534, 122, 0, 50, "Text",ExpressionUUID->"b47091c9-2cc0-471a-af68-150003acc97e"],
Cell[CellGroupData[{
Cell[1434722, 28538, 181, 4, 50, "Input",ExpressionUUID->"1f56d6f5-332c-440c-8b2c-650e0dec1421"],
Cell[1434906, 28544, 128, 2, 32, "Output",ExpressionUUID->"eafd4a2f-fb46-4989-9827-e6d58844cbc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1435071, 28551, 212, 5, 50, "Input",ExpressionUUID->"c44c0d87-9e2b-4ed3-bb2f-71d46f612661"],
Cell[1435286, 28558, 25575, 512, 52, "Output",ExpressionUUID->"4ba0ae46-d25a-42c3-9a46-10634707afb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1460898, 29075, 1471, 41, 157, "Input",ExpressionUUID->"e6d1284a-6262-4e72-8044-a56f8017237b"],
Cell[1462372, 29118, 116183, 2046, 358, "Output",ExpressionUUID->"61e18720-6e07-4b6b-87c6-26b341eb7b82"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1578613, 31171, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b2220ff7-56f5-4c13-ab53-cc0034589e5c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1578760, 31177, 94, 0, 189, "Section",ExpressionUUID->"036aeff2-bc70-45e7-a28f-e612c1d96fdf"],
Cell[1578857, 31179, 300, 5, 73, "Text",ExpressionUUID->"cee5e5e3-81a0-48f9-8b95-aa25cc71cf6a"],
Cell[1579160, 31186, 219, 5, 50, "Text",ExpressionUUID->"bc5de3d9-66fc-44d8-bfed-30e8ed7eb5da"],
Cell[CellGroupData[{
Cell[1579404, 31195, 178, 4, 50, "Item",ExpressionUUID->"6106e28d-20ee-4748-871c-e951d57fae45"],
Cell[1579585, 31201, 541, 12, 56, "Input",ExpressionUUID->"2ca8f9bf-8baf-4947-8772-ceaf9c73967a"],
Cell[CellGroupData[{
Cell[1580151, 31217, 1227, 30, 52, "Input",ExpressionUUID->"ed2d0a64-2fc2-4fcf-bd26-e21210621802"],
Cell[1581381, 31249, 2543, 52, 233, "Output",ExpressionUUID->"bc9b9a64-b7e3-45b2-b654-60095e669fa0"]
}, {2}]]
}, Open  ]],
Cell[1583948, 31305, 197, 4, 50, "Item",ExpressionUUID->"7e53637d-6c30-4ac8-a6c1-e94ba844cc5d"],
Cell[1584148, 31311, 188, 3, 50, "Item",ExpressionUUID->"d7f8aef3-0c8b-4b3d-b396-b71b32b8ba31"],
Cell[CellGroupData[{
Cell[1584361, 31318, 180, 4, 50, "Item",ExpressionUUID->"6e55be28-3b45-46bc-9134-cf73b0ac09a0"],
Cell[CellGroupData[{
Cell[1584566, 31326, 861, 23, 108, "Input",ExpressionUUID->"d767eff7-e78b-4c0a-ae94-f01fa5766735"],
Cell[1585430, 31351, 107686, 2182, 219, "Output",ExpressionUUID->"35fc928a-6388-4c90-bd6d-b07c619b8de9"]
}, Open  ]]
}, Open  ]],
Cell[1693143, 33537, 116, 0, 50, "Text",ExpressionUUID->"5ad11e66-d14a-4074-bfe1-a68def756603"],
Cell[CellGroupData[{
Cell[1693284, 33541, 457, 13, 50, "Input",ExpressionUUID->"02393d0b-b056-4662-b019-3e184bd4317e"],
Cell[1693744, 33556, 130, 2, 32, "Output",ExpressionUUID->"53f7d788-6ad0-4379-97bb-df79e7a7b249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1693911, 33563, 508, 15, 50, "Input",ExpressionUUID->"d53d9f14-d373-4c90-94af-83687224d44d"],
Cell[1694422, 33580, 130, 2, 32, "Output",ExpressionUUID->"fa8a749d-1133-4e70-befb-cbbf60937077"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1694613, 33589, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c1095d58-de2e-4052-8756-dd15ed2438b6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1694760, 33595, 94, 0, 189, "Section",ExpressionUUID->"791e7d44-f0dc-4618-9d9b-1aedd8031a41"],
Cell[1694857, 33597, 169, 3, 50, "Text",ExpressionUUID->"5e9ca3de-58bf-41a7-be44-045b183ede2e"],
Cell[CellGroupData[{
Cell[1695051, 33604, 213, 6, 50, "Item",ExpressionUUID->"ccff289f-2635-4c6f-9d2e-47a3957f6726"],
Cell[1695267, 33612, 326, 9, 50, "Input",ExpressionUUID->"f946c137-8172-4fe3-b0da-d1783a2332e4"],
Cell[CellGroupData[{
Cell[1695618, 33625, 151, 3, 50, "Input",ExpressionUUID->"37ef3cc6-2719-4049-a05b-698c30fe33e3"],
Cell[1695772, 33630, 28824, 515, 144, "Output",ExpressionUUID->"558498ba-8bd1-4949-adea-f784209fe8cb"]
}, Open  ]]
}, Open  ]],
Cell[1724623, 34149, 125, 0, 50, "Item",ExpressionUUID->"95cb1d47-2e9e-4cd9-bea6-0d47e99a14da"],
Cell[CellGroupData[{
Cell[1724773, 34153, 167, 3, 50, "Item",ExpressionUUID->"eef73c08-785c-49a1-b245-6aabb11413e3"],
Cell[CellGroupData[{
Cell[1724965, 34160, 2975, 71, 355, "Input",ExpressionUUID->"4809139b-f169-425a-a43e-a0aab6ffb480"],
Cell[1727943, 34233, 174597, 3574, 55, "Output",ExpressionUUID->"92b3a838-1236-4fd1-9525-652f5f0f2eda"]
}, Open  ]]
}, Open  ]],
Cell[1902567, 37811, 119, 0, 50, "Text",ExpressionUUID->"ca59612c-2a40-4d2d-8af3-d3ed77a2e58f"],
Cell[1902689, 37813, 420, 12, 70, "Input",ExpressionUUID->"fe40f5a8-df66-492f-ac6b-b9f3f195a7a6"],
Cell[1903112, 37827, 170, 3, 50, "Text",ExpressionUUID->"5bcb78cc-419e-4164-b87c-03692493e8fb"],
Cell[1903285, 37832, 200, 4, 50, "Item",ExpressionUUID->"1a867eb4-5120-48dc-96d5-b7650213efd3"],
Cell[CellGroupData[{
Cell[1903510, 37840, 192, 4, 50, "Item",ExpressionUUID->"e3d35d50-3630-4d5e-aff5-6052a94b9180"],
Cell[CellGroupData[{
Cell[1903727, 37848, 912, 20, 127, "Input",ExpressionUUID->"65f37861-f327-451e-8f06-f1e7aaa6d089"],
Cell[1904642, 37870, 69171, 1352, 581, "Output",ExpressionUUID->"65b597ca-525b-4475-abd6-ab29d51e1569"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1973850, 39227, 361, 9, 70, "Input",ExpressionUUID->"8e0794ea-f4f6-440c-adc3-12cb8beccef3"],
Cell[1974214, 39238, 34809, 633, 150, "Output",ExpressionUUID->"cf638cfd-b0b8-47c2-89dd-937bf5a256bb"],
Cell[2009026, 39873, 232, 5, 32, "Output",ExpressionUUID->"c489ba6d-5db4-41e7-b82a-6c756b0e7b25"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2009331, 39886, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2f5dd794-ae62-48b3-bbc3-c7c005ac7e3e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2009478, 39892, 84, 0, 189, "Section",ExpressionUUID->"a21c4e5e-143c-4b3b-9e36-7f978e9cab43"],
Cell[2009565, 39894, 198, 5, 50, "Item",ExpressionUUID->"5817eeb8-9f4e-4592-baa7-1617e32c67b3"],
Cell[2009766, 39901, 202, 5, 50, "Item",ExpressionUUID->"87bd7de5-c668-41d9-8314-6de91275f144"],
Cell[2009971, 39908, 337, 7, 50, "Item",ExpressionUUID->"51c156f1-6d1f-4823-b689-ab6436a02169"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2010357, 39921, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cde8ac14-228d-4d69-8d62-566ec0a37406",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2010504, 39927, 316, 5, 189, "Section",ExpressionUUID->"879bddef-f86a-47aa-8374-df8e4334a6b5"],
Cell[2010823, 39934, 2667, 45, 177, "Abstract",ExpressionUUID->"1da854e9-5038-4c7a-abab-228d1795fe30"],
Cell[CellGroupData[{
Cell[2013515, 39983, 239, 4, 131, "Subsection",ExpressionUUID->"feba72e3-6005-4455-b391-2eb00f103e26"],
Cell[CellGroupData[{
Cell[2013779, 39991, 985, 22, 52, "Item",ExpressionUUID->"5b3cbb84-0532-4b37-a11f-2303b4b7875a"],
Cell[CellGroupData[{
Cell[2014789, 40017, 1110, 31, 116, "Input",ExpressionUUID->"6d2566c6-633b-49ff-a4bc-cafb1410cab7",
 CellTags->{"Mean", "Flatten"}],
Cell[2015902, 40050, 268, 4, 34, "Output",ExpressionUUID->"edb3224c-3805-46a5-abf8-79e4f91ff2b2",
 CellTags->{"Mean", "Flatten"}],
Cell[2016173, 40056, 268, 4, 34, "Output",ExpressionUUID->"d442ff8a-d881-4f91-921f-1773e780fc2f",
 CellTags->{"Mean", "Flatten"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2016490, 40066, 811, 15, 50, "Item",ExpressionUUID->"71b44a2d-0b8a-4500-8d3b-9d41b5363318"],
Cell[CellGroupData[{
Cell[2017326, 40085, 1032, 27, 116, "Input",ExpressionUUID->"d2b0d301-3135-4cf6-9284-2924bd885684",
 CellTags->"CrossEntropyLossLayer"],
Cell[2018361, 40114, 273, 4, 34, "Output",ExpressionUUID->"d537bb1c-bd6e-421e-b925-f9c876cb8a0e",
 CellTags->"CrossEntropyLossLayer"],
Cell[2018637, 40120, 272, 4, 34, "Output",ExpressionUUID->"548661f3-a5c6-4854-9c43-3f05c6bddc04",
 CellTags->"CrossEntropyLossLayer"]
}, Open  ]],
Cell[2018924, 40127, 1300, 19, 35, "ItemNumbered",ExpressionUUID->"f306696a-6872-4e8a-bd39-7660ac8f81b5"]
}, Open  ]],
Cell[2020239, 40149, 1700, 27, 68, "Text",ExpressionUUID->"8376c06e-cb5a-4015-a3d4-2fde30a0c95f"],
Cell[CellGroupData[{
Cell[2021964, 40180, 829, 23, 37, "Input",ExpressionUUID->"4c63fba5-b9cf-4541-8204-1dd07361a50a",
 CellOpen->False,
 CellID->1037295504],
Cell[2022796, 40205, 57953, 1214, 19, "Output",ExpressionUUID->"368ebfd3-299e-4fcd-a1f3-c2f4eb03b926",
 CellOpen->False]
}, Open  ]],
Cell[2080764, 41422, 1384, 21, 35, "ItemNumbered",ExpressionUUID->"ccee2728-6b8d-4e37-8a0c-7644a929976a"],
Cell[CellGroupData[{
Cell[2082173, 41447, 818, 20, 37, "Input",ExpressionUUID->"091e819c-9424-4fd0-90e9-b0b7863e0001",
 CellOpen->False,
 CellID->553289382],
Cell[2082994, 41469, 39095, 726, 19, "Output",ExpressionUUID->"e857eab5-34e9-41e0-ac51-1942eb01c5d4",
 CellOpen->False]
}, Open  ]],
Cell[2122104, 42198, 1260, 18, 35, "ItemNumbered",ExpressionUUID->"4702eb06-2b86-450e-b294-624b2d795b67"],
Cell[CellGroupData[{
Cell[2123389, 42220, 663, 20, 37, "Input",ExpressionUUID->"fff8ac58-6d59-438b-8236-259aeddd0db6",
 CellOpen->False,
 CellID->530451764],
Cell[2124055, 42242, 3031, 67, 19, "Output",ExpressionUUID->"e4051ed4-a628-4c87-82d5-da8c8cd7520f",
 CellOpen->False]
}, Open  ]],
Cell[2127101, 42312, 1455, 22, 35, "ItemNumbered",ExpressionUUID->"bee27a07-e2be-4ac9-9cf1-89de423e9f24"],
Cell[2128559, 42336, 667, 18, 37, "Input",ExpressionUUID->"32fd8cf5-e05d-44a4-89e4-5676efb8573e",
 CellOpen->False],
Cell[CellGroupData[{
Cell[2129251, 42358, 789, 21, 37, "Input",ExpressionUUID->"69ac844e-b622-4401-a4f8-ab16e1bfe1b9",
 CellOpen->False],
Cell[2130043, 42381, 21161, 428, 19, "Output",ExpressionUUID->"f03a714e-bc47-4c8f-bd25-5404ff4c2797",
 CellOpen->False]
}, Open  ]],
Cell[2151219, 42812, 1490, 23, 35, "ItemNumbered",ExpressionUUID->"8ac628be-1629-480b-9389-52a8fdd32c05"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2152758, 42841, 246, 4, 93, "Section",ExpressionUUID->"c794cdd8-1e93-4f33-bed2-5d851c806474"],
Cell[2153007, 42847, 177, 3, 50, "Text",ExpressionUUID->"2621e8a3-a3c0-47de-ab58-2a362b9c43b6"],
Cell[CellGroupData[{
Cell[2153209, 42854, 642, 15, 95, "Input",ExpressionUUID->"10d8bd75-7994-47d1-9cee-8a26bbf622c1"],
Cell[2153854, 42871, 583, 13, 28, "Message",ExpressionUUID->"57a43911-a6c4-43d2-a89c-ea4216646328"],
Cell[2154440, 42886, 112, 1, 34, "Output",ExpressionUUID->"7bdad379-7634-4fb9-8941-1161dbfce633"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2154601, 42893, 121, 0, 184, "Section",ExpressionUUID->"bc90481c-6240-44fd-9c05-5da642e3bbe7"],
Cell[2154725, 42895, 1430, 22, 35, "ItemNumbered",ExpressionUUID->"991a5a23-d6b7-4014-8c9c-77a7c057acbd"],
Cell[CellGroupData[{
Cell[2156180, 42921, 914, 26, 19, "Input",ExpressionUUID->"34fcb662-dc16-45fc-b871-53d1fe696119",
 CellOpen->False,
 CellTags->"NormalDistribution",
 CellID->1098178851],
Cell[2157097, 42949, 1950, 50, 19, "Output",ExpressionUUID->"5277c016-2575-4ec8-8860-bebf3caacff0",
 CellOpen->False,
 CellTags->"NormalDistribution"]
}, Open  ]],
Cell[2159062, 43002, 1565, 22, 35, "ItemNumbered",ExpressionUUID->"4d8a120e-0654-450c-9af1-22f6bab2d533"],
Cell[CellGroupData[{
Cell[2160652, 43028, 957, 28, 19, "Input",ExpressionUUID->"cbbc67f8-b30d-49fc-963f-e076f829b159",
 CellOpen->False],
Cell[2161612, 43058, 9014, 169, 19, "Output",ExpressionUUID->"72b4c81f-c1ca-428c-bf01-a4624456a9a0",
 CellOpen->False]
}, Open  ]],
Cell[2170641, 43230, 1472, 20, 35, "ItemNumbered",ExpressionUUID->"2b9f1bef-6338-431d-8ed1-405571e1f137"],
Cell[2172116, 43252, 658, 19, 19, "Input",ExpressionUUID->"25942ab8-b9c1-483f-b50a-00c607da4b9b",
 CellOpen->False],
Cell[2172777, 43273, 1470, 22, 35, "ItemNumbered",ExpressionUUID->"ff9a0794-4956-4701-b9d2-195493cdf991"],
Cell[CellGroupData[{
Cell[2174272, 43299, 364, 12, 19, "Input",ExpressionUUID->"bfb1b375-9cac-4cb8-a0fc-44dba98d5de4",
 CellOpen->False],
Cell[2174639, 43313, 19535, 342, 19, "Output",ExpressionUUID->"9c6e8837-3c47-42e9-8344-8b5900519c1e",
 CellOpen->False]
}, Open  ]],
Cell[2194189, 43658, 377, 9, 56, "ItemNumbered",ExpressionUUID->"5d72856d-9b25-4181-ab68-4ae5a6e48006"],
Cell[2194569, 43669, 357, 12, 66, "Text",ExpressionUUID->"f0bcbbd5-5672-45b0-ab94-2197e3f80c0c"],
Cell[CellGroupData[{
Cell[2194951, 43685, 915, 24, 19, "Input",ExpressionUUID->"c3997696-047f-45a5-bdd8-ac91ef4e36dd",
 CellOpen->False,
 CellID->1617486439],
Cell[2195869, 43711, 9740, 182, 19, "Output",ExpressionUUID->"318bfa2a-e2c7-4706-a819-b0ae897c2e86",
 CellOpen->False]
}, Open  ]],
Cell[2205624, 43896, 1498, 21, 35, "ItemNumbered",ExpressionUUID->"e1835691-419d-494f-bb0e-e0fb4e100f2f"],
Cell[CellGroupData[{
Cell[2207147, 43921, 1018, 30, 19, "Input",ExpressionUUID->"f316c491-4cdf-46f4-9a67-812352d40fbf",
 CellOpen->False],
Cell[2208168, 43953, 19659, 344, 19, "Output",ExpressionUUID->"8eb4a3fa-e463-43a4-873f-5c522ff3522e",
 CellOpen->False]
}, Open  ]],
Cell[2227842, 44300, 1827, 32, 40, "ItemNumbered",ExpressionUUID->"77a8b371-4e85-4f3d-9ac9-6c72c5dbe23f"],
Cell[CellGroupData[{
Cell[2229694, 44336, 1031, 26, 19, "Input",ExpressionUUID->"c4fea7ee-1ed6-4850-abde-cbd384634bd4",
 CellOpen->False],
Cell[2230728, 44364, 471, 11, 19, "Message",ExpressionUUID->"02e2df48-c3fc-401e-b6df-537f546effad",
 CellOpen->False],
Cell[2231202, 44377, 19535, 342, 19, "Output",ExpressionUUID->"20d06859-0120-4238-8f14-fe287ffbcb83",
 CellOpen->False]
}, Open  ]],
Cell[2250752, 44722, 1822, 27, 56, "ItemNumbered",ExpressionUUID->"ca84ed67-39af-42de-a40b-f2ff63240efb"],
Cell[CellGroupData[{
Cell[2252599, 44753, 1153, 32, 19, "Input",ExpressionUUID->"714895bd-cc38-463f-bf9e-c93d639fbe4b",
 CellOpen->False],
Cell[2253755, 44787, 15346, 273, 19, "Output",ExpressionUUID->"3e21dedb-4439-4441-b295-57689dcf6c85",
 CellOpen->False]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[2269140, 45065, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e0c3b5b4-d621-4748-8f6d-e4117ff989f4",
 CellTags->"SlideShowHeader"]
}
]
*)

